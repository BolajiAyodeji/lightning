version: 2.1

default_version: &default_version 1.14.1

orbs:
  codecov: codecov/codecov@1.0.5

commands:
  install_node:
    steps:
      - run:
          name: 'Install Node.js and npm'
          command: |
            curl -sSL "https://nodejs.org/dist/v18.12.0/node-v18.12.0-linux-x64.tar.gz" | tar --strip-components=1 -xz -C /usr/local
      - run:
          name: Check current version of node
          command: node -v

jobs:
  build:
    parameters:
      version:
        description: Elixir version
        type: string
        default: *default_version
      execute:
        description: What steps to execute after build
        type: steps

    parallelism: 1
    docker:
      - image: elixir:<< parameters.version >>
      - image: cimg/postgres:14.2

    steps:
      - install_node
      - checkout

      - restore_cache:
          keys:
            - v1-deps-<< parameters.version >>-{{ checksum "mix.lock" }}
            - v1-deps-<< parameters.version >>-

      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: MIX_ENV=test mix do deps.get --only test, deps.compile, compile
      - run: MIX_ENV=test mix lightning.install_runtime

      - save_cache:
          key: v1-deps-<< parameters.version >>-{{ checksum "mix.lock" }}
          paths:
            - _build
            - deps
            - ~/.mix

      - restore_cache:
          keys:
            - v1-plt-<< parameters.version >>-{{ checksum "mix.lock" }}
            - v1-plt-<< parameters.version >>-
      - run: MIX_ENV=test mix dialyzer --plt
      - save_cache:
          key: v1-plt-<< parameters.version >>-{{ checksum "mix.lock" }}
          paths:
            - priv/plts
            - ~/.mix

      - steps: << parameters.execute >>

workflows:
  pre-flight checks:
    jobs:
      - build:
          name: 'Check code formatting'
          execute:
            - run: MIX_ENV=test mix format --check-formatted
      - build:
          name: 'Check code style'
          execute:
            - run: MIX_ENV=test mix credo --all
      - build:
          name: 'Type check'
          execute:
            - run: MIX_ENV=test mix dialyzer
      - build:
          name: 'Check for security vulnerabilities'
          execute:
            - run: MIX_ENV=test mix sobelow
      - build:
          name: 'Check Elixir tests (codecov)'
          execute:
            - run: MIX_ENV=test mix do ecto.create, ecto.migrate
            - run:
                command: MIX_ENV=test mix coveralls.json -o ./test/reports
            - codecov/upload:
                file: test/reports/excoveralls.json
            - store_test_results:
                path: test/reports/
      - build:
          name: 'Check Javascript tests'
          execute:
            - run: cd assets && npm install && npm run test-report
