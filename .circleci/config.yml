version: 2.1

default_version: &default_version 1.13.2

orbs:
  # TODO: decide which one we like and stick with it
  codecov: codecov/codecov@1.0.5
  coveralls: coveralls/coveralls@1.0.6

jobs:
  build:
    parameters:
      version:
        description: Elixir version
        type: string
        default: *default_version
      execute:
        description: What steps to execute after build
        type: steps

    parallelism: 1
    docker:
      - image: elixir:<< parameters.version >>
      - image: cimg/postgres:12.9

    steps:
      - checkout

      - restore_cache:
          key: testing-elixir-v<< parameters.version >>

      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: MIX_ENV=test mix do deps.get --only test, deps.compile, compile

      - save_cache:
          key: testing-elixir-v<< parameters.version >>
          paths:
            - _build
            - deps
            - ~/.mix

      - steps: << parameters.execute >>

workflows:
  pre-flight checks:
    jobs:
      - build:
          name: "Check code formatting"
          execute:
            - run: MIX_ENV=test mix format --check-formatted
      - build:
          name: "Check code style"
          execute:
            - run: MIX_ENV=test mix credo
      - build:
          name: "Type check"
          execute:
            - run: MIX_ENV=test mix dialyzer
            # TODO: speed this up
            # - restore_cache:
            #   keys:
            #     - plt-cache-{{ checksum ".version_file" }}-{{ checksum "mix.lock" }}
            # - run: MIX_ENV=test mix dialyzer --plt
            # - save_cache:
            #     key: plt-cache-{{ checksum ".version_file"  }}-{{ checksum "mix.lock" }}
            #     paths:
            #       - _build
            #       - deps
            #       - ~/.mix
      - build:
          name: "Check for security vulnerabilities"
          execute:
            - run: MIX_ENV=test mix sobelow --exit Medium
      - build:
          name: "Check elixir tests (codecov)"
          execute:
            - run: MIX_ENV=test mix do ecto.create, ecto.migrate
            - run:
                command: MIX_ENV=test mix coveralls.json -o ./test/reports
            - codecov/upload:
                file: test/reports/excoveralls.json
            - store_test_results:
                path: test/reports/
      - build:
          name: "Check elixir tests (coveralls)"
          execute:
            - run: MIX_ENV=test mix do ecto.create, ecto.migrate
            - run: MIX_ENV=test mix coveralls.circle
            - store_test_results:
                path: test/reports/
