searchNodes=[{"type":"module","title":"Lightning","doc":"Lightning keeps the contexts that define your domain and business logic. Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Lightning.html"},{"type":"module","title":"Lightning.AdaptorRegistry","doc":"Registry process to query and maintain a list of adaptors available for writing jobs. Currently it queries NPM for all modules in the @openfn organization and filters out modules that are known not to be adaptors. Usage # Starting the process AdaptorRegistry . start_link ( ) # Getting a list of all adaptors Lightning.AdaptorRegistry.AdaptorRegistry . all ( ) Caching By default the results are cached to disk, and will be reused every start. In order to disable or configure caching pass see: start_link/1 . The process uses :continue to return before the adaptors have been queried. This does mean that the first call to the process will be delayed until the handle_continue/2 has finished. Timeouts There is a 'general' timeout of 30s, this is used for GenServer calls like all/1 and also internally when the modules are being queried. NPM can be extremely fast to respond if the package is cached on their side, but can take a couple of seconds if not cached.","ref":"Lightning.AdaptorRegistry.html"},{"type":"function","title":"Lightning.AdaptorRegistry.all/1","doc":"Get the current in-process list of adaptors. This call will wait behind the :continue message when the process starts up, so it may take a while the first time it is called (and the list hasn't been fetched yet).","ref":"Lightning.AdaptorRegistry.html#all/1"},{"type":"function","title":"Lightning.AdaptorRegistry.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.AdaptorRegistry.html#child_spec/1"},{"type":"function","title":"Lightning.AdaptorRegistry.fetch/0","doc":"Fetch a list of packages for the @openfn organisation","ref":"Lightning.AdaptorRegistry.html#fetch/0"},{"type":"function","title":"Lightning.AdaptorRegistry.latest_for/2","doc":"Get a latest version for a given module.","ref":"Lightning.AdaptorRegistry.html#latest_for/2"},{"type":"function","title":"Lightning.AdaptorRegistry.resolve_adaptor/1","doc":"","ref":"Lightning.AdaptorRegistry.html#resolve_adaptor/1"},{"type":"function","title":"Lightning.AdaptorRegistry.resolve_package_name/1","doc":"Destructures an NPM style package name into module name and version. Example iex&gt; resolve_package_name ( &quot;@openfn/language-salesforce@1.2.3&quot; ) { &quot;@openfn/language-salesforce&quot; , &quot;1.2.3&quot; } iex&gt; resolve_package_name ( &quot;@openfn/language-salesforce&quot; ) { &quot;@openfn/language-salesforce&quot; , nil }","ref":"Lightning.AdaptorRegistry.html#resolve_package_name/1"},{"type":"function","title":"Lightning.AdaptorRegistry.resolve_package_name!/1","doc":"Same as resolve_package_name/1 except will throw an exception if a package name cannot be matched.","ref":"Lightning.AdaptorRegistry.html#resolve_package_name!/1"},{"type":"function","title":"Lightning.AdaptorRegistry.start_link/1","doc":"Starts the AdaptorRegistry Options :use_cache (defaults to false) - stores the last set of results on disk and uses the cached file for every subsequent start. It can either be a boolean, or a string - the latter being a file path to set where the cache file is located. :name (defaults to AdaptorRegistry) - the name of the process, useful for testing and/or running multiple versions of the registry","ref":"Lightning.AdaptorRegistry.html#start_link/1"},{"type":"function","title":"Lightning.AdaptorRegistry.versions_for/2","doc":"Get a list of versions for a given module.","ref":"Lightning.AdaptorRegistry.html#versions_for/2"},{"type":"module","title":"Lightning.AdaptorRegistry.Npm","doc":"NPM API functions","ref":"Lightning.AdaptorRegistry.Npm.html"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.delete/3","doc":"Issues a DELETE request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#delete/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.delete!/3","doc":"Issues a DELETE request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#delete!/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.get/3","doc":"Issues a GET request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#get/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.get!/3","doc":"Issues a GET request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#get!/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.head/3","doc":"Issues a HEAD request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#head/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.head!/3","doc":"Issues a HEAD request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#head!/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.options/3","doc":"Issues an OPTIONS request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#options/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.options!/3","doc":"Issues a OPTIONS request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#options!/3"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.package_detail/1","doc":"Retrieve all details for an NPM package","ref":"Lightning.AdaptorRegistry.Npm.html#package_detail/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.patch/4","doc":"Issues a PATCH request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#patch/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.patch!/4","doc":"Issues a PATCH request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#patch!/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.post/4","doc":"Issues a POST request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#post/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.post!/4","doc":"Issues a POST request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#post!/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_headers/1","doc":"Callback implementation for HTTPoison.Base.process_headers/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_headers/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_request_body/1","doc":"Callback implementation for HTTPoison.Base.process_request_body/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_request_body/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_request_headers/1","doc":"Callback implementation for HTTPoison.Base.process_request_headers/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_request_headers/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_request_options/1","doc":"Callback implementation for HTTPoison.Base.process_request_options/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_request_options/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_request_params/1","doc":"Callback implementation for HTTPoison.Base.process_request_params/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_request_params/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_response/1","doc":"Callback implementation for HTTPoison.Base.process_response/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_response/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_response_chunk/1","doc":"Callback implementation for HTTPoison.Base.process_response_chunk/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_response_chunk/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_response_headers/1","doc":"Callback implementation for HTTPoison.Base.process_response_headers/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_response_headers/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_response_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_response_status_code/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_response_status_code/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_status_code/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_status_code/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.process_url/1","doc":"Callback implementation for HTTPoison.Base.process_url/1 .","ref":"Lightning.AdaptorRegistry.Npm.html#process_url/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.put/4","doc":"Issues a PUT request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#put/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.put!/4","doc":"Issues a PUT request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#put!/4"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.request/1","doc":"Issues an HTTP request using a Request struct. This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request = % HTTPoison.Request { method : :post , url : &quot;https://my.website.com&quot; , body : &quot;{ \\&quot; foo \\&quot; : 3}&quot; , headers : [ { &quot;Accept&quot; , &quot;application/json&quot; } ] } request ( request )","ref":"Lightning.AdaptorRegistry.Npm.html#request/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.request/5","doc":"Issues an HTTP request with the given method to the given url. This function is usually used indirectly by get/3 , post/4 , put/4 , etc Args: method - HTTP method as an atom ( :get , :head , :post , :put , :delete , etc.) url - target url as a binary string or char list body - request body. See more below headers - HTTP headers as an orddict (e.g., [{&quot;Accept&quot;, &quot;application/json&quot;}] ) options - Keyword list of options Body: see type HTTPoison.Request Options: see type HTTPoison.Request This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request ( :post , &quot;https://my.website.com&quot; , &quot;{ \\&quot; foo \\&quot; : 3}&quot; , [ { &quot;Accept&quot; , &quot;application/json&quot; } ] )","ref":"Lightning.AdaptorRegistry.Npm.html#request/5"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.request!/5","doc":"Issues an HTTP request with the given method to the given url, raising an exception in case of failure. request!/5 works exactly like request/5 but it returns just the response in case of a successful request, raising an exception in case the request fails.","ref":"Lightning.AdaptorRegistry.Npm.html#request!/5"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.start/0","doc":"Starts HTTPoison and its dependencies.","ref":"Lightning.AdaptorRegistry.Npm.html#start/0"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.stream_next/1","doc":"Requests the next message to be streamed for a given HTTPoison.AsyncResponse . See request!/5 for more detailed information.","ref":"Lightning.AdaptorRegistry.Npm.html#stream_next/1"},{"type":"function","title":"Lightning.AdaptorRegistry.Npm.user_packages/1","doc":"Retrieve all packages for a given user or organization. Return empty list if application cannot connect to NPM. (E.g., because it's started offline.)","ref":"Lightning.AdaptorRegistry.Npm.html#user_packages/1"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.body/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:body/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.headers/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:headers/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.method/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:method/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.options/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:options/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.params/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:params/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.request/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:request/0"},{"type":"type","title":"Lightning.AdaptorRegistry.Npm.url/0","doc":"","ref":"Lightning.AdaptorRegistry.Npm.html#t:url/0"},{"type":"module","title":"Lightning.AdaptorService","doc":"The Adaptor Service is use to query and install adaptors in order to run jobs. On startup, it queries the filesystem for package.json files and builds up a list of available adaptors. Configuration The service requires at least :adaptors_path , which is used to both query which adaptors are installed and when to install new adaptors. Another optional setting is: :repo , which must point at a module that will be used to do the querying and installing. Installing Adaptors Using the install/2 function an adaptor can be installed, which will also add it to the list of available adaptors. The adaptor is marked as :installing , to allow for conditional behaviour elsewhere such as delaying or rejecting processing until the adaptor becomes available. Looking up adaptors The module leans on Elixir's built-in Version module to provide version lookups. When looking up an adaptor, either a string or a tuple can be used. In the case of requesting the latest version, any one of these will return the latest version the service is aware of. @openfn/language-http @openfn/language-http@latest {&quot;@openfn/language-http&quot;, nil} {&quot;@openfn/language-http&quot;, &quot;latest&quot;} {~r/language-http/, &quot;latest&quot;} You can also request a specific version, or use a range specification: @openfn/language-http@1.2.3 {&quot;@openfn/language-http&quot;, &quot;~&gt; 1.2.0&quot;} {&quot;@openfn/language-http&quot;, &quot;&lt; 2.0.0&quot;} NOTE More complex npm style install strings like: &quot;&gt;=0.1.0 &lt;0.2.0&quot; are not supported. Generally the tuple style is preferred when using range specifications as the npm style strings have a simplistic regex splitter. See Version for more details on matching versions.","ref":"Lightning.AdaptorService.html"},{"type":"function","title":"Lightning.AdaptorService.build_aliased_name/1","doc":"Turns a package name and version into a string for NPM. Since multiple versions of the same package can be installed, it's important to rely on npms built-in package aliasing. E.g. @openfn/language-http@1.2.8 turns into: ` @openfn / language - http - 1.2 . 8 @npm : @openfn / language - http @ 1.2 . 8 ` Which is pretty long winded but necessary for the reason above. If using this module as a base, it's likely you would need to adaptor this to suit your particular naming strategy.","ref":"Lightning.AdaptorService.html#build_aliased_name/1"},{"type":"function","title":"Lightning.AdaptorService.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.AdaptorService.html#child_spec/1"},{"type":"function","title":"Lightning.AdaptorService.find_adaptor/2","doc":"","ref":"Lightning.AdaptorService.html#find_adaptor/2"},{"type":"function","title":"Lightning.AdaptorService.get_adaptors/1","doc":"","ref":"Lightning.AdaptorService.html#get_adaptors/1"},{"type":"function","title":"Lightning.AdaptorService.install/2","doc":"","ref":"Lightning.AdaptorService.html#install/2"},{"type":"function","title":"Lightning.AdaptorService.install!/2","doc":"","ref":"Lightning.AdaptorService.html#install!/2"},{"type":"function","title":"Lightning.AdaptorService.installed?/2","doc":"","ref":"Lightning.AdaptorService.html#installed?/2"},{"type":"function","title":"Lightning.AdaptorService.resolve_package_name/1","doc":"","ref":"Lightning.AdaptorService.html#resolve_package_name/1"},{"type":"function","title":"Lightning.AdaptorService.start_link/1","doc":"","ref":"Lightning.AdaptorService.html#start_link/1"},{"type":"type","title":"Lightning.AdaptorService.package_spec/0","doc":"","ref":"Lightning.AdaptorService.html#t:package_spec/0"},{"type":"module","title":"Lightning.Attempt","doc":"Ecto model for Attempts.","ref":"Lightning.Attempt.html"},{"type":"function","title":"Lightning.Attempt.new/1","doc":"","ref":"Lightning.Attempt.html#new/1"},{"type":"type","title":"Lightning.Attempt.t/0","doc":"","ref":"Lightning.Attempt.html#t:t/0"},{"type":"module","title":"Lightning.AttemptRun","doc":"Ecto model for an Attempts Runs.","ref":"Lightning.AttemptRun.html"},{"type":"function","title":"Lightning.AttemptRun.new/1","doc":"","ref":"Lightning.AttemptRun.html#new/1"},{"type":"function","title":"Lightning.AttemptRun.new/2","doc":"","ref":"Lightning.AttemptRun.html#new/2"},{"type":"type","title":"Lightning.AttemptRun.t/0","doc":"","ref":"Lightning.AttemptRun.html#t:t/0"},{"type":"module","title":"Lightning.AttemptService","doc":"The Attempts context.","ref":"Lightning.AttemptService.html"},{"type":"function","title":"Lightning.AttemptService.append/2","doc":"Adds an Attempt to an unsaved Run When given an Attempt, it simply adds the Run to a new AttemptRun. However when given an AttemptRun, the Run (from the AttemptRun) is set as the previous Run for the new unsaved Run.","ref":"Lightning.AttemptService.html#append/2"},{"type":"function","title":"Lightning.AttemptService.build_attempt/2","doc":"","ref":"Lightning.AttemptService.html#build_attempt/2"},{"type":"function","title":"Lightning.AttemptService.calculate_runs/3","doc":"","ref":"Lightning.AttemptService.html#calculate_runs/3"},{"type":"function","title":"Lightning.AttemptService.create_attempt/3","doc":"Create an attempt Examples iex&gt; create_attempt ( %{ field : value } ) { :ok , % Attempt { } } iex&gt; create_attempt ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.AttemptService.html#create_attempt/3"},{"type":"function","title":"Lightning.AttemptService.get_for_rerun/2","doc":"","ref":"Lightning.AttemptService.html#get_for_rerun/2"},{"type":"function","title":"Lightning.AttemptService.get_last_attempt_for/1","doc":"Get the latest attempt associated to a given run","ref":"Lightning.AttemptService.html#get_last_attempt_for/1"},{"type":"function","title":"Lightning.AttemptService.get_workflow_for/1","doc":"","ref":"Lightning.AttemptService.html#get_workflow_for/1"},{"type":"function","title":"Lightning.AttemptService.list_for_rerun_from_job/2","doc":"Returns a list of AttemptRun structs that should be rerun for the given list of workorder ids that are associated to the given Job","ref":"Lightning.AttemptService.html#list_for_rerun_from_job/2"},{"type":"function","title":"Lightning.AttemptService.list_for_rerun_from_start/1","doc":"Returns a list of AttemptRun structs that should be rerun for the given list of work order ids.","ref":"Lightning.AttemptService.html#list_for_rerun_from_start/1"},{"type":"function","title":"Lightning.AttemptService.retry/3","doc":"Creates a new Attempt starting from a given run. All upstream/prior Runs that were performed on that attempt are associated with the new Attempt, where as the specified run is used to create a new one and is added to the Attempt. Any runs downstream from the Run given are ignored.","ref":"Lightning.AttemptService.html#retry/3"},{"type":"function","title":"Lightning.AttemptService.retry_many/2","doc":"Creates new Attempts for each pair of corresponding AttemptRun and InvocationReason.","ref":"Lightning.AttemptService.html#retry_many/2"},{"type":"module","title":"Lightning.Auditing","doc":"Context for working with Audit records.","ref":"Lightning.Auditing.html"},{"type":"function","title":"Lightning.Auditing.list_all/1","doc":"","ref":"Lightning.Auditing.html#list_all/1"},{"type":"module","title":"Lightning.Auditing.Model","doc":"Macro module to add common model behaviour to a given Ecto model","ref":"Lightning.Auditing.Model.html"},{"type":"function","title":"Lightning.Auditing.Model.event/5","doc":"Creates a schema changeset for the event identified by row_id and caused by actor_id . The given metadata can be either nil , Ecto.Changeset , struct or map. It returns :no_changes in case of an Ecto.Changeset metadata that changed nothing or an Ecto.Changeset with the event ready to be inserted.","ref":"Lightning.Auditing.Model.html#event/5"},{"type":"function","title":"Lightning.Auditing.Model.save/2","doc":"Saves the event to the Repo . In case of nothing changes, do nothing. It returns {:ok, :no_changes} if nothing changed, {:ok, struct} if the log has been successfully saved or {:error, changeset} in case of error.","ref":"Lightning.Auditing.Model.html#save/2"},{"type":"module","title":"Lightning.AuthProviders","doc":"Context module for dealing with external Auth Providers.","ref":"Lightning.AuthProviders.html"},{"type":"function","title":"Lightning.AuthProviders.build_handler/2","doc":"","ref":"Lightning.AuthProviders.html#build_handler/2"},{"type":"function","title":"Lightning.AuthProviders.create/1","doc":"","ref":"Lightning.AuthProviders.html#create/1"},{"type":"function","title":"Lightning.AuthProviders.create_handler/1","doc":"","ref":"Lightning.AuthProviders.html#create_handler/1"},{"type":"function","title":"Lightning.AuthProviders.delete!/1","doc":"","ref":"Lightning.AuthProviders.html#delete!/1"},{"type":"function","title":"Lightning.AuthProviders.get_authorize_url/1","doc":"Retrieve the authorization url for a given handler or handler name.","ref":"Lightning.AuthProviders.html#get_authorize_url/1"},{"type":"function","title":"Lightning.AuthProviders.get_existing/0","doc":"","ref":"Lightning.AuthProviders.html#get_existing/0"},{"type":"function","title":"Lightning.AuthProviders.get_existing/1","doc":"","ref":"Lightning.AuthProviders.html#get_existing/1"},{"type":"function","title":"Lightning.AuthProviders.get_handler/1","doc":"","ref":"Lightning.AuthProviders.html#get_handler/1"},{"type":"function","title":"Lightning.AuthProviders.get_handlers/0","doc":"","ref":"Lightning.AuthProviders.html#get_handlers/0"},{"type":"function","title":"Lightning.AuthProviders.new/0","doc":"","ref":"Lightning.AuthProviders.html#new/0"},{"type":"function","title":"Lightning.AuthProviders.remove_handler/1","doc":"","ref":"Lightning.AuthProviders.html#remove_handler/1"},{"type":"function","title":"Lightning.AuthProviders.update/2","doc":"","ref":"Lightning.AuthProviders.html#update/2"},{"type":"module","title":"Lightning.AuthProviders.AuthConfig","doc":"AuthProvider model","ref":"Lightning.AuthProviders.AuthConfig.html"},{"type":"type","title":"Lightning.AuthProviders.AuthConfig.t/0","doc":"","ref":"Lightning.AuthProviders.AuthConfig.html#t:t/0"},{"type":"module","title":"Lightning.AuthProviders.CacheWarmer","doc":"Dummy warmer which caches database rows every 30s.","ref":"Lightning.AuthProviders.CacheWarmer.html"},{"type":"function","title":"Lightning.AuthProviders.CacheWarmer.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.AuthProviders.CacheWarmer.html#child_spec/1"},{"type":"function","title":"Lightning.AuthProviders.CacheWarmer.execute/1","doc":"Executes this cache warmer with a connection.","ref":"Lightning.AuthProviders.CacheWarmer.html#execute/1"},{"type":"function","title":"Lightning.AuthProviders.CacheWarmer.interval/0","doc":"Returns the interval for this warmer.","ref":"Lightning.AuthProviders.CacheWarmer.html#interval/0"},{"type":"module","title":"Lightning.AuthProviders.Google","doc":"","ref":"Lightning.AuthProviders.Google.html"},{"type":"function","title":"Lightning.AuthProviders.Google.authorize_url/2","doc":"","ref":"Lightning.AuthProviders.Google.html#authorize_url/2"},{"type":"function","title":"Lightning.AuthProviders.Google.build_client/1","doc":"Builds a new client","ref":"Lightning.AuthProviders.Google.html#build_client/1"},{"type":"function","title":"Lightning.AuthProviders.Google.get_config/0","doc":"","ref":"Lightning.AuthProviders.Google.html#get_config/0"},{"type":"function","title":"Lightning.AuthProviders.Google.get_token/2","doc":"","ref":"Lightning.AuthProviders.Google.html#get_token/2"},{"type":"function","title":"Lightning.AuthProviders.Google.get_userinfo/2","doc":"","ref":"Lightning.AuthProviders.Google.html#get_userinfo/2"},{"type":"function","title":"Lightning.AuthProviders.Google.get_wellknown/0","doc":"","ref":"Lightning.AuthProviders.Google.html#get_wellknown/0"},{"type":"function","title":"Lightning.AuthProviders.Google.get_wellknown!/0","doc":"","ref":"Lightning.AuthProviders.Google.html#get_wellknown!/0"},{"type":"function","title":"Lightning.AuthProviders.Google.refresh_token/2","doc":"","ref":"Lightning.AuthProviders.Google.html#refresh_token/2"},{"type":"module","title":"Lightning.AuthProviders.Handler","doc":"Module which wraps Oauth configuration and a WellKnown document into a convenient struct that can be used to authenticate users against any OIDC compliant provider.","ref":"Lightning.AuthProviders.Handler.html"},{"type":"function","title":"Lightning.AuthProviders.Handler.authorize_url/1","doc":"","ref":"Lightning.AuthProviders.Handler.html#authorize_url/1"},{"type":"function","title":"Lightning.AuthProviders.Handler.from_model/1","doc":"Returns a Handler from a given AuthConfig","ref":"Lightning.AuthProviders.Handler.html#from_model/1"},{"type":"function","title":"Lightning.AuthProviders.Handler.get_token/2","doc":"","ref":"Lightning.AuthProviders.Handler.html#get_token/2"},{"type":"function","title":"Lightning.AuthProviders.Handler.get_userinfo/2","doc":"","ref":"Lightning.AuthProviders.Handler.html#get_userinfo/2"},{"type":"function","title":"Lightning.AuthProviders.Handler.new/2","doc":"Create a new Provider struct, expects a name and opts: :client_id - The providers issued id :client_secret - Secret for the client :redirect_uri - The URI for redirecting after authentication, usually the callback url in the router. :wellknown - A AuthProviders.WellKnown struct with the providers .well-known/openid-configuration .","ref":"Lightning.AuthProviders.Handler.html#new/2"},{"type":"type","title":"Lightning.AuthProviders.Handler.opts/0","doc":"","ref":"Lightning.AuthProviders.Handler.html#t:opts/0"},{"type":"type","title":"Lightning.AuthProviders.Handler.t/0","doc":"","ref":"Lightning.AuthProviders.Handler.html#t:t/0"},{"type":"module","title":"Lightning.AuthProviders.Store","doc":"Store module for caching Handlers. Since Handlers often have to fetch their .well-known files when being initialized we cache these in order to avoid repeatedly making HTTP requests to a providers API.","ref":"Lightning.AuthProviders.Store.html"},{"type":"function","title":"Lightning.AuthProviders.Store.get_handler/2","doc":"","ref":"Lightning.AuthProviders.Store.html#get_handler/2"},{"type":"function","title":"Lightning.AuthProviders.Store.get_handlers/0","doc":"","ref":"Lightning.AuthProviders.Store.html#get_handlers/0"},{"type":"function","title":"Lightning.AuthProviders.Store.put_handler/2","doc":"","ref":"Lightning.AuthProviders.Store.html#put_handler/2"},{"type":"function","title":"Lightning.AuthProviders.Store.remove_handler/1","doc":"","ref":"Lightning.AuthProviders.Store.html#remove_handler/1"},{"type":"type","title":"Lightning.AuthProviders.Store.finder/0","doc":"","ref":"Lightning.AuthProviders.Store.html#t:finder/0"},{"type":"module","title":"Lightning.AuthProviders.WellKnown","doc":"A datastructure to fetch and hold information about a given OIDC/OAuth provider","ref":"Lightning.AuthProviders.WellKnown.html"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.delete/3","doc":"Issues a DELETE request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#delete/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.delete!/3","doc":"Issues a DELETE request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#delete!/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.fetch/1","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#fetch/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.fetch!/1","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#fetch!/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.get/3","doc":"Issues a GET request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#get/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.get!/3","doc":"Issues a GET request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#get!/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.head/3","doc":"Issues a HEAD request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#head/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.head!/3","doc":"Issues a HEAD request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#head!/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.new/1","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#new/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.options/3","doc":"Issues an OPTIONS request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#options/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.options!/3","doc":"Issues a OPTIONS request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#options!/3"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.patch/4","doc":"Issues a PATCH request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#patch/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.patch!/4","doc":"Issues a PATCH request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#patch!/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.post/4","doc":"Issues a POST request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#post/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.post!/4","doc":"Issues a POST request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#post!/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_headers/1","doc":"Callback implementation for HTTPoison.Base.process_headers/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_headers/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_request_body/1","doc":"Callback implementation for HTTPoison.Base.process_request_body/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_request_body/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_request_headers/1","doc":"Callback implementation for HTTPoison.Base.process_request_headers/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_request_headers/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_request_options/1","doc":"Callback implementation for HTTPoison.Base.process_request_options/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_request_options/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_request_params/1","doc":"Callback implementation for HTTPoison.Base.process_request_params/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_request_params/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_request_url/1","doc":"Callback implementation for HTTPoison.Base.process_request_url/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_request_url/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_response/1","doc":"Callback implementation for HTTPoison.Base.process_response/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_response/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_response_body/1","doc":"Callback implementation for HTTPoison.Base.process_response_body/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_response_body/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_response_chunk/1","doc":"Callback implementation for HTTPoison.Base.process_response_chunk/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_response_chunk/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_response_headers/1","doc":"Callback implementation for HTTPoison.Base.process_response_headers/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_response_headers/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_response_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_response_status_code/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_response_status_code/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_status_code/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_status_code/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.process_url/1","doc":"Callback implementation for HTTPoison.Base.process_url/1 .","ref":"Lightning.AuthProviders.WellKnown.html#process_url/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.put/4","doc":"Issues a PUT request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#put/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.put!/4","doc":"Issues a PUT request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#put!/4"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.request/1","doc":"Issues an HTTP request using a Request struct. This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request = % HTTPoison.Request { method : :post , url : &quot;https://my.website.com&quot; , body : &quot;{ \\&quot; foo \\&quot; : 3}&quot; , headers : [ { &quot;Accept&quot; , &quot;application/json&quot; } ] } request ( request )","ref":"Lightning.AuthProviders.WellKnown.html#request/1"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.request/5","doc":"Issues an HTTP request with the given method to the given url. This function is usually used indirectly by get/3 , post/4 , put/4 , etc Args: method - HTTP method as an atom ( :get , :head , :post , :put , :delete , etc.) url - target url as a binary string or char list body - request body. See more below headers - HTTP headers as an orddict (e.g., [{&quot;Accept&quot;, &quot;application/json&quot;}] ) options - Keyword list of options Body: see type HTTPoison.Request Options: see type HTTPoison.Request This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request ( :post , &quot;https://my.website.com&quot; , &quot;{ \\&quot; foo \\&quot; : 3}&quot; , [ { &quot;Accept&quot; , &quot;application/json&quot; } ] )","ref":"Lightning.AuthProviders.WellKnown.html#request/5"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.request!/5","doc":"Issues an HTTP request with the given method to the given url, raising an exception in case of failure. request!/5 works exactly like request/5 but it returns just the response in case of a successful request, raising an exception in case the request fails.","ref":"Lightning.AuthProviders.WellKnown.html#request!/5"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.start/0","doc":"Starts HTTPoison and its dependencies.","ref":"Lightning.AuthProviders.WellKnown.html#start/0"},{"type":"function","title":"Lightning.AuthProviders.WellKnown.stream_next/1","doc":"Requests the next message to be streamed for a given HTTPoison.AsyncResponse . See request!/5 for more detailed information.","ref":"Lightning.AuthProviders.WellKnown.html#stream_next/1"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.body/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:body/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.headers/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:headers/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.method/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:method/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.options/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:options/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.params/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:params/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.request/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:request/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.t/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:t/0"},{"type":"type","title":"Lightning.AuthProviders.WellKnown.url/0","doc":"","ref":"Lightning.AuthProviders.WellKnown.html#t:url/0"},{"type":"module","title":"Lightning.CLI","doc":"Module providing facilities to make calls to the OpenFn CLI. See @openfn/cli","ref":"Lightning.CLI.html"},{"type":"function","title":"Lightning.CLI.execute/1","doc":"Execute a command in a child process and parse the results.","ref":"Lightning.CLI.html#execute/1"},{"type":"function","title":"Lightning.CLI.metadata/2","doc":"Retrieve metadata for a given adaptor and configuration.","ref":"Lightning.CLI.html#metadata/2"},{"type":"module","title":"Lightning.CLI.Result","doc":"Struct that wraps the output of an OpenFn CLI call. Containing the keys: start_time end_time status logs Logs The OpenFn CLI returns JSON formatted log lines, which are decoded and added to a Result struct. There are two kinds of output: { &quot;level&quot; :&quot;&lt;&lt;level&gt;&gt;&quot; , &quot;name&quot; :&quot;&lt;&lt;module&gt;&gt;&quot; , &quot;message&quot; :&quot;...&quot; ] , &quot;time&quot; :&lt; &lt; timestamp &gt;&gt; } These are usually for general logging, and debugging. { &quot;message&quot; : [ &quot;&lt;&lt;message|filepath|output&gt;&gt;&quot; ] } The above is the equivalent of the output of a command","ref":"Lightning.CLI.Result.html"},{"type":"function","title":"Lightning.CLI.Result.get_messages/1","doc":"Returns message type log lines from a Result .","ref":"Lightning.CLI.Result.html#get_messages/1"},{"type":"function","title":"Lightning.CLI.Result.new/1","doc":"","ref":"Lightning.CLI.Result.html#new/1"},{"type":"function","title":"Lightning.CLI.Result.parse/2","doc":"","ref":"Lightning.CLI.Result.html#parse/2"},{"type":"type","title":"Lightning.CLI.Result.t/0","doc":"","ref":"Lightning.CLI.Result.html#t:t/0"},{"type":"module","title":"Lightning.Demo","doc":"Demo encapsulates logic for setting up a demonstration site.","ref":"Lightning.Demo.html"},{"type":"function","title":"Lightning.Demo.reset_demo/0","doc":"Deletes everything in the database including the superuser and creates a set of publicly available users for a demo site via a command that can be run on Kubernetes-deployed systems.","ref":"Lightning.Demo.html#reset_demo/0"},{"type":"module","title":"Lightning.ExportUtils","doc":"Module that expose a function generating a complete and valid yaml string from a project and its workflows.","ref":"Lightning.ExportUtils.html"},{"type":"function","title":"Lightning.ExportUtils.build_yaml_tree/2","doc":"","ref":"Lightning.ExportUtils.html#build_yaml_tree/2"},{"type":"function","title":"Lightning.ExportUtils.generate_new_yaml/1","doc":"","ref":"Lightning.ExportUtils.html#generate_new_yaml/1"},{"type":"module","title":"Lightning.FailureNotifierView","doc":"","ref":"Lightning.FailureNotifierView.html"},{"type":"function","title":"Lightning.FailureNotifierView.__resource__/0","doc":"The resource name, as an atom, for this view","ref":"Lightning.FailureNotifierView.html#__resource__/0"},{"type":"function","title":"Lightning.FailureNotifierView.failure_alert.html/1","doc":"","ref":"Lightning.FailureNotifierView.html#failure_alert.html/1"},{"type":"function","title":"Lightning.FailureNotifierView.render/2","doc":"Renders the given template locally.","ref":"Lightning.FailureNotifierView.html#render/2"},{"type":"function","title":"Lightning.FailureNotifierView.template_not_found/2","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Lightning.FailureNotifierView.html#template_not_found/2"},{"type":"module","title":"Lightning.Helpers","doc":"Common functions for the context","ref":"Lightning.Helpers.html"},{"type":"function","title":"Lightning.Helpers.coerce_json_field/2","doc":"Changes a given maps field from a json string to a map. If it cannot be converted, it leaves the original value","ref":"Lightning.Helpers.html#coerce_json_field/2"},{"type":"function","title":"Lightning.Helpers.indefinite_article/1","doc":"","ref":"Lightning.Helpers.html#indefinite_article/1"},{"type":"function","title":"Lightning.Helpers.json_safe/1","doc":"Recursively ensures a given map is safe to convert to JSON, where all keys are strings and all values are json safe (primitive values).","ref":"Lightning.Helpers.html#json_safe/1"},{"type":"function","title":"Lightning.Helpers.ms_to_human/1","doc":"Converts milliseconds (integer) to a human duration, such as &quot;1 minute&quot; or &quot;45 years, 6 months, 5 days, 21 hours, 12 minutes, 34 seconds&quot; using Timex.Format.Duration.Formatters.Humanized.format() .","ref":"Lightning.Helpers.html#ms_to_human/1"},{"type":"module","title":"Lightning.MetadataService","doc":"Retrieves metadata for a given credential and adaptor using the OpenFn CLI.","ref":"Lightning.MetadataService.html"},{"type":"function","title":"Lightning.MetadataService.fetch/2","doc":"Retrieve metadata for a given adaptor and credential. The adaptor must be an npm specification.","ref":"Lightning.MetadataService.html#fetch/2"},{"type":"module","title":"Lightning.Name","doc":"Generates a random names.","ref":"Lightning.Name.html"},{"type":"function","title":"Lightning.Name.generate/1","doc":"","ref":"Lightning.Name.html#generate/1"},{"type":"module","title":"Lightning.ObanManager","doc":"The Oban Manager","ref":"Lightning.ObanManager.html"},{"type":"function","title":"Lightning.ObanManager.handle_event/4","doc":"","ref":"Lightning.ObanManager.html#handle_event/4"},{"type":"module","title":"Lightning.Policies.Permissions","doc":"This module defines a unique interface managing authorizations in Lightning. Users in Lightning have instance-wide and project-wide roles which determine their level of access to resources in the application. Fo rmore details see the documentation . These authorizations policies are all implemented under the lib/lightning/policies folder. In that folder you can find 3 files: The users.ex file has all the policies for the instances wide access levels The project_users.ex file has all the policies for the project wide access levels The permissions.ex file defines the Lightning.Policies.Permissions.can/4 interface. Which is a wrapper around the Bodyguard.permit/4 function. We use that interface to be able to harmonize the use of policies accross the entire app. All the policies are tested in the test/lightning/policies folder. And the test are written in a way that allows the reader to quickly who can do what in the app. We have two variants of the Lightning.Policies.Permissions.can/4 interface: Lightning.Policies.Permissions.can(policy, action, actor, resource) returns :ok if the actor can perform the action on the resource and {:error, :unauthorized} otherwise. Lightning.Policies.Permissions.can?(policy, action, actor, resource) returns true if the actor can perform the action on the resource and false otherwise. Here is an example of how we the Lightning.Policies.Permissions.can/4 interface to check if the a user can edit a job or not can_edit_job = Lightning.Policies.ProjectUsers |&gt; Lightning.Policies.Permissions . can? ( :edit_job , socket . assigns . current_user , socket . assigns . project ) if can_edit_job do # allow user to edit the job else # quick user out end","ref":"Lightning.Policies.Permissions.html"},{"type":"function","title":"Lightning.Policies.Permissions.can/4","doc":"checks if user has the permissions to apply action using some policy module Returns :ok if user can apply action and {:error, :unauthorized} otherwise Examples iex&gt; can ( Lightning.Policies.Users , :create_workflow , user , project ) :ok iex&gt; can ( Lightning.Policies.Users , :create_project , user , %{ } ) { :error , :unauthorized }","ref":"Lightning.Policies.Permissions.html#can/4"},{"type":"function","title":"Lightning.Policies.Permissions.can?/4","doc":"same as can/4 but returns true if user can apply action and false otherwise Examples iex&gt; can ( Lightning.Policies.Users , :create_workflow , user , project ) true iex&gt; can ( Lightning.Policies.Users , :create_project , user , %{ } ) false","ref":"Lightning.Policies.Permissions.html#can?/4"},{"type":"module","title":"Lightning.Policies.ProjectUsers","doc":"The Bodyguard Policy module for projects members roles.","ref":"Lightning.Policies.ProjectUsers.html"},{"type":"function","title":"Lightning.Policies.ProjectUsers.authorize/3","doc":"authorize/3 takes an action, a user, and a project. It checks the user's role for this project and returns true if the user can perform the action in that project and false if they cannot. Note that permissions are grouped by action, rather than by user role. We deny by default, so if a user's role is not added to the allow roles list for a particular action they are denied.","ref":"Lightning.Policies.ProjectUsers.html#authorize/3"},{"type":"type","title":"Lightning.Policies.ProjectUsers.actions/0","doc":"","ref":"Lightning.Policies.ProjectUsers.html#t:actions/0"},{"type":"module","title":"Lightning.Policies.Provisioning","doc":"The Bodyguard Policy module for users roles.","ref":"Lightning.Policies.Provisioning.html"},{"type":"function","title":"Lightning.Policies.Provisioning.authorize/3","doc":"authorize/3 takes an action, a user, and a project. It checks the user's role for this project and returns true if the user can perform the action and false if they cannot. Note that permissions are grouped by action. We deny by default, so if a user's role is not added to the allow roles list for a particular action they are denied. Only a superuser can provision a new project. Owners and admins can update existing projects.","ref":"Lightning.Policies.Provisioning.html#authorize/3"},{"type":"type","title":"Lightning.Policies.Provisioning.actions/0","doc":"","ref":"Lightning.Policies.Provisioning.html#t:actions/0"},{"type":"module","title":"Lightning.Policies.Users","doc":"The Bodyguard Policy module for users roles.","ref":"Lightning.Policies.Users.html"},{"type":"function","title":"Lightning.Policies.Users.authorize/3","doc":"authorize/3 takes an action, a user, and a project. It checks the user's role for this project and returns true if the user can perform the action and false if they cannot. Note that permissions are grouped by action. We deny by default, so if a user's role is not added to the allow roles list for a particular action they are denied.","ref":"Lightning.Policies.Users.html#authorize/3"},{"type":"type","title":"Lightning.Policies.Users.actions/0","doc":"","ref":"Lightning.Policies.Users.html#t:actions/0"},{"type":"module","title":"Lightning.Release","doc":"Used for executing DB release tasks when run in production without Mix installed.","ref":"Lightning.Release.html"},{"type":"function","title":"Lightning.Release.create_db/0","doc":"","ref":"Lightning.Release.html#create_db/0"},{"type":"function","title":"Lightning.Release.load_app/0","doc":"","ref":"Lightning.Release.html#load_app/0"},{"type":"function","title":"Lightning.Release.migrate/0","doc":"","ref":"Lightning.Release.html#migrate/0"},{"type":"function","title":"Lightning.Release.rollback/2","doc":"","ref":"Lightning.Release.html#rollback/2"},{"type":"module","title":"Lightning.Repo","doc":"","ref":"Lightning.Repo.html"},{"type":"function","title":"Lightning.Repo.aggregate/3","doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Lightning.Repo.html#aggregate/3"},{"type":"function","title":"Lightning.Repo.aggregate/4","doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Lightning.Repo.html#aggregate/4"},{"type":"function","title":"Lightning.Repo.all/2","doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Lightning.Repo.html#all/2"},{"type":"function","title":"Lightning.Repo.checked_out?/0","doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Lightning.Repo.html#checked_out?/0"},{"type":"function","title":"Lightning.Repo.checkout/2","doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Lightning.Repo.html#checkout/2"},{"type":"function","title":"Lightning.Repo.child_spec/1","doc":"","ref":"Lightning.Repo.html#child_spec/1"},{"type":"function","title":"Lightning.Repo.config/0","doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Lightning.Repo.html#config/0"},{"type":"function","title":"Lightning.Repo.default_options/1","doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Lightning.Repo.html#default_options/1"},{"type":"function","title":"Lightning.Repo.delete/2","doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Lightning.Repo.html#delete/2"},{"type":"function","title":"Lightning.Repo.delete!/2","doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Lightning.Repo.html#delete!/2"},{"type":"function","title":"Lightning.Repo.delete_all/2","doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Lightning.Repo.html#delete_all/2"},{"type":"function","title":"Lightning.Repo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"Lightning.Repo.html#disconnect_all/2"},{"type":"function","title":"Lightning.Repo.exists?/2","doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Lightning.Repo.html#exists?/2"},{"type":"function","title":"Lightning.Repo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Lightning.Repo.html#explain/3"},{"type":"function","title":"Lightning.Repo.get/3","doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Lightning.Repo.html#get/3"},{"type":"function","title":"Lightning.Repo.get!/3","doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Lightning.Repo.html#get!/3"},{"type":"function","title":"Lightning.Repo.get_by/3","doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Lightning.Repo.html#get_by/3"},{"type":"function","title":"Lightning.Repo.get_by!/3","doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Lightning.Repo.html#get_by!/3"},{"type":"function","title":"Lightning.Repo.get_dynamic_repo/0","doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Lightning.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"Lightning.Repo.in_transaction?/0","doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Lightning.Repo.html#in_transaction?/0"},{"type":"function","title":"Lightning.Repo.insert/2","doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Lightning.Repo.html#insert/2"},{"type":"function","title":"Lightning.Repo.insert!/2","doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Lightning.Repo.html#insert!/2"},{"type":"function","title":"Lightning.Repo.insert_all/3","doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Lightning.Repo.html#insert_all/3"},{"type":"function","title":"Lightning.Repo.insert_or_update/2","doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Lightning.Repo.html#insert_or_update/2"},{"type":"function","title":"Lightning.Repo.insert_or_update!/2","doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Lightning.Repo.html#insert_or_update!/2"},{"type":"function","title":"Lightning.Repo.load/2","doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Lightning.Repo.html#load/2"},{"type":"function","title":"Lightning.Repo.one/2","doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Lightning.Repo.html#one/2"},{"type":"function","title":"Lightning.Repo.one!/2","doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Lightning.Repo.html#one!/2"},{"type":"function","title":"Lightning.Repo.paginate/2","doc":"","ref":"Lightning.Repo.html#paginate/2"},{"type":"function","title":"Lightning.Repo.preload/3","doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Lightning.Repo.html#preload/3"},{"type":"function","title":"Lightning.Repo.prepare_query/3","doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Lightning.Repo.html#prepare_query/3"},{"type":"function","title":"Lightning.Repo.put_dynamic_repo/1","doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Lightning.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"Lightning.Repo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Lightning.Repo.html#query/3"},{"type":"function","title":"Lightning.Repo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Lightning.Repo.html#query!/3"},{"type":"function","title":"Lightning.Repo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"Lightning.Repo.html#query_many/3"},{"type":"function","title":"Lightning.Repo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"Lightning.Repo.html#query_many!/3"},{"type":"function","title":"Lightning.Repo.reload/2","doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Lightning.Repo.html#reload/2"},{"type":"function","title":"Lightning.Repo.reload!/2","doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Lightning.Repo.html#reload!/2"},{"type":"function","title":"Lightning.Repo.rollback/1","doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Lightning.Repo.html#rollback/1"},{"type":"function","title":"Lightning.Repo.scrivener_defaults/0","doc":"","ref":"Lightning.Repo.html#scrivener_defaults/0"},{"type":"function","title":"Lightning.Repo.start_link/1","doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Lightning.Repo.html#start_link/1"},{"type":"function","title":"Lightning.Repo.stop/1","doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Lightning.Repo.html#stop/1"},{"type":"function","title":"Lightning.Repo.stream/2","doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Lightning.Repo.html#stream/2"},{"type":"function","title":"Lightning.Repo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Lightning.Repo.html#to_sql/2"},{"type":"function","title":"Lightning.Repo.transact/2","doc":"A small wrapper around Repo.transaction/2'. Commits the transaction if the lambda returns :ok or , rolling it back if the lambda returns :error or `. In both cases, the function returns the result of the lambda.","ref":"Lightning.Repo.html#transact/2"},{"type":"function","title":"Lightning.Repo.transaction/2","doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Lightning.Repo.html#transaction/2"},{"type":"function","title":"Lightning.Repo.update/2","doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Lightning.Repo.html#update/2"},{"type":"function","title":"Lightning.Repo.update!/2","doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Lightning.Repo.html#update!/2"},{"type":"function","title":"Lightning.Repo.update_all/3","doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Lightning.Repo.html#update_all/3"},{"type":"module","title":"Lightning.RunSearchForm","doc":"Run filtering search form.","ref":"Lightning.RunSearchForm.html"},{"type":"module","title":"Lightning.SafetyString","doc":"Utilities for securely encoding serializable structs, lists and strings into URL-safe strings. In order to pass the state around in a URL, in a manner that protects secrets from leaking - and allows us to avoid persistance we take a set of parameters and: Encode into a URI query string gzip it to save characters encrypt the string base64 encode it for URI encoding safety","ref":"Lightning.SafetyString.html"},{"type":"function","title":"Lightning.SafetyString.decode/1","doc":"","ref":"Lightning.SafetyString.html#decode/1"},{"type":"function","title":"Lightning.SafetyString.encode/1","doc":"","ref":"Lightning.SafetyString.html#encode/1"},{"type":"module","title":"Lightning.Scrubber","doc":"Process used to scrub strings of sensitive information. Can be started via start_link/1 . { :ok , scrubber } = Lightning.Scrubber . start_link ( samples : Lightning.Credentials . sensitive_values_for ( credential ) ) Takes an optional :name key, in case you need to name the process.","ref":"Lightning.Scrubber.html"},{"type":"function","title":"Lightning.Scrubber.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.Scrubber.html#child_spec/1"},{"type":"function","title":"Lightning.Scrubber.encode_samples/1","doc":"Prepare a list of sensitive samples (strings) into a potentially bigger list composed of variations a sample may appear.","ref":"Lightning.Scrubber.html#encode_samples/1"},{"type":"function","title":"Lightning.Scrubber.samples/1","doc":"","ref":"Lightning.Scrubber.html#samples/1"},{"type":"function","title":"Lightning.Scrubber.scrub/2","doc":"","ref":"Lightning.Scrubber.html#scrub/2"},{"type":"function","title":"Lightning.Scrubber.start_link/1","doc":"","ref":"Lightning.Scrubber.html#start_link/1"},{"type":"module","title":"Lightning.SetupUtils","doc":"SetupUtils encapsulates logic for setting up initial data for various sites.","ref":"Lightning.SetupUtils.html"},{"type":"function","title":"Lightning.SetupUtils.add_and_update_runs/3","doc":"","ref":"Lightning.SetupUtils.html#add_and_update_runs/3"},{"type":"function","title":"Lightning.SetupUtils.create_dhis2_project/1","doc":"","ref":"Lightning.SetupUtils.html#create_dhis2_project/1"},{"type":"function","title":"Lightning.SetupUtils.create_openhie_project/1","doc":"","ref":"Lightning.SetupUtils.html#create_openhie_project/1"},{"type":"function","title":"Lightning.SetupUtils.create_starter_project/2","doc":"","ref":"Lightning.SetupUtils.html#create_starter_project/2"},{"type":"function","title":"Lightning.SetupUtils.create_users/1","doc":"","ref":"Lightning.SetupUtils.html#create_users/1"},{"type":"function","title":"Lightning.SetupUtils.setup_demo/1","doc":"Creates initial data and returns the created records.","ref":"Lightning.SetupUtils.html#setup_demo/1"},{"type":"function","title":"Lightning.SetupUtils.tear_down/1","doc":"","ref":"Lightning.SetupUtils.html#tear_down/1"},{"type":"module","title":"Lightning.TaskWorker","doc":"A TaskWorker with concurrency limits. A simple concurrency limiter that wraps Task.Supervisor , which already does have the ability to specify max_children ; it throws an error when that limit is exceeded. To use it, start it like any other process; ideally in your supervision tree. ... , { Lightning.TaskWorker , name : :cli_task_worker , max_tasks : 4 } Options :max_tasks Defaults to the number of system schedulers available to the vm.","ref":"Lightning.TaskWorker.html"},{"type":"function","title":"Lightning.TaskWorker.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.TaskWorker.html#child_spec/1"},{"type":"function","title":"Lightning.TaskWorker.get_status/1","doc":"","ref":"Lightning.TaskWorker.html#get_status/1"},{"type":"function","title":"Lightning.TaskWorker.start_link/1","doc":"","ref":"Lightning.TaskWorker.html#start_link/1"},{"type":"function","title":"Lightning.TaskWorker.start_task/2","doc":"","ref":"Lightning.TaskWorker.html#start_task/2"},{"type":"module","title":"Lightning.Validators","doc":"Extra validators for Ecto.Changeset.","ref":"Lightning.Validators.html"},{"type":"function","title":"Lightning.Validators.validate_exclusive/3","doc":"Validate that only one of the fields is set at a time. Example: changeset |&gt; validate_exclusive ( [ :source_job_id , :source_trigger_id ] , &quot;source_job_id and source_trigger_id are mutually exclusive&quot; )","ref":"Lightning.Validators.html#validate_exclusive/3"},{"type":"function","title":"Lightning.Validators.validate_one_required/3","doc":"Validate that at least one of the fields is set.","ref":"Lightning.Validators.html#validate_one_required/3"},{"type":"module","title":"Lightning.Vault","doc":"Module for handling the encryption and decryption of database fields.","ref":"Lightning.Vault.html"},{"type":"function","title":"Lightning.Vault.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.Vault.html#child_spec/1"},{"type":"function","title":"Lightning.Vault.start_link/1","doc":"","ref":"Lightning.Vault.html#start_link/1"},{"type":"module","title":"Lightning.VersionControl","doc":"Boundary module for handling Version control activities for project, jobs workflows etc Use this module to create, modify and delete connections as well as running any associated sync jobs","ref":"Lightning.VersionControl.html"},{"type":"function","title":"Lightning.VersionControl.add_github_installation_id/2","doc":"","ref":"Lightning.VersionControl.html#add_github_installation_id/2"},{"type":"function","title":"Lightning.VersionControl.add_github_repo_and_branch/3","doc":"","ref":"Lightning.VersionControl.html#add_github_repo_and_branch/3"},{"type":"function","title":"Lightning.VersionControl.create_github_connection/1","doc":"Creates a connection between a project and a github repo","ref":"Lightning.VersionControl.html#create_github_connection/1"},{"type":"function","title":"Lightning.VersionControl.fetch_installation_repos/1","doc":"","ref":"Lightning.VersionControl.html#fetch_installation_repos/1"},{"type":"function","title":"Lightning.VersionControl.fetch_repo_branches/2","doc":"","ref":"Lightning.VersionControl.html#fetch_repo_branches/2"},{"type":"function","title":"Lightning.VersionControl.get_repo_connection/1","doc":"","ref":"Lightning.VersionControl.html#get_repo_connection/1"},{"type":"function","title":"Lightning.VersionControl.github_enabled?/0","doc":"","ref":"Lightning.VersionControl.html#github_enabled?/0"},{"type":"function","title":"Lightning.VersionControl.remove_github_connection/1","doc":"Deletes a github connection used when re installing","ref":"Lightning.VersionControl.html#remove_github_connection/1"},{"type":"function","title":"Lightning.VersionControl.run_sync/2","doc":"","ref":"Lightning.VersionControl.html#run_sync/2"},{"type":"module","title":"Lightning.VersionControl.GithubClient","doc":"Tesla github http client we use this to make any network requests to github from Lightning","ref":"Lightning.VersionControl.GithubClient.html"},{"type":"function","title":"Lightning.VersionControl.GithubClient.delete/3","doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#delete/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.delete!/3","doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#delete!/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.fire_repository_dispatch/3","doc":"","ref":"Lightning.VersionControl.GithubClient.html#fire_repository_dispatch/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.get/3","doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#get/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.get!/3","doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#get!/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.get_repo_branches/2","doc":"","ref":"Lightning.VersionControl.GithubClient.html#get_repo_branches/2"},{"type":"function","title":"Lightning.VersionControl.GithubClient.head/3","doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#head/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.head!/3","doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#head!/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.installation_repos/1","doc":"","ref":"Lightning.VersionControl.GithubClient.html#installation_repos/1"},{"type":"function","title":"Lightning.VersionControl.GithubClient.options/3","doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#options/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.options!/3","doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#options!/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.patch/4","doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#patch/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.patch!/4","doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#patch!/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.post/4","doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#post/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.post!/4","doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#post!/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.put/4","doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#put/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.put!/4","doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Lightning.VersionControl.GithubClient.html#put!/4"},{"type":"function","title":"Lightning.VersionControl.GithubClient.request/2","doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#request/2"},{"type":"function","title":"Lightning.VersionControl.GithubClient.request!/2","doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Lightning.VersionControl.GithubClient.html#request!/2"},{"type":"function","title":"Lightning.VersionControl.GithubClient.send_sentry_error/2","doc":"","ref":"Lightning.VersionControl.GithubClient.html#send_sentry_error/2"},{"type":"function","title":"Lightning.VersionControl.GithubClient.trace/3","doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#trace/3"},{"type":"function","title":"Lightning.VersionControl.GithubClient.trace!/3","doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Lightning.VersionControl.GithubClient.html#trace!/3"},{"type":"type","title":"Lightning.VersionControl.GithubClient.option/0","doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Lightning.VersionControl.GithubClient.html#t:option/0"},{"type":"module","title":"Lightning.VersionControl.GithubToken","doc":"A module that uses Joken to handle building and signing application tokens for communicating with github See: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app#about-json-web-tokens-jwts","ref":"Lightning.VersionControl.GithubToken.html"},{"type":"function","title":"Lightning.VersionControl.GithubToken.build/2","doc":"","ref":"Lightning.VersionControl.GithubToken.html#build/2"},{"type":"function","title":"Lightning.VersionControl.GithubToken.generate_and_sign/2","doc":"Combines generate_claims/1 and encode_and_sign/2","ref":"Lightning.VersionControl.GithubToken.html#generate_and_sign/2"},{"type":"function","title":"Lightning.VersionControl.GithubToken.generate_and_sign!/2","doc":"Same as generate_and_sign/2 but raises if error","ref":"Lightning.VersionControl.GithubToken.html#generate_and_sign!/2"},{"type":"function","title":"Lightning.VersionControl.GithubToken.verify_and_validate/3","doc":"Combines verify/2 and validate/2","ref":"Lightning.VersionControl.GithubToken.html#verify_and_validate/3"},{"type":"function","title":"Lightning.VersionControl.GithubToken.verify_and_validate!/3","doc":"Same as verify_and_validate/2 but raises if error","ref":"Lightning.VersionControl.GithubToken.html#verify_and_validate!/3"},{"type":"module","title":"Lightning.VersionControl.ProjectRepoConnection","doc":"Ecto model for project repo connections","ref":"Lightning.VersionControl.ProjectRepoConnection.html"},{"type":"function","title":"Lightning.VersionControl.ProjectRepoConnection.changeset/2","doc":"","ref":"Lightning.VersionControl.ProjectRepoConnection.html#changeset/2"},{"type":"type","title":"Lightning.VersionControl.ProjectRepoConnection.t/0","doc":"","ref":"Lightning.VersionControl.ProjectRepoConnection.html#t:t/0"},{"type":"module","title":"Lightning.WorkOrder","doc":"Ecto model for Workorders.","ref":"Lightning.WorkOrder.html"},{"type":"function","title":"Lightning.WorkOrder.new/0","doc":"","ref":"Lightning.WorkOrder.html#new/0"},{"type":"type","title":"Lightning.WorkOrder.t/0","doc":"","ref":"Lightning.WorkOrder.html#t:t/0"},{"type":"module","title":"Lightning.WorkOrderService","doc":"The WorkOrderService.","ref":"Lightning.WorkOrderService.html"},{"type":"function","title":"Lightning.WorkOrderService.attempt_updated/1","doc":"","ref":"Lightning.WorkOrderService.html#attempt_updated/1"},{"type":"function","title":"Lightning.WorkOrderService.build/2","doc":"","ref":"Lightning.WorkOrderService.html#build/2"},{"type":"function","title":"Lightning.WorkOrderService.create_manual_workorder/3","doc":"","ref":"Lightning.WorkOrderService.html#create_manual_workorder/3"},{"type":"function","title":"Lightning.WorkOrderService.create_webhook_workorder/2","doc":"","ref":"Lightning.WorkOrderService.html#create_webhook_workorder/2"},{"type":"function","title":"Lightning.WorkOrderService.create_work_order/1","doc":"Creates a work_order. Examples iex&gt; create_work_order ( %{ field : value } ) { :ok , % WorkOrder { } } iex&gt; create_work_order ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.WorkOrderService.html#create_work_order/1"},{"type":"function","title":"Lightning.WorkOrderService.multi_for/3","doc":"","ref":"Lightning.WorkOrderService.html#multi_for/3"},{"type":"function","title":"Lightning.WorkOrderService.multi_for_manual/3","doc":"","ref":"Lightning.WorkOrderService.html#multi_for_manual/3"},{"type":"function","title":"Lightning.WorkOrderService.retry_attempt_run/2","doc":"","ref":"Lightning.WorkOrderService.html#retry_attempt_run/2"},{"type":"function","title":"Lightning.WorkOrderService.retry_attempt_runs/2","doc":"","ref":"Lightning.WorkOrderService.html#retry_attempt_runs/2"},{"type":"function","title":"Lightning.WorkOrderService.subscribe/1","doc":"","ref":"Lightning.WorkOrderService.html#subscribe/1"},{"type":"module","title":"Lightning.WorkOrders.Manual","doc":"A model is used to build WorkOrders with custom input data.","ref":"Lightning.WorkOrders.Manual.html"},{"type":"function","title":"Lightning.WorkOrders.Manual.changeset/2","doc":"","ref":"Lightning.WorkOrders.Manual.html#changeset/2"},{"type":"type","title":"Lightning.WorkOrders.Manual.t/0","doc":"","ref":"Lightning.WorkOrders.Manual.html#t:t/0"},{"type":"module","title":"Lightning.Workflows","doc":"The Workflows context.","ref":"Lightning.Workflows.html"},{"type":"function","title":"Lightning.Workflows.build_trigger/1","doc":"Builds a Trigger","ref":"Lightning.Workflows.html#build_trigger/1"},{"type":"function","title":"Lightning.Workflows.change_workflow/2","doc":"Returns an %Ecto.Changeset{} for tracking workflow changes. Examples iex&gt; change_workflow ( workflow ) % Ecto.Changeset { data : % Workflow { } }","ref":"Lightning.Workflows.html#change_workflow/2"},{"type":"function","title":"Lightning.Workflows.create_edge/1","doc":"Creates an edge","ref":"Lightning.Workflows.html#create_edge/1"},{"type":"function","title":"Lightning.Workflows.create_workflow/1","doc":"Creates a workflow. Examples iex&gt; create_workflow ( %{ field : value } ) { :ok , % Workflow { } } iex&gt; create_workflow ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Workflows.html#create_workflow/1"},{"type":"function","title":"Lightning.Workflows.delete_workflow/1","doc":"Deletes a workflow. Examples iex&gt; delete_workflow ( workflow ) { :ok , % Workflow { } } iex&gt; delete_workflow ( workflow ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Workflows.html#delete_workflow/1"},{"type":"function","title":"Lightning.Workflows.get_edge_by_webhook/1","doc":"Gets a Single Edge by it's webhook trigger.","ref":"Lightning.Workflows.html#get_edge_by_webhook/1"},{"type":"function","title":"Lightning.Workflows.get_edges_for_cron_execution/1","doc":"Returns a list of edges with jobs to execute, given a current timestamp in Unix. This is used by the scheduler, which calls this function once every minute.","ref":"Lightning.Workflows.html#get_edges_for_cron_execution/1"},{"type":"function","title":"Lightning.Workflows.get_workflow/1","doc":"","ref":"Lightning.Workflows.html#get_workflow/1"},{"type":"function","title":"Lightning.Workflows.get_workflow!/1","doc":"Gets a single workflow. Raises Ecto.NoResultsError if the Workflow does not exist. Examples iex&gt; get_workflow! ( 123 ) % Workflow { } iex&gt; get_workflow! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Workflows.html#get_workflow!/1"},{"type":"function","title":"Lightning.Workflows.get_workflows_for/1","doc":"Retrieves a list of Workflows with their jobs and triggers preloaded.","ref":"Lightning.Workflows.html#get_workflows_for/1"},{"type":"function","title":"Lightning.Workflows.get_workflows_for_query/1","doc":"","ref":"Lightning.Workflows.html#get_workflows_for_query/1"},{"type":"function","title":"Lightning.Workflows.list_workflows/0","doc":"Returns the list of workflows. Examples iex&gt; list_workflows ( ) [ % Workflow { } , ... ]","ref":"Lightning.Workflows.html#list_workflows/0"},{"type":"function","title":"Lightning.Workflows.mark_for_deletion/2","doc":"Returns an %Ecto.Changeset{} for changing the workflow request_deletion. Examples iex&gt; change_request_deletion ( workflow ) % Ecto.Changeset { data : % Workflow { } }","ref":"Lightning.Workflows.html#mark_for_deletion/2"},{"type":"function","title":"Lightning.Workflows.to_project_space/1","doc":"","ref":"Lightning.Workflows.html#to_project_space/1"},{"type":"function","title":"Lightning.Workflows.update_trigger/2","doc":"Updates a trigger","ref":"Lightning.Workflows.html#update_trigger/2"},{"type":"function","title":"Lightning.Workflows.update_workflow/2","doc":"Updates a workflow. Examples iex&gt; update_workflow ( workflow , %{ field : new_value } ) { :ok , % Workflow { } } iex&gt; update_workflow ( workflow , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Workflows.html#update_workflow/2"},{"type":"module","title":"Lightning.Workflows.Edge","doc":"Ecto model for Workflow Edges. A Workflow Edge represents a connection between two jobs (or a trigger and a job) in a workflow. The source of the edge is either a job or a trigger. The target of the edge is always a job.","ref":"Lightning.Workflows.Edge.html"},{"type":"function","title":"Lightning.Workflows.Edge.changeset/2","doc":"","ref":"Lightning.Workflows.Edge.html#changeset/2"},{"type":"function","title":"Lightning.Workflows.Edge.new/1","doc":"","ref":"Lightning.Workflows.Edge.html#new/1"},{"type":"function","title":"Lightning.Workflows.Edge.validate/1","doc":"","ref":"Lightning.Workflows.Edge.html#validate/1"},{"type":"type","title":"Lightning.Workflows.Edge.edge_condition/0","doc":"","ref":"Lightning.Workflows.Edge.html#t:edge_condition/0"},{"type":"type","title":"Lightning.Workflows.Edge.t/0","doc":"","ref":"Lightning.Workflows.Edge.html#t:t/0"},{"type":"module","title":"Lightning.Workflows.Graph","doc":"Utility to construct and manipulate a graph/plan made out of Jobs","ref":"Lightning.Workflows.Graph.html"},{"type":"function","title":"Lightning.Workflows.Graph.new/1","doc":"","ref":"Lightning.Workflows.Graph.html#new/1"},{"type":"function","title":"Lightning.Workflows.Graph.remove/2","doc":"","ref":"Lightning.Workflows.Graph.html#remove/2"},{"type":"function","title":"Lightning.Workflows.Graph.vertices/1","doc":"","ref":"Lightning.Workflows.Graph.html#vertices/1"},{"type":"type","title":"Lightning.Workflows.Graph.t/0","doc":"","ref":"Lightning.Workflows.Graph.html#t:t/0"},{"type":"type","title":"Lightning.Workflows.Graph.vertex/0","doc":"","ref":"Lightning.Workflows.Graph.html#t:vertex/0"},{"type":"module","title":"Lightning.Workflows.Workflow","doc":"Ecto model for Workflows. A Workflow contains the fields for defining a workflow. name A plain text identifier","ref":"Lightning.Workflows.Workflow.html"},{"type":"function","title":"Lightning.Workflows.Workflow.request_deletion_changeset/2","doc":"","ref":"Lightning.Workflows.Workflow.html#request_deletion_changeset/2"},{"type":"function","title":"Lightning.Workflows.Workflow.validate/1","doc":"","ref":"Lightning.Workflows.Workflow.html#validate/1"},{"type":"type","title":"Lightning.Workflows.Workflow.t/0","doc":"","ref":"Lightning.Workflows.Workflow.html#t:t/0"},{"type":"module","title":"Lightning.Workorders.SearchParams","doc":"This module is used to parse search parameters for workorders and provide a query to the database.","ref":"Lightning.Workorders.SearchParams.html"},{"type":"function","title":"Lightning.Workorders.SearchParams.new/1","doc":"","ref":"Lightning.Workorders.SearchParams.html#new/1"},{"type":"function","title":"Lightning.Workorders.SearchParams.to_uri_params/1","doc":"","ref":"Lightning.Workorders.SearchParams.html#to_uri_params/1"},{"type":"type","title":"Lightning.Workorders.SearchParams.t/0","doc":"","ref":"Lightning.Workorders.SearchParams.html#t:t/0"},{"type":"module","title":"LightningWeb","doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use LightningWeb , :controller use LightningWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"LightningWeb.html"},{"type":"macro","title":"LightningWeb.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"LightningWeb.html#__using__/1"},{"type":"function","title":"LightningWeb.channel/0","doc":"","ref":"LightningWeb.html#channel/0"},{"type":"function","title":"LightningWeb.component/0","doc":"","ref":"LightningWeb.html#component/0"},{"type":"function","title":"LightningWeb.controller/0","doc":"","ref":"LightningWeb.html#controller/0"},{"type":"function","title":"LightningWeb.html/0","doc":"","ref":"LightningWeb.html#html/0"},{"type":"function","title":"LightningWeb.live_component/0","doc":"","ref":"LightningWeb.html#live_component/0"},{"type":"function","title":"LightningWeb.live_view/1","doc":"","ref":"LightningWeb.html#live_view/1"},{"type":"function","title":"LightningWeb.router/0","doc":"","ref":"LightningWeb.html#router/0"},{"type":"function","title":"LightningWeb.static_paths/0","doc":"","ref":"LightningWeb.html#static_paths/0"},{"type":"function","title":"LightningWeb.verified_routes/0","doc":"","ref":"LightningWeb.html#verified_routes/0"},{"type":"function","title":"LightningWeb.view/0","doc":"","ref":"LightningWeb.html#view/0"},{"type":"module","title":"LightningWeb.API.Helpers","doc":"Helpers for the API views","ref":"LightningWeb.API.Helpers.html"},{"type":"function","title":"LightningWeb.API.Helpers.pagination_link/3","doc":"","ref":"LightningWeb.API.Helpers.html#pagination_link/3"},{"type":"function","title":"LightningWeb.API.Helpers.pagination_links/2","doc":"","ref":"LightningWeb.API.Helpers.html#pagination_links/2"},{"type":"function","title":"LightningWeb.API.Helpers.url_for/2","doc":"","ref":"LightningWeb.API.Helpers.html#url_for/2"},{"type":"module","title":"LightningWeb.API.JobController","doc":"","ref":"LightningWeb.API.JobController.html"},{"type":"function","title":"LightningWeb.API.JobController.index/2","doc":"","ref":"LightningWeb.API.JobController.html#index/2"},{"type":"function","title":"LightningWeb.API.JobController.show/2","doc":"","ref":"LightningWeb.API.JobController.html#show/2"},{"type":"module","title":"LightningWeb.API.ProjectController","doc":"","ref":"LightningWeb.API.ProjectController.html"},{"type":"function","title":"LightningWeb.API.ProjectController.index/2","doc":"","ref":"LightningWeb.API.ProjectController.html#index/2"},{"type":"function","title":"LightningWeb.API.ProjectController.show/2","doc":"","ref":"LightningWeb.API.ProjectController.html#show/2"},{"type":"module","title":"LightningWeb.API.ProvisioningController","doc":"","ref":"LightningWeb.API.ProvisioningController.html"},{"type":"function","title":"LightningWeb.API.ProvisioningController.create/2","doc":"Creates or updates a project based on a JSON payload that may or may not contain UUIDs for existing resources.","ref":"LightningWeb.API.ProvisioningController.html#create/2"},{"type":"function","title":"LightningWeb.API.ProvisioningController.show/2","doc":"Returns a project &quot;state.json&quot;, complete with UUIDs to enable idempotent project deployments and updates to existing projects via the CLI.","ref":"LightningWeb.API.ProvisioningController.html#show/2"},{"type":"function","title":"LightningWeb.API.ProvisioningController.show_yaml/2","doc":"Returns a description of the project as yaml. Same as the export project to yaml button (see Downloads Controller) but made for the API.","ref":"LightningWeb.API.ProvisioningController.html#show_yaml/2"},{"type":"module","title":"LightningWeb.API.RunController","doc":"","ref":"LightningWeb.API.RunController.html"},{"type":"function","title":"LightningWeb.API.RunController.index/2","doc":"","ref":"LightningWeb.API.RunController.html#index/2"},{"type":"function","title":"LightningWeb.API.RunController.show/2","doc":"","ref":"LightningWeb.API.RunController.html#show/2"},{"type":"module","title":"LightningWeb.AuditLive.Index","doc":"LiveView for listing Audit events","ref":"LightningWeb.AuditLive.Index.html"},{"type":"function","title":"LightningWeb.AuditLive.Index.diff/1","doc":"","ref":"LightningWeb.AuditLive.Index.html#diff/1"},{"type":"function","title":"LightningWeb.AuditLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.AuditLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.AuthProvidersLive.FormComponent","doc":"Form Component for working with a single Job A Job's adaptor field is a combination of the module name and the version. It's formatted as an NPM style string. The form allows the user to select a module by name and then it's version, while the version dropdown itself references adaptor directly. Meaning the adaptor_name dropdown and assigns value is not persisted.","ref":"LightningWeb.AuthProvidersLive.FormComponent.html"},{"type":"module","title":"LightningWeb.AuthProvidersLive.Index","doc":"LiveView for listing and managing Projects","ref":"LightningWeb.AuthProvidersLive.Index.html"},{"type":"module","title":"LightningWeb.BackupCodesController","doc":"","ref":"LightningWeb.BackupCodesController.html"},{"type":"function","title":"LightningWeb.BackupCodesController.print/2","doc":"","ref":"LightningWeb.BackupCodesController.html#print/2"},{"type":"module","title":"LightningWeb.BackupCodesLive.Index","doc":"LiveView for user backup codes.","ref":"LightningWeb.BackupCodesLive.Index.html"},{"type":"function","title":"LightningWeb.BackupCodesLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.BackupCodesLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.ChangesetJSON","doc":"Renders changesets as JSON.","ref":"LightningWeb.ChangesetJSON.html"},{"type":"function","title":"LightningWeb.ChangesetJSON.error/1","doc":"","ref":"LightningWeb.ChangesetJSON.html#error/1"},{"type":"module","title":"LightningWeb.ChangesetView","doc":"","ref":"LightningWeb.ChangesetView.html"},{"type":"function","title":"LightningWeb.ChangesetView.__resource__/0","doc":"The resource name, as an atom, for this view","ref":"LightningWeb.ChangesetView.html#__resource__/0"},{"type":"function","title":"LightningWeb.ChangesetView.render/2","doc":"Renders the given template locally.","ref":"LightningWeb.ChangesetView.html#render/2"},{"type":"function","title":"LightningWeb.ChangesetView.template_not_found/2","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"LightningWeb.ChangesetView.html#template_not_found/2"},{"type":"function","title":"LightningWeb.ChangesetView.translate_errors/1","doc":"Traverses and translates changeset errors. See Ecto.Changeset.traverse_errors/2 and LightningWeb.ErrorHelpers.translate_error/1 for more details.","ref":"LightningWeb.ChangesetView.html#translate_errors/1"},{"type":"module","title":"LightningWeb.Components.Modal","doc":"A modal component that can be used to display a modal on the page. This currently isn't used anywhere but should be used in the future to replace the existing modal implementations.","ref":"LightningWeb.Components.Modal.html"},{"type":"module","title":"LightningWeb.Components.NewInputs","doc":"A temporary module that will serve as a place to put new inputs that conform with the newer CoreComponents conventions introduced in Phoenix 1.7.","ref":"LightningWeb.Components.NewInputs.html"},{"type":"function","title":"LightningWeb.Components.NewInputs.button/1","doc":"Renders a button. Examples &lt; . button &gt; Send ! &lt; / . button &gt; &lt; . button phx - click = &quot;go&quot; class = &quot;ml-2&quot; &gt; Send ! &lt; / . button &gt; Attributes type ( :string ) - Defaults to nil . class ( :string ) - Defaults to nil . Global attributes are accepted. Slots inner_block (required)","ref":"LightningWeb.Components.NewInputs.html#button/1"},{"type":"function","title":"LightningWeb.Components.NewInputs.error/1","doc":"Generates a generic error message. Slots inner_block (required)","ref":"LightningWeb.Components.NewInputs.html#error/1"},{"type":"function","title":"LightningWeb.Components.NewInputs.icon/1","doc":"Renders a Heroicon . Heroicons come in three styles – outline, solid, and mini. By default, the outline style is used, but solid and mini may be applied by using the -solid and -mini suffix. You can customize the size and colors of the icons by setting width, height, and background color classes. Icons are extracted from your assets/vendor/heroicons directory and bundled within your compiled app.css by the plugin in your assets/tailwind.config.js . Examples &lt; . icon name = &quot;hero-x-mark-solid&quot; / &gt; &lt; . icon name = &quot;hero-arrow-path&quot; class = &quot;ml-1 w-3 h-3 animate-spin&quot; / &gt; Attributes name ( :string ) (required) class ( :string ) - Defaults to nil .","ref":"LightningWeb.Components.NewInputs.html#icon/1"},{"type":"function","title":"LightningWeb.Components.NewInputs.input/1","doc":"Renders an input with label and error messages. A Phoenix.HTML.FormField may be passed as argument, which is used to retrieve the input name, id, and values. Otherwise all attributes may be passed explicitly. Types This function accepts all HTML input types, considering that: You may also set type=&quot;select&quot; to render a &lt;select&gt; tag type=&quot;checkbox&quot; is used exclusively to render boolean values For live file uploads, see Phoenix.Component.live_file_input/1 See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input for more information. Examples &lt; . input field = { @form [ :email ] } type = &quot;email&quot; / &gt; &lt; . input name = &quot;my-input&quot; errors = { [ &quot;oh no!&quot; ] } / &gt; Attributes id ( :any ) - Defaults to nil . name ( :any ) label ( :string ) - Defaults to nil . value ( :any ) type ( :string ) - Defaults to &quot;text&quot; . field ( Phoenix.HTML.FormField ) - a form field struct retrieved from the form, for example: @form[:email]. errors ( :list ) - Defaults to [] . checked ( :boolean ) - the checked flag for checkbox inputs. prompt ( :string ) - the prompt for select inputs. Defaults to nil . options ( :list ) - the options to pass to Phoenix.HTML.Form.options_for_select/2. multiple ( :boolean ) - the multiple flag for select inputs. Defaults to false . class ( :string ) - Defaults to nil . Global attributes are accepted. Slots inner_block","ref":"LightningWeb.Components.NewInputs.html#input/1"},{"type":"function","title":"LightningWeb.Components.NewInputs.label/1","doc":"Renders a label. Attributes for ( :string ) - Defaults to nil . Slots inner_block (required)","ref":"LightningWeb.Components.NewInputs.html#label/1"},{"type":"function","title":"LightningWeb.Components.NewInputs.translate_error/1","doc":"Translates an error message using gettext.","ref":"LightningWeb.Components.NewInputs.html#translate_error/1"},{"type":"module","title":"LightningWeb.CredentialLive.Edit","doc":"LiveView for editing a single Credential, which inturn uses LightningWeb.CredentialLive.FormComponent for common functionality.","ref":"LightningWeb.CredentialLive.Edit.html"},{"type":"function","title":"LightningWeb.CredentialLive.Edit.handle_info/2","doc":"A generic handler for forwarding updates from PubSub","ref":"LightningWeb.CredentialLive.Edit.html#handle_info/2"},{"type":"module","title":"LightningWeb.CredentialLive.FormComponent","doc":"Form Component for working with a single Credential","ref":"LightningWeb.CredentialLive.FormComponent.html"},{"type":"function","title":"LightningWeb.CredentialLive.FormComponent.credential_transfer/1","doc":"Attributes users ( :list ) (required) form ( :map ) (required)","ref":"LightningWeb.CredentialLive.FormComponent.html#credential_transfer/1"},{"type":"function","title":"LightningWeb.CredentialLive.FormComponent.form_component/1","doc":"Switcher components for different types of credentials. Attributes type ( :string ) (required) form ( :map ) (required) update_body ( :any ) Slots inner_block","ref":"LightningWeb.CredentialLive.FormComponent.html#form_component/1"},{"type":"function","title":"LightningWeb.CredentialLive.FormComponent.project_credentials/1","doc":"Attributes form ( :map ) (required) projects ( :list ) (required) selected ( :map ) (required) phx_target ( :any ) - Defaults to nil .","ref":"LightningWeb.CredentialLive.FormComponent.html#project_credentials/1"},{"type":"module","title":"LightningWeb.CredentialLive.GoogleSheetsComponent","doc":"Form component to setup a Google Sheets component. This component has several moving parts: Subscribes to a PubSub topic specially link to the component id See: LightningWeb.OauthCredentialHelper . Uses the Lightning.Google module to set up an OAuth client for generating urls, exchanging the code and requesting a new access_token . The flow for creating a new token is: Generate an authorization link which contains: The authorization url from the Google client with the applications callback_url A state string that is an encrypted set of data with the components module and id in it Once the user authorizes the client the callback is requested with a code The LightningWeb.OidcController decodes the state returned to it and does a 'broadcast_forward' which is simply a message expected to be received by a LiveView and applied to Phoenix.LiveView.send_update/3 . The component receives the code and requests a token. Any changes to the token (Credential body) are still handled by the parent component and so a update_body function is passed in to send params changes back up to update the form.","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html"},{"type":"function","title":"LightningWeb.CredentialLive.GoogleSheetsComponent.authorize_button/1","doc":"","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html#authorize_button/1"},{"type":"function","title":"LightningWeb.CredentialLive.GoogleSheetsComponent.disabled_authorize_button/1","doc":"","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html#disabled_authorize_button/1"},{"type":"function","title":"LightningWeb.CredentialLive.GoogleSheetsComponent.error_block/1","doc":"","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html#error_block/1"},{"type":"function","title":"LightningWeb.CredentialLive.GoogleSheetsComponent.fieldset/1","doc":"Attributes form ( :map ) (required) update_body ( :any ) (required) Slots inner_block","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html#fieldset/1"},{"type":"function","title":"LightningWeb.CredentialLive.GoogleSheetsComponent.userinfo/1","doc":"","ref":"LightningWeb.CredentialLive.GoogleSheetsComponent.html#userinfo/1"},{"type":"module","title":"LightningWeb.CredentialLive.Index","doc":"LiveView for listing and managing credentials","ref":"LightningWeb.CredentialLive.Index.html"},{"type":"function","title":"LightningWeb.CredentialLive.Index.delete_action/1","doc":"","ref":"LightningWeb.CredentialLive.Index.html#delete_action/1"},{"type":"function","title":"LightningWeb.CredentialLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.CredentialLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.CredentialLive.JsonSchemaBodyComponent","doc":"","ref":"LightningWeb.CredentialLive.JsonSchemaBodyComponent.html"},{"type":"function","title":"LightningWeb.CredentialLive.JsonSchemaBodyComponent.fieldset/1","doc":"Attributes form ( :map ) (required) Slots inner_block","ref":"LightningWeb.CredentialLive.JsonSchemaBodyComponent.html#fieldset/1"},{"type":"function","title":"LightningWeb.CredentialLive.JsonSchemaBodyComponent.schema_input/1","doc":"Attributes form ( :map ) (required) schema ( :map ) (required) field ( :any ) (required)","ref":"LightningWeb.CredentialLive.JsonSchemaBodyComponent.html#schema_input/1"},{"type":"module","title":"LightningWeb.CredentialLive.RawBodyComponent","doc":"","ref":"LightningWeb.CredentialLive.RawBodyComponent.html"},{"type":"function","title":"LightningWeb.CredentialLive.RawBodyComponent.fieldset/1","doc":"Attributes form ( :map ) (required) Slots inner_block","ref":"LightningWeb.CredentialLive.RawBodyComponent.html#fieldset/1"},{"type":"module","title":"LightningWeb.CredentialLive.TypePicker","doc":"","ref":"LightningWeb.CredentialLive.TypePicker.html"},{"type":"module","title":"LightningWeb.DataclipLive.Edit","doc":"LiveView for editing a single dataclip.","ref":"LightningWeb.DataclipLive.Edit.html"},{"type":"function","title":"LightningWeb.DataclipLive.Edit.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.DataclipLive.Edit.html#render/1"},{"type":"module","title":"LightningWeb.DataclipLive.FormComponent","doc":"Form Component for working with a single dataclip","ref":"LightningWeb.DataclipLive.FormComponent.html"},{"type":"function","title":"LightningWeb.DataclipLive.FormComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.DataclipLive.FormComponent.html#render/1"},{"type":"module","title":"LightningWeb.DataclipLive.Index","doc":"LiveView for listing and working with a list of Dataclips","ref":"LightningWeb.DataclipLive.Index.html"},{"type":"function","title":"LightningWeb.DataclipLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.DataclipLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.DownloadsController","doc":"","ref":"LightningWeb.DownloadsController.html"},{"type":"function","title":"LightningWeb.DownloadsController.download_project_yaml/2","doc":"","ref":"LightningWeb.DownloadsController.html#download_project_yaml/2"},{"type":"module","title":"LightningWeb.Endpoint","doc":"","ref":"LightningWeb.Endpoint.html"},{"type":"function","title":"LightningWeb.Endpoint.broadcast/3","doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"LightningWeb.Endpoint.html#broadcast/3"},{"type":"function","title":"LightningWeb.Endpoint.broadcast!/3","doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"LightningWeb.Endpoint.html#broadcast!/3"},{"type":"function","title":"LightningWeb.Endpoint.broadcast_from/4","doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"LightningWeb.Endpoint.html#broadcast_from/4"},{"type":"function","title":"LightningWeb.Endpoint.broadcast_from!/4","doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"LightningWeb.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"LightningWeb.Endpoint.call/2","doc":"Callback implementation for Plug.call/2 .","ref":"LightningWeb.Endpoint.html#call/2"},{"type":"function","title":"LightningWeb.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"LightningWeb.Endpoint.html#child_spec/1"},{"type":"function","title":"LightningWeb.Endpoint.config/2","doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"LightningWeb.Endpoint.html#config/2"},{"type":"function","title":"LightningWeb.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"LightningWeb.Endpoint.html#config_change/2"},{"type":"function","title":"LightningWeb.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"LightningWeb.Endpoint.html#host/0"},{"type":"function","title":"LightningWeb.Endpoint.init/1","doc":"Callback implementation for Plug.init/1 .","ref":"LightningWeb.Endpoint.html#init/1"},{"type":"function","title":"LightningWeb.Endpoint.local_broadcast/3","doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"LightningWeb.Endpoint.html#local_broadcast/3"},{"type":"function","title":"LightningWeb.Endpoint.local_broadcast_from/4","doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"LightningWeb.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"LightningWeb.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"LightningWeb.Endpoint.html#path/1"},{"type":"function","title":"LightningWeb.Endpoint.script_name/0","doc":"Generates the script name.","ref":"LightningWeb.Endpoint.html#script_name/0"},{"type":"function","title":"LightningWeb.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree. All other options are merged into the endpoint configuration.","ref":"LightningWeb.Endpoint.html#start_link/1"},{"type":"function","title":"LightningWeb.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"LightningWeb.Endpoint.html#static_integrity/1"},{"type":"function","title":"LightningWeb.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"LightningWeb.Endpoint.html#static_lookup/1"},{"type":"function","title":"LightningWeb.Endpoint.static_path/1","doc":"Generates a route to a static file in priv/static .","ref":"LightningWeb.Endpoint.html#static_path/1"},{"type":"function","title":"LightningWeb.Endpoint.static_url/0","doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"LightningWeb.Endpoint.html#static_url/0"},{"type":"function","title":"LightningWeb.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"LightningWeb.Endpoint.html#struct_url/0"},{"type":"function","title":"LightningWeb.Endpoint.subscribe/2","doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"LightningWeb.Endpoint.html#subscribe/2"},{"type":"function","title":"LightningWeb.Endpoint.unsubscribe/1","doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"LightningWeb.Endpoint.html#unsubscribe/1"},{"type":"function","title":"LightningWeb.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"LightningWeb.Endpoint.html#url/0"},{"type":"module","title":"LightningWeb.ErrorView","doc":"","ref":"LightningWeb.ErrorView.html"},{"type":"function","title":"LightningWeb.ErrorView.__resource__/0","doc":"The resource name, as an atom, for this view","ref":"LightningWeb.ErrorView.html#__resource__/0"},{"type":"function","title":"LightningWeb.ErrorView.render/2","doc":"Renders the given template locally.","ref":"LightningWeb.ErrorView.html#render/2"},{"type":"function","title":"LightningWeb.ErrorView.template_not_found/2","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"LightningWeb.ErrorView.html#template_not_found/2"},{"type":"module","title":"LightningWeb.FallbackController","doc":"Translates controller action results into valid Plug.Conn responses. See Phoenix.Controller.action_fallback/1 for more details.","ref":"LightningWeb.FallbackController.html"},{"type":"module","title":"LightningWeb.FirstSetupLive.Superuser","doc":"Superuser setup liveview Allows the creation on the first user in the system. It has only one action: :show","ref":"LightningWeb.FirstSetupLive.Superuser.html"},{"type":"function","title":"LightningWeb.FirstSetupLive.Superuser.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.FirstSetupLive.Superuser.html#render/1"},{"type":"module","title":"LightningWeb.FormHelpers","doc":"Conveniences for building forms.","ref":"LightningWeb.FormHelpers.html"},{"type":"module","title":"LightningWeb.Gettext","doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import LightningWeb.Gettext # Simple translation gettext ( &quot;Here is the string to translate&quot; ) # Plural translation ngettext ( &quot;Here is the string to translate&quot; , &quot;Here are the strings to translate&quot; , 3 ) # Domain-based translation dgettext ( &quot;errors&quot; , &quot;Here is the error message to translate&quot; ) See the Gettext Docs for detailed usage.","ref":"LightningWeb.Gettext.html"},{"type":"macro","title":"LightningWeb.Gettext.dgettext/3","doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"LightningWeb.Gettext.html#dgettext/3"},{"type":"macro","title":"LightningWeb.Gettext.dgettext_noop/2","doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"LightningWeb.Gettext.html#dgettext_noop/2"},{"type":"macro","title":"LightningWeb.Gettext.dngettext/5","doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"LightningWeb.Gettext.html#dngettext/5"},{"type":"macro","title":"LightningWeb.Gettext.dngettext_noop/3","doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"LightningWeb.Gettext.html#dngettext_noop/3"},{"type":"macro","title":"LightningWeb.Gettext.dpgettext/4","doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"LightningWeb.Gettext.html#dpgettext/4"},{"type":"macro","title":"LightningWeb.Gettext.dpgettext_noop/3","doc":"","ref":"LightningWeb.Gettext.html#dpgettext_noop/3"},{"type":"macro","title":"LightningWeb.Gettext.dpngettext/6","doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"LightningWeb.Gettext.html#dpngettext/6"},{"type":"macro","title":"LightningWeb.Gettext.dpngettext_noop/4","doc":"","ref":"LightningWeb.Gettext.html#dpngettext_noop/4"},{"type":"macro","title":"LightningWeb.Gettext.gettext/2","doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"LightningWeb.Gettext.html#gettext/2"},{"type":"macro","title":"LightningWeb.Gettext.gettext_comment/1","doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"LightningWeb.Gettext.html#gettext_comment/1"},{"type":"macro","title":"LightningWeb.Gettext.gettext_noop/1","doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"LightningWeb.Gettext.html#gettext_noop/1"},{"type":"function","title":"LightningWeb.Gettext.handle_missing_bindings/2","doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"LightningWeb.Gettext.html#handle_missing_bindings/2"},{"type":"function","title":"LightningWeb.Gettext.handle_missing_plural_translation/7","doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/7 .","ref":"LightningWeb.Gettext.html#handle_missing_plural_translation/7"},{"type":"function","title":"LightningWeb.Gettext.handle_missing_translation/5","doc":"Callback implementation for Gettext.Backend.handle_missing_translation/5 .","ref":"LightningWeb.Gettext.html#handle_missing_translation/5"},{"type":"function","title":"LightningWeb.Gettext.lgettext/5","doc":"","ref":"LightningWeb.Gettext.html#lgettext/5"},{"type":"function","title":"LightningWeb.Gettext.lngettext/7","doc":"","ref":"LightningWeb.Gettext.html#lngettext/7"},{"type":"macro","title":"LightningWeb.Gettext.ngettext/4","doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"LightningWeb.Gettext.html#ngettext/4"},{"type":"macro","title":"LightningWeb.Gettext.ngettext_noop/2","doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"LightningWeb.Gettext.html#ngettext_noop/2"},{"type":"macro","title":"LightningWeb.Gettext.pgettext/3","doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"LightningWeb.Gettext.html#pgettext/3"},{"type":"macro","title":"LightningWeb.Gettext.pgettext_noop/2","doc":"","ref":"LightningWeb.Gettext.html#pgettext_noop/2"},{"type":"macro","title":"LightningWeb.Gettext.pngettext/5","doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"LightningWeb.Gettext.html#pngettext/5"},{"type":"macro","title":"LightningWeb.Gettext.pngettext_noop/3","doc":"","ref":"LightningWeb.Gettext.html#pngettext_noop/3"},{"type":"module","title":"LightningWeb.HealthCheck","doc":"","ref":"LightningWeb.HealthCheck.html"},{"type":"function","title":"LightningWeb.HealthCheck.call/2","doc":"Callback implementation for Plug.call/2 .","ref":"LightningWeb.HealthCheck.html#call/2"},{"type":"function","title":"LightningWeb.HealthCheck.init/1","doc":"Callback implementation for Plug.init/1 .","ref":"LightningWeb.HealthCheck.html#init/1"},{"type":"module","title":"LightningWeb.Hooks","doc":"LiveView Hooks","ref":"LightningWeb.Hooks.html"},{"type":"function","title":"LightningWeb.Hooks.on_mount/4","doc":"Finds and assigns a project to the socket, if a user doesn't have access they are redirected and shown a 'No Access' screen via a :nav flash message. There is a fallthru function, when there is no project_id in the params - this is for liveviews that may or may not have a project_id depending on usage - like DashboardLive .","ref":"LightningWeb.Hooks.html#on_mount/4"},{"type":"module","title":"LightningWeb.InitAssigns","doc":"Ensures common assigns are applied to all LiveViews attaching this hook.","ref":"LightningWeb.InitAssigns.html"},{"type":"function","title":"LightningWeb.InitAssigns.on_mount/4","doc":"","ref":"LightningWeb.InitAssigns.html#on_mount/4"},{"type":"module","title":"LightningWeb.JobLive.AdaptorPicker","doc":"Component allowing selecting an adaptor and it's version","ref":"LightningWeb.JobLive.AdaptorPicker.html"},{"type":"function","title":"LightningWeb.JobLive.AdaptorPicker.display_name_for_adaptor/1","doc":"Converts standard adaptor names into &quot;label&quot;,&quot;value&quot; lists and returns non-standard names as merely &quot;value&quot;; both can be passed directly into a select option list.","ref":"LightningWeb.JobLive.AdaptorPicker.html#display_name_for_adaptor/1"},{"type":"function","title":"LightningWeb.JobLive.AdaptorPicker.get_adaptor_version_options/1","doc":"","ref":"LightningWeb.JobLive.AdaptorPicker.html#get_adaptor_version_options/1"},{"type":"function","title":"LightningWeb.JobLive.AdaptorPicker.render/1","doc":"Attributes form ( :map ) (required) on_change ( :any ) - Defaults to nil . disabled ( :boolean ) - Defaults to false .","ref":"LightningWeb.JobLive.AdaptorPicker.html#render/1"},{"type":"module","title":"LightningWeb.JobLive.CredentialPicker","doc":"Component allowing selecting a credential or creating a new one via a modal.","ref":"LightningWeb.JobLive.CredentialPicker.html"},{"type":"function","title":"LightningWeb.JobLive.CredentialPicker.render/1","doc":"Attributes form ( :map ) (required) disabled ( :boolean ) - Defaults to false . credentials ( :list ) (required) on_change ( :any ) - Defaults to nil .","ref":"LightningWeb.JobLive.CredentialPicker.html#render/1"},{"type":"module","title":"LightningWeb.JobLive.CronSetupComponent","doc":"A live component for managing cron setup in a form. The CronSetupComponent provides an interactive form for configuring cron settings. It includes fields for specifying the frequency, minute, hour, weekday, monthday, and cron expression. Usage Include the CronSetupComponent in your live view or template. Pass the necessary assigns to the component, such as form , on_change , and disabled . Handle the cron_expression_change event to capture changes in the form inputs. Use the updated cron_expression in your application logic.","ref":"LightningWeb.JobLive.CronSetupComponent.html"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.build_cron_expression/2","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#build_cron_expression/2"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.frequency_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#frequency_field/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.get_cron_data/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#get_cron_data/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.hour_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#hour_field/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.minute_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#minute_field/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.monthday_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#monthday_field/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.render/1","doc":"Attributes id ( :string ) (required) form ( :map ) (required) on_change ( :any ) (required) disabled ( :boolean ) (required)","ref":"LightningWeb.JobLive.CronSetupComponent.html#render/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.time_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#time_field/1"},{"type":"function","title":"LightningWeb.JobLive.CronSetupComponent.weekday_field/1","doc":"","ref":"LightningWeb.JobLive.CronSetupComponent.html#weekday_field/1"},{"type":"module","title":"LightningWeb.JobLive.JobBuilderComponents","doc":"","ref":"LightningWeb.JobLive.JobBuilderComponents.html"},{"type":"function","title":"LightningWeb.JobLive.JobBuilderComponents.job_editor_component/1","doc":"Attributes adaptor ( :string ) (required) disabled ( :boolean ) - Defaults to false . source ( :string ) (required) change_event ( :string ) - Defaults to &quot;job_body_changed&quot; . Global attributes are accepted.","ref":"LightningWeb.JobLive.JobBuilderComponents.html#job_editor_component/1"},{"type":"function","title":"LightningWeb.JobLive.JobBuilderComponents.trigger_picker/1","doc":"Attributes form ( :map ) (required) upstream_jobs ( :list ) (required) on_cron_change ( :any ) (required) disabled ( :boolean ) - Defaults to true .","ref":"LightningWeb.JobLive.JobBuilderComponents.html#trigger_picker/1"},{"type":"function","title":"LightningWeb.JobLive.JobBuilderComponents.when_invalid/1","doc":"Attributes changeset ( :map ) (required) field ( :atom ) (required) Slots inner_block (required)","ref":"LightningWeb.JobLive.JobBuilderComponents.html#when_invalid/1"},{"type":"module","title":"LightningWeb.LiveHelpers","doc":"General purpose LiveView helper functions","ref":"LightningWeb.LiveHelpers.html"},{"type":"function","title":"LightningWeb.LiveHelpers.display_short_uuid/1","doc":"","ref":"LightningWeb.LiveHelpers.html#display_short_uuid/1"},{"type":"function","title":"LightningWeb.LiveHelpers.fade_in/1","doc":"","ref":"LightningWeb.LiveHelpers.html#fade_in/1"},{"type":"function","title":"LightningWeb.LiveHelpers.fade_out/1","doc":"","ref":"LightningWeb.LiveHelpers.html#fade_out/1"},{"type":"function","title":"LightningWeb.LiveHelpers.live_error_block/1","doc":"","ref":"LightningWeb.LiveHelpers.html#live_error_block/1"},{"type":"function","title":"LightningWeb.LiveHelpers.live_info_block/1","doc":"","ref":"LightningWeb.LiveHelpers.html#live_info_block/1"},{"type":"function","title":"LightningWeb.LiveHelpers.live_nav_block/1","doc":"","ref":"LightningWeb.LiveHelpers.html#live_nav_block/1"},{"type":"module","title":"LightningWeb.ModalPortal","doc":"Component for rendering content inside layout without full DOM patch.","ref":"LightningWeb.ModalPortal.html"},{"type":"function","title":"LightningWeb.ModalPortal.close_modal/0","doc":"","ref":"LightningWeb.ModalPortal.html#close_modal/0"},{"type":"function","title":"LightningWeb.ModalPortal.handle_event/3","doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"LightningWeb.ModalPortal.html#handle_event/3"},{"type":"function","title":"LightningWeb.ModalPortal.on_hide/2","doc":"","ref":"LightningWeb.ModalPortal.html#on_hide/2"},{"type":"function","title":"LightningWeb.ModalPortal.on_show/2","doc":"","ref":"LightningWeb.ModalPortal.html#on_show/2"},{"type":"function","title":"LightningWeb.ModalPortal.open_modal/2","doc":"","ref":"LightningWeb.ModalPortal.html#open_modal/2"},{"type":"function","title":"LightningWeb.ModalPortal.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.ModalPortal.html#render/1"},{"type":"function","title":"LightningWeb.ModalPortal.update/2","doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"LightningWeb.ModalPortal.html#update/2"},{"type":"module","title":"LightningWeb.OauthCredentialHelper","doc":"A set of helper functions to encodes state and coordinate OAuth callbacks back to a LiveView component.","ref":"LightningWeb.OauthCredentialHelper.html"},{"type":"function","title":"LightningWeb.OauthCredentialHelper.broadcast/2","doc":"","ref":"LightningWeb.OauthCredentialHelper.html#broadcast/2"},{"type":"function","title":"LightningWeb.OauthCredentialHelper.broadcast_forward/3","doc":"Broadcast a message specifically for forwarding a message to a component. It expects a subscription_id , the module of the component and opts being a keyword list containing an :id key of the specific component. See: Phoenix.LiveView.send_update/3 for more info. A corresponding LiveView (that is subscribed) is expected to have a matching handle_info/2 that looks like this: def handle_info ( { :forward , mod , opts } , socket ) do send_update ( mod , opts ) { :noreply , socket } end","ref":"LightningWeb.OauthCredentialHelper.html#broadcast_forward/3"},{"type":"function","title":"LightningWeb.OauthCredentialHelper.build_state/3","doc":"Encode and encrypt the callback data which will be sent so a provider as the state key in the request. The values are: subscription_id The same ID used to subscribe. The component module The LiveView component that is going to receive update The component id The ID of the component","ref":"LightningWeb.OauthCredentialHelper.html#build_state/3"},{"type":"function","title":"LightningWeb.OauthCredentialHelper.decode_state/1","doc":"","ref":"LightningWeb.OauthCredentialHelper.html#decode_state/1"},{"type":"function","title":"LightningWeb.OauthCredentialHelper.subscribe/1","doc":"Subscribe to the oauth_credential topic. It expects the a unique ID for the topic, usually the LiveView's socket.id .","ref":"LightningWeb.OauthCredentialHelper.html#subscribe/1"},{"type":"module","title":"LightningWeb.OidcController","doc":"","ref":"LightningWeb.OidcController.html"},{"type":"function","title":"LightningWeb.OidcController.new/2","doc":"Once the user has completed the authorization flow from above, they are returned here, and the authorization code is used to log them in.","ref":"LightningWeb.OidcController.html#new/2"},{"type":"function","title":"LightningWeb.OidcController.show/2","doc":"Given a known provider, redirect them to the authorize url on the provider","ref":"LightningWeb.OidcController.html#show/2"},{"type":"module","title":"LightningWeb.PageView","doc":"","ref":"LightningWeb.PageView.html"},{"type":"function","title":"LightningWeb.PageView.__resource__/0","doc":"The resource name, as an atom, for this view","ref":"LightningWeb.PageView.html#__resource__/0"},{"type":"function","title":"LightningWeb.PageView.render/2","doc":"Renders the given template locally.","ref":"LightningWeb.PageView.html#render/2"},{"type":"function","title":"LightningWeb.PageView.template_not_found/2","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"LightningWeb.PageView.html#template_not_found/2"},{"type":"module","title":"LightningWeb.Pagination","doc":"Pagination Components This has been extracted and adapted from scrivener_html . See: https://github.com/mgwidmann/scrivener_html","ref":"LightningWeb.Pagination.html"},{"type":"function","title":"LightningWeb.Pagination.page_link/1","doc":"","ref":"LightningWeb.Pagination.html#page_link/1"},{"type":"function","title":"LightningWeb.Pagination.pagination_bar/1","doc":"","ref":"LightningWeb.Pagination.html#pagination_bar/1"},{"type":"function","title":"LightningWeb.Pagination.raw_pagination_links/2","doc":"Returns the raw data in order to generate the proper HTML for pagination links. Data is returned in a {text, page_number} format where text is intended to be the text of the link and page_number is the page it should go to. Defaults are already supplied and they are as follows: [ distance : 5 , next : :next , previous : :previous , first : true , last : true , ellipsis : :ellipsis ] distance must be a positive non-zero integer or an exception is raised. next and previous should be strings but can be anything you want as long as it is truthy, falsey values will remove them from the output. first and last are only booleans, and they just include/remove their respective link from output. An example of the data returned: iex&gt; Scrivener.HTML . raw_pagination_links ( %{ total_pages : 10 , page_number : 5 } ) [ { &quot;&lt;&lt;&quot; , 4 } , { 1 , 1 } , { 2 , 2 } , { 3 , 3 } , { 4 , 4 } , { 5 , 5 } , { 6 , 6 } , { 7 , 7 } , { 8 , 8 } , { 9 , 9 } , { 10 , 10 } , { &quot;&gt;&gt;&quot; , 6 } ] iex&gt; Scrivener.HTML . raw_pagination_links ( %{ total_pages : 20 , page_number : 10 } , first : [ &quot;←&quot; ] , last : [ &quot;→&quot; ] ) [ { &quot;&lt;&lt;&quot; , 9 } , { [ &quot;←&quot; ] , 1 } , { :ellipsis , { :safe , &quot;&amp;hellip;&quot; } } , { 5 , 5 } , { 6 , 6 } , { 7 , 7 } , { 8 , 8 } , { 9 , 9 } , { 10 , 10 } , { 11 , 11 } , { 12 , 12 } , { 13 , 13 } , { 14 , 14 } , { 15 , 15 } , { :ellipsis , { :safe , &quot;&amp;hellip;&quot; } } , { [ &quot;→&quot; ] , 20 } , { &quot;&gt;&gt;&quot; , 11 } ] Simply loop and pattern match over each item and transform it to your custom HTML.","ref":"LightningWeb.Pagination.html#raw_pagination_links/2"},{"type":"module","title":"LightningWeb.Plugs.FirstSetup","doc":"Plug to redirect HTTP requests to /first_setup if there are no superusers in the system yet.","ref":"LightningWeb.Plugs.FirstSetup.html"},{"type":"module","title":"LightningWeb.ProfileLive.Edit","doc":"LiveView for user profile page.","ref":"LightningWeb.ProfileLive.Edit.html"},{"type":"function","title":"LightningWeb.ProfileLive.Edit.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.ProfileLive.Edit.html#render/1"},{"type":"module","title":"LightningWeb.ProfileLive.FormComponent","doc":"Form component update profile email and password","ref":"LightningWeb.ProfileLive.FormComponent.html"},{"type":"function","title":"LightningWeb.ProfileLive.FormComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.ProfileLive.FormComponent.html#render/1"},{"type":"module","title":"LightningWeb.ProfileLive.MfaComponent","doc":"Component to enable MFA on a User's account","ref":"LightningWeb.ProfileLive.MfaComponent.html"},{"type":"function","title":"LightningWeb.ProfileLive.MfaComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.ProfileLive.MfaComponent.html#render/1"},{"type":"module","title":"LightningWeb.ProjectLive.FormComponent","doc":"Form Component for working with a single Job A Job's adaptor field is a combination of the module name and the version. It's formatted as an NPM style string. The form allows the user to select a module by name and then it's version, while the version dropdown itself references adaptor directly. Meaning the adaptor_name dropdown and assigns value is not persisted.","ref":"LightningWeb.ProjectLive.FormComponent.html"},{"type":"function","title":"LightningWeb.ProjectLive.FormComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.ProjectLive.FormComponent.html#render/1"},{"type":"module","title":"LightningWeb.ProjectLive.Index","doc":"LiveView for listing and managing Projects","ref":"LightningWeb.ProjectLive.Index.html"},{"type":"function","title":"LightningWeb.ProjectLive.Index.delete_action/1","doc":"","ref":"LightningWeb.ProjectLive.Index.html#delete_action/1"},{"type":"function","title":"LightningWeb.ProjectLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.ProjectLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.ProjectLive.MFARequired","doc":"Liveview for project access denied error messages","ref":"LightningWeb.ProjectLive.MFARequired.html"},{"type":"function","title":"LightningWeb.ProjectLive.MFARequired.on_mount/4","doc":"","ref":"LightningWeb.ProjectLive.MFARequired.html#on_mount/4"},{"type":"function","title":"LightningWeb.ProjectLive.MFARequired.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.ProjectLive.MFARequired.html#render/1"},{"type":"module","title":"LightningWeb.ProjectLive.Settings","doc":"Index Liveview for Runs","ref":"LightningWeb.ProjectLive.Settings.html"},{"type":"function","title":"LightningWeb.ProjectLive.Settings.digest/1","doc":"","ref":"LightningWeb.ProjectLive.Settings.html#digest/1"},{"type":"function","title":"LightningWeb.ProjectLive.Settings.failure_alert/1","doc":"","ref":"LightningWeb.ProjectLive.Settings.html#failure_alert/1"},{"type":"function","title":"LightningWeb.ProjectLive.Settings.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.ProjectLive.Settings.html#render/1"},{"type":"function","title":"LightningWeb.ProjectLive.Settings.role/1","doc":"","ref":"LightningWeb.ProjectLive.Settings.html#role/1"},{"type":"function","title":"LightningWeb.ProjectLive.Settings.user/1","doc":"","ref":"LightningWeb.ProjectLive.Settings.html#user/1"},{"type":"module","title":"LightningWeb.ReAuthenticateLive.New","doc":"LiveView for re-authentication page.","ref":"LightningWeb.ReAuthenticateLive.New.html"},{"type":"function","title":"LightningWeb.ReAuthenticateLive.New.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.ReAuthenticateLive.New.html#render/1"},{"type":"module","title":"LightningWeb.RouteHelpers","doc":"Convenience functions for generating paths.","ref":"LightningWeb.RouteHelpers.html"},{"type":"function","title":"LightningWeb.RouteHelpers.oidc_callback_url/0","doc":"","ref":"LightningWeb.RouteHelpers.html#oidc_callback_url/0"},{"type":"function","title":"LightningWeb.RouteHelpers.show_run_url/2","doc":"","ref":"LightningWeb.RouteHelpers.html#show_run_url/2"},{"type":"module","title":"LightningWeb.Router","doc":"","ref":"LightningWeb.Router.html"},{"type":"function","title":"LightningWeb.Router.api/2","doc":"","ref":"LightningWeb.Router.html#api/2"},{"type":"function","title":"LightningWeb.Router.browser/2","doc":"","ref":"LightningWeb.Router.html#browser/2"},{"type":"function","title":"LightningWeb.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"LightningWeb.Router.html#call/2"},{"type":"function","title":"LightningWeb.Router.init/1","doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"LightningWeb.Router.html#init/1"},{"type":"function","title":"LightningWeb.Router.storybook_assets/2","doc":"","ref":"LightningWeb.Router.html#storybook_assets/2"},{"type":"function","title":"LightningWeb.Router.storybook_browser/2","doc":"","ref":"LightningWeb.Router.html#storybook_browser/2"},{"type":"module","title":"LightningWeb.RunLive.Index","doc":"Index Liveview for Runs","ref":"LightningWeb.RunLive.Index.html"},{"type":"function","title":"LightningWeb.RunLive.Index.checked/2","doc":"","ref":"LightningWeb.RunLive.Index.html#checked/2"},{"type":"function","title":"LightningWeb.RunLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.RunLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.RunLive.RerunJobComponent","doc":"Rerun job component","ref":"LightningWeb.RunLive.RerunJobComponent.html"},{"type":"function","title":"LightningWeb.RunLive.RerunJobComponent.handle_event/3","doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"LightningWeb.RunLive.RerunJobComponent.html#handle_event/3"},{"type":"function","title":"LightningWeb.RunLive.RerunJobComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.RunLive.RerunJobComponent.html#render/1"},{"type":"function","title":"LightningWeb.RunLive.RerunJobComponent.update/2","doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"LightningWeb.RunLive.RerunJobComponent.html#update/2"},{"type":"module","title":"LightningWeb.RunLive.RunViewerLive","doc":"","ref":"LightningWeb.RunLive.RunViewerLive.html"},{"type":"function","title":"LightningWeb.RunLive.RunViewerLive.handle_info/2","doc":"Reload the run when any update messages arrive.","ref":"LightningWeb.RunLive.RunViewerLive.html#handle_info/2"},{"type":"module","title":"LightningWeb.RunLive.Show","doc":"Show page for individual runs.","ref":"LightningWeb.RunLive.Show.html"},{"type":"function","title":"LightningWeb.RunLive.Show.apply_action/3","doc":"","ref":"LightningWeb.RunLive.Show.html#apply_action/3"},{"type":"module","title":"LightningWeb.RunLive.WorkOrderComponent","doc":"Workorder component","ref":"LightningWeb.RunLive.WorkOrderComponent.html"},{"type":"function","title":"LightningWeb.RunLive.WorkOrderComponent.render/1","doc":"Attributes show_details ( :boolean ) - Defaults to false . show_prev_attempts ( :boolean ) - Defaults to false . entry_selected ( :boolean ) - Defaults to false .","ref":"LightningWeb.RunLive.WorkOrderComponent.html#render/1"},{"type":"module","title":"LightningWeb.Telemetry","doc":"Assorted metrics to collect during runtime. See https://hexdocs.pm/phoenix/telemetry.html","ref":"LightningWeb.Telemetry.html"},{"type":"function","title":"LightningWeb.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"LightningWeb.Telemetry.html#child_spec/1"},{"type":"function","title":"LightningWeb.Telemetry.metrics/0","doc":"","ref":"LightningWeb.Telemetry.html#metrics/0"},{"type":"function","title":"LightningWeb.Telemetry.start_link/1","doc":"","ref":"LightningWeb.Telemetry.html#start_link/1"},{"type":"module","title":"LightningWeb.TokensLive.Index","doc":"LiveView for listing and managing tokens","ref":"LightningWeb.TokensLive.Index.html"},{"type":"function","title":"LightningWeb.TokensLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.TokensLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.UserAuth","doc":"The UserAuth controller.","ref":"LightningWeb.UserAuth.html"},{"type":"function","title":"LightningWeb.UserAuth.authenticate_bearer/2","doc":"","ref":"LightningWeb.UserAuth.html#authenticate_bearer/2"},{"type":"function","title":"LightningWeb.UserAuth.fetch_current_user/2","doc":"Authenticates the user by looking into the session and remember me token.","ref":"LightningWeb.UserAuth.html#fetch_current_user/2"},{"type":"function","title":"LightningWeb.UserAuth.log_in_user/2","doc":"Logs the user in by creating a new session token.","ref":"LightningWeb.UserAuth.html#log_in_user/2"},{"type":"function","title":"LightningWeb.UserAuth.log_out_user/1","doc":"Logs the user out. It clears all session data for safety. See renew_session.","ref":"LightningWeb.UserAuth.html#log_out_user/1"},{"type":"function","title":"LightningWeb.UserAuth.mark_totp_pending/1","doc":"","ref":"LightningWeb.UserAuth.html#mark_totp_pending/1"},{"type":"function","title":"LightningWeb.UserAuth.new_session/2","doc":"Assigns the token to a new session. It renews the session ID and clears the whole session to avoid fixation attacks. See the renew_session function to customize this behaviour. It also sets a :live_socket_id key in the session, so LiveView sessions are identified and automatically disconnected on log out. The line can be safely removed if you are not using LiveView.","ref":"LightningWeb.UserAuth.html#new_session/2"},{"type":"function","title":"LightningWeb.UserAuth.on_mount/4","doc":"Used for LiveView routes that require the user to be re-authenticated.","ref":"LightningWeb.UserAuth.html#on_mount/4"},{"type":"function","title":"LightningWeb.UserAuth.reauth_sudo_mode/2","doc":"Re-Authenticates the user by using the sudo token","ref":"LightningWeb.UserAuth.html#reauth_sudo_mode/2"},{"type":"function","title":"LightningWeb.UserAuth.redirect_if_user_is_authenticated/2","doc":"Used for routes that require the user to not be authenticated.","ref":"LightningWeb.UserAuth.html#redirect_if_user_is_authenticated/2"},{"type":"function","title":"LightningWeb.UserAuth.redirect_with_return_to/2","doc":"Returns to or redirects to the dashboard and potentially set remember_me token.","ref":"LightningWeb.UserAuth.html#redirect_with_return_to/2"},{"type":"function","title":"LightningWeb.UserAuth.require_authenticated_user/2","doc":"Used for routes that require the user to be authenticated. If you want to enforce the user email is confirmed before they use the application at all, here would be a good place.","ref":"LightningWeb.UserAuth.html#require_authenticated_user/2"},{"type":"function","title":"LightningWeb.UserAuth.require_sudo_user/2","doc":"Used for routes that require the user to be re-authenticated.","ref":"LightningWeb.UserAuth.html#require_sudo_user/2"},{"type":"function","title":"LightningWeb.UserAuth.totp_pending?/1","doc":"","ref":"LightningWeb.UserAuth.html#totp_pending?/1"},{"type":"function","title":"LightningWeb.UserAuth.totp_validated/1","doc":"","ref":"LightningWeb.UserAuth.html#totp_validated/1"},{"type":"module","title":"LightningWeb.UserConfirmationController","doc":"","ref":"LightningWeb.UserConfirmationController.html"},{"type":"function","title":"LightningWeb.UserConfirmationController.confirm_email/2","doc":"","ref":"LightningWeb.UserConfirmationController.html#confirm_email/2"},{"type":"function","title":"LightningWeb.UserConfirmationController.create/2","doc":"","ref":"LightningWeb.UserConfirmationController.html#create/2"},{"type":"function","title":"LightningWeb.UserConfirmationController.edit/2","doc":"","ref":"LightningWeb.UserConfirmationController.html#edit/2"},{"type":"function","title":"LightningWeb.UserConfirmationController.new/2","doc":"","ref":"LightningWeb.UserConfirmationController.html#new/2"},{"type":"function","title":"LightningWeb.UserConfirmationController.update/2","doc":"","ref":"LightningWeb.UserConfirmationController.html#update/2"},{"type":"module","title":"LightningWeb.UserLive.Edit","doc":"LiveView for editing a single job, which inturn uses LightningWeb.JobLive.BigFormComponent for common functionality.","ref":"LightningWeb.UserLive.Edit.html"},{"type":"function","title":"LightningWeb.UserLive.Edit.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.UserLive.Edit.html#render/1"},{"type":"module","title":"LightningWeb.UserLive.FormComponent","doc":"Form component for creating and editing users","ref":"LightningWeb.UserLive.FormComponent.html"},{"type":"function","title":"LightningWeb.UserLive.FormComponent.render/1","doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"LightningWeb.UserLive.FormComponent.html#render/1"},{"type":"module","title":"LightningWeb.UserLive.Index","doc":"Index page for listing users","ref":"LightningWeb.UserLive.Index.html"},{"type":"function","title":"LightningWeb.UserLive.Index.delete_action/1","doc":"","ref":"LightningWeb.UserLive.Index.html#delete_action/1"},{"type":"function","title":"LightningWeb.UserLive.Index.render/1","doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"LightningWeb.UserLive.Index.html#render/1"},{"type":"module","title":"LightningWeb.UserRegistrationController","doc":"","ref":"LightningWeb.UserRegistrationController.html"},{"type":"function","title":"LightningWeb.UserRegistrationController.create/2","doc":"","ref":"LightningWeb.UserRegistrationController.html#create/2"},{"type":"function","title":"LightningWeb.UserRegistrationController.new/2","doc":"","ref":"LightningWeb.UserRegistrationController.html#new/2"},{"type":"module","title":"LightningWeb.UserResetPasswordController","doc":"","ref":"LightningWeb.UserResetPasswordController.html"},{"type":"function","title":"LightningWeb.UserResetPasswordController.create/2","doc":"","ref":"LightningWeb.UserResetPasswordController.html#create/2"},{"type":"function","title":"LightningWeb.UserResetPasswordController.edit/2","doc":"","ref":"LightningWeb.UserResetPasswordController.html#edit/2"},{"type":"function","title":"LightningWeb.UserResetPasswordController.new/2","doc":"","ref":"LightningWeb.UserResetPasswordController.html#new/2"},{"type":"function","title":"LightningWeb.UserResetPasswordController.update/2","doc":"","ref":"LightningWeb.UserResetPasswordController.html#update/2"},{"type":"module","title":"LightningWeb.UserSessionController","doc":"","ref":"LightningWeb.UserSessionController.html"},{"type":"function","title":"LightningWeb.UserSessionController.auth_handler_url/0","doc":"","ref":"LightningWeb.UserSessionController.html#auth_handler_url/0"},{"type":"function","title":"LightningWeb.UserSessionController.create/2","doc":"","ref":"LightningWeb.UserSessionController.html#create/2"},{"type":"function","title":"LightningWeb.UserSessionController.delete/2","doc":"","ref":"LightningWeb.UserSessionController.html#delete/2"},{"type":"function","title":"LightningWeb.UserSessionController.exchange_token/2","doc":"","ref":"LightningWeb.UserSessionController.html#exchange_token/2"},{"type":"function","title":"LightningWeb.UserSessionController.new/2","doc":"","ref":"LightningWeb.UserSessionController.html#new/2"},{"type":"module","title":"LightningWeb.UserTOTPController","doc":"","ref":"LightningWeb.UserTOTPController.html"},{"type":"function","title":"LightningWeb.UserTOTPController.create/2","doc":"","ref":"LightningWeb.UserTOTPController.html#create/2"},{"type":"function","title":"LightningWeb.UserTOTPController.new/2","doc":"","ref":"LightningWeb.UserTOTPController.html#new/2"},{"type":"module","title":"LightningWeb.VersionControlController","doc":"","ref":"LightningWeb.VersionControlController.html"},{"type":"function","title":"LightningWeb.VersionControlController.index/2","doc":"","ref":"LightningWeb.VersionControlController.html#index/2"},{"type":"module","title":"LightningWeb.WebhooksController","doc":"","ref":"LightningWeb.WebhooksController.html"},{"type":"function","title":"LightningWeb.WebhooksController.create/2","doc":"","ref":"LightningWeb.WebhooksController.html#create/2"},{"type":"module","title":"LightningWeb.WorkflowLive.EditorPane","doc":"","ref":"LightningWeb.WorkflowLive.EditorPane.html"},{"type":"function","title":"LightningWeb.WorkflowLive.EditorPane.render/1","doc":"Attributes id ( :string ) (required) disabled ( :boolean ) - Defaults to false . class ( :string ) - Defaults to &quot;&quot; . on_change ( :any ) (required) adaptor ( :string ) (required) source ( :string ) (required) job_id ( :string ) (required)","ref":"LightningWeb.WorkflowLive.EditorPane.html#render/1"},{"type":"module","title":"LightningWeb.WorkflowLive.Helpers","doc":"Helper functions for the Workflow LiveViews.","ref":"LightningWeb.WorkflowLive.Helpers.html"},{"type":"function","title":"LightningWeb.WorkflowLive.Helpers.create_user_workorder/1","doc":"","ref":"LightningWeb.WorkflowLive.Helpers.html#create_user_workorder/1"},{"type":"function","title":"LightningWeb.WorkflowLive.Helpers.save_and_run/2","doc":"","ref":"LightningWeb.WorkflowLive.Helpers.html#save_and_run/2"},{"type":"function","title":"LightningWeb.WorkflowLive.Helpers.save_workflow/1","doc":"","ref":"LightningWeb.WorkflowLive.Helpers.html#save_workflow/1"},{"type":"module","title":"LightningWeb.WorkflowLive.JobView","doc":"","ref":"LightningWeb.WorkflowLive.JobView.html"},{"type":"function","title":"LightningWeb.WorkflowLive.JobView.container/1","doc":"Attributes id ( :string ) (required) Slots top inner_block bottom column - Accepts attributes: class ( :string ) - Extra CSS classes for the column.","ref":"LightningWeb.WorkflowLive.JobView.html#container/1"},{"type":"function","title":"LightningWeb.WorkflowLive.JobView.job_edit_view/1","doc":"Attributes job ( :map ) (required) form ( :map ) (required) - A form built from a job. current_user ( :map ) (required) project ( :map ) (required) close_url ( :any ) (required) socket ( :any ) (required) follow_run_id ( :any ) - Defaults to nil . Slots footer collapsible_panel - Accepts attributes: id ( :string ) (required) panel_title ( :string ) (required) class ( :string ) - Extra CSS classes for the column.","ref":"LightningWeb.WorkflowLive.JobView.html#job_edit_view/1"},{"type":"module","title":"LightningWeb.WorkflowNewLive.WorkflowParams","doc":"Various function for reconciling changes to a workflow params map. The front end editor uses JSON patches to represent changes to the workflow.","ref":"LightningWeb.WorkflowNewLive.WorkflowParams.html"},{"type":"function","title":"LightningWeb.WorkflowNewLive.WorkflowParams.apply_form_params/2","doc":"Produce a new set of params by applying the given form params to the current params.","ref":"LightningWeb.WorkflowNewLive.WorkflowParams.html#apply_form_params/2"},{"type":"function","title":"LightningWeb.WorkflowNewLive.WorkflowParams.apply_patches/2","doc":"Produce a new set of params by applying the given patches to the current parms","ref":"LightningWeb.WorkflowNewLive.WorkflowParams.html#apply_patches/2"},{"type":"function","title":"LightningWeb.WorkflowNewLive.WorkflowParams.to_map/1","doc":"Convert a changeset to a serializable map of workflow params, suitable for sending to the front end editor. It uses Lightning.Helpers.json_safe/1 to ensure that the map is safe to serialize to JSON. This is necessary because the underlying model may contain atom values.","ref":"LightningWeb.WorkflowNewLive.WorkflowParams.html#to_map/1"},{"type":"function","title":"LightningWeb.WorkflowNewLive.WorkflowParams.to_patches/2","doc":"Produce a set of patches that represent the difference between the initial params and the target params. This usually is used to produce a set of patches that represent the changes introduced by a changeset.","ref":"LightningWeb.WorkflowNewLive.WorkflowParams.html#to_patches/2"},{"type":"task","title":"Mix.Tasks.Lightning.GenEncryptionKey","doc":"Helper to generate a unique encryption key for Vault","ref":"Mix.Tasks.Lightning.GenEncryptionKey.html"},{"type":"task","title":"Mix.Tasks.Lightning.InstallRuntime","doc":"Installs the following NodeJS packages: core language-common","ref":"Mix.Tasks.Lightning.InstallRuntime.html"},{"type":"function","title":"Mix.Tasks.Lightning.InstallRuntime.packages/0","doc":"","ref":"Mix.Tasks.Lightning.InstallRuntime.html#packages/0"},{"type":"function","title":"Mix.Tasks.Lightning.InstallRuntime.run/1","doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Lightning.InstallRuntime.html#run/1"},{"type":"task","title":"Mix.Tasks.Lightning.InstallSchemas","doc":"Install the credential json schemas Use --exclude language-package1, language-package2 to exclude specific packages","ref":"Mix.Tasks.Lightning.InstallSchemas.html"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.delete/3","doc":"Issues a DELETE request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#delete/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.delete!/3","doc":"Issues a DELETE request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#delete!/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.fetch_schemas/2","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#fetch_schemas/2"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.get/3","doc":"Issues a GET request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#get/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.get!/3","doc":"Issues a GET request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#get!/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.head/3","doc":"Issues a HEAD request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#head/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.head!/3","doc":"Issues a HEAD request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#head!/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.options/3","doc":"Issues an OPTIONS request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#options/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.options!/3","doc":"Issues a OPTIONS request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#options!/3"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.parse_excluded/1","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#parse_excluded/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.patch/4","doc":"Issues a PATCH request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#patch/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.patch!/4","doc":"Issues a PATCH request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#patch!/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.persist_schema/2","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#persist_schema/2"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.post/4","doc":"Issues a POST request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#post/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.post!/4","doc":"Issues a POST request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#post!/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_headers/1","doc":"Callback implementation for HTTPoison.Base.process_headers/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_headers/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_request_body/1","doc":"Callback implementation for HTTPoison.Base.process_request_body/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_request_body/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_request_headers/1","doc":"Callback implementation for HTTPoison.Base.process_request_headers/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_request_headers/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_request_options/1","doc":"Callback implementation for HTTPoison.Base.process_request_options/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_request_options/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_request_params/1","doc":"Callback implementation for HTTPoison.Base.process_request_params/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_request_params/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_request_url/1","doc":"Callback implementation for HTTPoison.Base.process_request_url/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_request_url/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_response/1","doc":"Callback implementation for HTTPoison.Base.process_response/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_response/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_response_body/1","doc":"Callback implementation for HTTPoison.Base.process_response_body/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_response_body/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_response_chunk/1","doc":"Callback implementation for HTTPoison.Base.process_response_chunk/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_response_chunk/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_response_headers/1","doc":"Callback implementation for HTTPoison.Base.process_response_headers/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_response_headers/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_response_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_response_status_code/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_response_status_code/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_status_code/1","doc":"Callback implementation for HTTPoison.Base.process_status_code/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_status_code/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.process_url/1","doc":"Callback implementation for HTTPoison.Base.process_url/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#process_url/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.put/4","doc":"Issues a PUT request to the given url. Returns {:ok, response} if the request is successful, {:error, reason} otherwise. See request/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#put/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.put!/4","doc":"Issues a PUT request to the given url, raising an exception in case of failure. If the request does not fail, the response is returned. See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#put!/4"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.request/1","doc":"Issues an HTTP request using a Request struct. This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request = % HTTPoison.Request { method : :post , url : &quot;https://my.website.com&quot; , body : &quot;{ \\&quot; foo \\&quot; : 3}&quot; , headers : [ { &quot;Accept&quot; , &quot;application/json&quot; } ] } request ( request )","ref":"Mix.Tasks.Lightning.InstallSchemas.html#request/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.request/5","doc":"Issues an HTTP request with the given method to the given url. This function is usually used indirectly by get/3 , post/4 , put/4 , etc Args: method - HTTP method as an atom ( :get , :head , :post , :put , :delete , etc.) url - target url as a binary string or char list body - request body. See more below headers - HTTP headers as an orddict (e.g., [{&quot;Accept&quot;, &quot;application/json&quot;}] ) options - Keyword list of options Body: see type HTTPoison.Request Options: see type HTTPoison.Request This function returns {:ok, response} , {:ok, async_response} , or {:ok, maybe_redirect} if the request is successful, {:error, reason} otherwise. Redirect handling If the option :follow_redirect is given, HTTP redirects are automatically follow if the method is set to :get or :head and the response's status_code is 301 , 302 or 307 . If the method is set to :post , then the only status_code that get's automatically followed is 303 . If any other method or status_code is returned, then this function returns a returns a {:ok, %HTTPoison.MaybeRedirect{}} containing the redirect_url for you to re-request with the method set to :get . Examples request ( :post , &quot;https://my.website.com&quot; , &quot;{ \\&quot; foo \\&quot; : 3}&quot; , [ { &quot;Accept&quot; , &quot;application/json&quot; } ] )","ref":"Mix.Tasks.Lightning.InstallSchemas.html#request/5"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.request!/5","doc":"Issues an HTTP request with the given method to the given url, raising an exception in case of failure. request!/5 works exactly like request/5 but it returns just the response in case of a successful request, raising an exception in case the request fails.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#request!/5"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.run/1","doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Lightning.InstallSchemas.html#run/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.start/0","doc":"Starts HTTPoison and its dependencies.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#start/0"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.stream_next/1","doc":"Requests the next message to be streamed for a given HTTPoison.AsyncResponse . See request!/5 for more detailed information.","ref":"Mix.Tasks.Lightning.InstallSchemas.html#stream_next/1"},{"type":"function","title":"Mix.Tasks.Lightning.InstallSchemas.write_schema/3","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#write_schema/3"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.body/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:body/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.headers/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:headers/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.method/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:method/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.options/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:options/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.params/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:params/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.request/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:request/0"},{"type":"type","title":"Mix.Tasks.Lightning.InstallSchemas.url/0","doc":"","ref":"Mix.Tasks.Lightning.InstallSchemas.html#t:url/0"},{"type":"module","title":"ObanPruner","doc":"The Oban Pruner removes completed Oban jobs. It leaves everything else for manual inspection.","ref":"ObanPruner.html"},{"type":"function","title":"ObanPruner.perform/1","doc":"Deletes completed Oban jobs, leaving discarded for manual inspection.","ref":"ObanPruner.html#perform/1"},{"type":"module","title":"Storybook.Root","doc":"","ref":"Storybook.Root.html"},{"type":"module","title":"Lightning.Accounts","doc":"The Accounts context.","ref":"Lightning.Accounts.html"},{"type":"function","title":"Lightning.Accounts.apply_user_email/3","doc":"Emulates that the email will change without actually changing it in the database. Examples iex&gt; apply_user_email ( user , &quot;valid password&quot; , %{ email : ... } ) { :ok , % User { } } role : :superuser iex&gt; apply_user_email ( user , &quot;invalid password&quot; , %{ email : ... } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#apply_user_email/3"},{"type":"function","title":"Lightning.Accounts.cancel_scheduled_deletion/1","doc":"","ref":"Lightning.Accounts.html#cancel_scheduled_deletion/1"},{"type":"function","title":"Lightning.Accounts.change_scheduled_deletion/2","doc":"Returns an %Ecto.Changeset{} for changing the user scheduled_deletion. Examples iex&gt; change_scheduled_deletion ( user ) % Ecto.Changeset { data : % User { } }","ref":"Lightning.Accounts.html#change_scheduled_deletion/2"},{"type":"function","title":"Lightning.Accounts.change_superuser_registration/1","doc":"Returns an %Ecto.Changeset{} for tracking superuser changes. Examples iex&gt; change_superuser_registration ( user ) % Ecto.Changeset { data : % User { } }","ref":"Lightning.Accounts.html#change_superuser_registration/1"},{"type":"function","title":"Lightning.Accounts.change_user_details/2","doc":"","ref":"Lightning.Accounts.html#change_user_details/2"},{"type":"function","title":"Lightning.Accounts.change_user_email/2","doc":"Returns an %Ecto.Changeset{} for changing the user email. Examples iex&gt; change_user_email ( user ) % Ecto.Changeset { data : % User { } }","ref":"Lightning.Accounts.html#change_user_email/2"},{"type":"function","title":"Lightning.Accounts.change_user_password/2","doc":"Returns an %Ecto.Changeset{} for changing the user password. Examples iex&gt; change_user_password ( user ) % Ecto.Changeset { data : % User { } }","ref":"Lightning.Accounts.html#change_user_password/2"},{"type":"function","title":"Lightning.Accounts.change_user_registration/1","doc":"Returns an %Ecto.Changeset{} for tracking user changes. Examples iex&gt; change_user_registration ( user ) % Ecto.Changeset { data : % User { } }","ref":"Lightning.Accounts.html#change_user_registration/1"},{"type":"function","title":"Lightning.Accounts.confirm_user/1","doc":"Confirms a user by the given token. If the token matches, the user account is marked as confirmed and the token is deleted.","ref":"Lightning.Accounts.html#confirm_user/1"},{"type":"function","title":"Lightning.Accounts.delete_auth_token/1","doc":"Deletes the signed token with the given context.","ref":"Lightning.Accounts.html#delete_auth_token/1"},{"type":"function","title":"Lightning.Accounts.delete_session_token/1","doc":"Deletes the signed token with the given context.","ref":"Lightning.Accounts.html#delete_session_token/1"},{"type":"function","title":"Lightning.Accounts.delete_sudo_session_token/1","doc":"Deletes the signed token with the given context.","ref":"Lightning.Accounts.html#delete_sudo_session_token/1"},{"type":"function","title":"Lightning.Accounts.delete_token/1","doc":"Deletes a token. Examples iex&gt; delete_token ( token ) { :ok , % UserToken { } } iex&gt; delete_token ( token ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#delete_token/1"},{"type":"function","title":"Lightning.Accounts.delete_user/1","doc":"Deletes a user. Examples iex&gt; delete_user ( user ) { :ok , % User { } } iex&gt; delete_user ( user ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#delete_user/1"},{"type":"function","title":"Lightning.Accounts.delete_user_totp/1","doc":"Deletes the given user's TOTP","ref":"Lightning.Accounts.html#delete_user_totp/1"},{"type":"function","title":"Lightning.Accounts.deliver_update_email_instructions/3","doc":"Delivers the update email instructions to the given user. Examples iex&gt; deliver_update_email_instructions ( user , current_email , &amp; Routes . user_update_email_url ( conn , :edit , &amp;1 ) ) { :ok , %{ to : ... , body : ... } }","ref":"Lightning.Accounts.html#deliver_update_email_instructions/3"},{"type":"function","title":"Lightning.Accounts.deliver_user_confirmation_instructions/2","doc":"Delivers the confirmation email instructions to the given user. Examples iex&gt; deliver_user_confirmation_instructions ( user , &amp; Routes . user_confirmation_url ( conn , :edit , &amp;1 ) ) { :ok , %{ to : ... , body : ... } } iex&gt; deliver_user_confirmation_instructions ( confirmed_user , &amp; Routes . user_confirmation_url ( conn , :edit , &amp;1 ) ) { :error , :already_confirmed }","ref":"Lightning.Accounts.html#deliver_user_confirmation_instructions/2"},{"type":"function","title":"Lightning.Accounts.deliver_user_confirmation_instructions/3","doc":"","ref":"Lightning.Accounts.html#deliver_user_confirmation_instructions/3"},{"type":"function","title":"Lightning.Accounts.deliver_user_reset_password_instructions/2","doc":"Delivers the reset password email to the given user. Examples iex&gt; deliver_user_reset_password_instructions ( user , &amp; Routes . user_reset_password_url ( conn , :edit , &amp;1 ) ) { :ok , %{ to : ... , body : ... } }","ref":"Lightning.Accounts.html#deliver_user_reset_password_instructions/2"},{"type":"function","title":"Lightning.Accounts.exchange_auth_token/1","doc":"Exchanges an auth token for a session token. The auth token is removed from the database if successful.","ref":"Lightning.Accounts.html#exchange_auth_token/1"},{"type":"function","title":"Lightning.Accounts.generate_api_token/1","doc":"Generates an API token for a user.","ref":"Lightning.Accounts.html#generate_api_token/1"},{"type":"function","title":"Lightning.Accounts.generate_auth_token/1","doc":"Generates an auth token.","ref":"Lightning.Accounts.html#generate_auth_token/1"},{"type":"function","title":"Lightning.Accounts.generate_sudo_session_token/1","doc":"Generates a 2FA session token.","ref":"Lightning.Accounts.html#generate_sudo_session_token/1"},{"type":"function","title":"Lightning.Accounts.generate_user_session_token/1","doc":"Generates a session token.","ref":"Lightning.Accounts.html#generate_user_session_token/1"},{"type":"function","title":"Lightning.Accounts.get_token!/1","doc":"Gets a single token. Raises Ecto.NoResultsError if the UserToken does not exist. Examples iex&gt; get_token! ( 123 ) % UserToken { } iex&gt; get_token! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Accounts.html#get_token!/1"},{"type":"function","title":"Lightning.Accounts.get_user!/1","doc":"Gets a single user. Raises Ecto.NoResultsError if the User does not exist. Examples iex&gt; get_user! ( 123 ) % User { } iex&gt; get_user! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Accounts.html#get_user!/1"},{"type":"function","title":"Lightning.Accounts.get_user_by_api_token/1","doc":"Gets the user with the given signed token.","ref":"Lightning.Accounts.html#get_user_by_api_token/1"},{"type":"function","title":"Lightning.Accounts.get_user_by_auth_token/1","doc":"Gets the user with the given signed token.","ref":"Lightning.Accounts.html#get_user_by_auth_token/1"},{"type":"function","title":"Lightning.Accounts.get_user_by_email/1","doc":"Gets a user by email. Examples iex&gt; get_user_by_email ( &quot;foo@example.com&quot; ) % User { } iex&gt; get_user_by_email ( &quot;unknown@example.com&quot; ) nil","ref":"Lightning.Accounts.html#get_user_by_email/1"},{"type":"function","title":"Lightning.Accounts.get_user_by_email_and_password/2","doc":"Gets a user by email and password. Examples iex&gt; get_user_by_email_and_password ( &quot;foo@example.com&quot; , &quot;correct_password&quot; ) % User { } iex&gt; get_user_by_email_and_password ( &quot;foo@example.com&quot; , &quot;invalid_password&quot; ) nil","ref":"Lightning.Accounts.html#get_user_by_email_and_password/2"},{"type":"function","title":"Lightning.Accounts.get_user_by_reset_password_token/1","doc":"Gets the user by reset password token. Examples iex&gt; get_user_by_reset_password_token ( &quot;validtoken&quot; ) % User { } iex&gt; get_user_by_reset_password_token ( &quot;invalidtoken&quot; ) nil","ref":"Lightning.Accounts.html#get_user_by_reset_password_token/1"},{"type":"function","title":"Lightning.Accounts.get_user_by_session_token/1","doc":"Gets the user with the given signed token.","ref":"Lightning.Accounts.html#get_user_by_session_token/1"},{"type":"function","title":"Lightning.Accounts.get_user_totp/1","doc":"Gets a single UserTOTP if any exists.","ref":"Lightning.Accounts.html#get_user_totp/1"},{"type":"function","title":"Lightning.Accounts.get_users_to_alert_for_project/1","doc":"Gets all users to alert of workflow failure for a project","ref":"Lightning.Accounts.html#get_users_to_alert_for_project/1"},{"type":"function","title":"Lightning.Accounts.has_activity_in_projects?/1","doc":"","ref":"Lightning.Accounts.html#has_activity_in_projects?/1"},{"type":"function","title":"Lightning.Accounts.has_one_superuser?/0","doc":"Used to determine if there is at least one Superuser in the system. This triggers the setup page on fresh installs.","ref":"Lightning.Accounts.html#has_one_superuser?/0"},{"type":"function","title":"Lightning.Accounts.list_api_tokens/1","doc":"Lists all user tokens","ref":"Lightning.Accounts.html#list_api_tokens/1"},{"type":"function","title":"Lightning.Accounts.list_user_backup_codes/1","doc":"Lists the user backup codes","ref":"Lightning.Accounts.html#list_user_backup_codes/1"},{"type":"function","title":"Lightning.Accounts.list_users/0","doc":"Returns the list of users. Examples iex&gt; list_users ( ) [ % User { } , ... ]","ref":"Lightning.Accounts.html#list_users/0"},{"type":"function","title":"Lightning.Accounts.perform/1","doc":"Perform, when called with %{&quot;type&quot; =&gt; &quot;purge_deleted&quot;} will find users that are ready for permanent deletion and purge them.","ref":"Lightning.Accounts.html#perform/1"},{"type":"function","title":"Lightning.Accounts.purge_user/1","doc":"","ref":"Lightning.Accounts.html#purge_user/1"},{"type":"function","title":"Lightning.Accounts.regenerate_user_backup_codes/1","doc":"Regenerates the user backup codes","ref":"Lightning.Accounts.html#regenerate_user_backup_codes/1"},{"type":"function","title":"Lightning.Accounts.register_superuser/1","doc":"Registers a superuser. Examples iex&gt; register_superuser ( %{ field : value } ) { :ok , % User { } } iex&gt; register_superuser ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#register_superuser/1"},{"type":"function","title":"Lightning.Accounts.register_user/1","doc":"Registers a user. Examples iex&gt; register_user ( %{ field : value } ) { :ok , % User { } } iex&gt; register_user ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#register_user/1"},{"type":"function","title":"Lightning.Accounts.reset_user_password/2","doc":"Resets the user password. Examples iex&gt; reset_user_password ( user , %{ password : &quot;new long password&quot; , password_confirmation : &quot;new long password&quot; } ) { :ok , % User { } } iex&gt; reset_user_password ( user , %{ password : &quot;valid&quot; , password_confirmation : &quot;not the same&quot; } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#reset_user_password/2"},{"type":"function","title":"Lightning.Accounts.schedule_user_deletion/2","doc":"Given a user and a confirmation email, this function sets a scheduled deletion date based on the PURGE_DELETED_AFTER_DAYS environment variable. If no ENV is set, this date defaults to NOW but the automatic user purge cronjob will never run. (Note that subsequent logins will be blocked for users pending deletion.)","ref":"Lightning.Accounts.html#schedule_user_deletion/2"},{"type":"function","title":"Lightning.Accounts.sudo_session_token_valid?/2","doc":"Checks if the given sudo token for the user is valid","ref":"Lightning.Accounts.html#sudo_session_token_valid?/2"},{"type":"function","title":"Lightning.Accounts.update_user_details/2","doc":"","ref":"Lightning.Accounts.html#update_user_details/2"},{"type":"function","title":"Lightning.Accounts.update_user_email/2","doc":"Updates the user email using the given token. If the token matches, the user email is updated and the token is deleted. The confirmed_at date is also updated to the current time.","ref":"Lightning.Accounts.html#update_user_email/2"},{"type":"function","title":"Lightning.Accounts.update_user_password/3","doc":"Updates the user password. Examples iex&gt; update_user_password ( user , &quot;valid password&quot; , %{ password : ... } ) { :ok , % User { } } iex&gt; update_user_password ( user , &quot;invalid password&quot; , %{ password : ... } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Accounts.html#update_user_password/3"},{"type":"function","title":"Lightning.Accounts.upsert_user_totp/2","doc":"Updates or Inserts the user's TOTP","ref":"Lightning.Accounts.html#upsert_user_totp/2"},{"type":"function","title":"Lightning.Accounts.valid_user_backup_code?/2","doc":"Validates if the given Backup code is valid.","ref":"Lightning.Accounts.html#valid_user_backup_code?/2"},{"type":"function","title":"Lightning.Accounts.valid_user_totp?/2","doc":"Validates if the given TOTP code is valid.","ref":"Lightning.Accounts.html#valid_user_totp?/2"},{"type":"function","title":"Lightning.Accounts.validate_change_user_email/2","doc":"","ref":"Lightning.Accounts.html#validate_change_user_email/2"},{"type":"module","title":"Lightning.Accounts.User","doc":"The User model.","ref":"Lightning.Accounts.User.html"},{"type":"function","title":"Lightning.Accounts.User.confirm_changeset/1","doc":"Confirms the account by setting confirmed_at .","ref":"Lightning.Accounts.User.html#confirm_changeset/1"},{"type":"function","title":"Lightning.Accounts.User.details_changeset/2","doc":"A user changeset for user details: email first_name last_name role","ref":"Lightning.Accounts.User.html#details_changeset/2"},{"type":"function","title":"Lightning.Accounts.User.email_changeset/2","doc":"A user changeset for changing the email. It requires the email to change otherwise an error is added.","ref":"Lightning.Accounts.User.html#email_changeset/2"},{"type":"function","title":"Lightning.Accounts.User.password_changeset/3","doc":"A user changeset for changing the password. Options :hash_password - Hashes the password so it can be stored securely in the database and ensures the password field is cleared to prevent leaks in the logs. If password hashing is not needed and clearing the password field is not desired (like when using this changeset for validations on a LiveView form), this option can be set to false . Defaults to true .","ref":"Lightning.Accounts.User.html#password_changeset/3"},{"type":"function","title":"Lightning.Accounts.User.scheduled_deletion_changeset/2","doc":"A user changeset for changing the scheduled_deletion property.","ref":"Lightning.Accounts.User.html#scheduled_deletion_changeset/2"},{"type":"function","title":"Lightning.Accounts.User.superuser_registration_changeset/2","doc":"A superuser changeset for registration. It is important to validate the length of both email and password. Otherwise databases may truncate the email without warnings, which could lead to unpredictable or insecure behaviour. Long passwords may also be very expensive to hash for certain algorithms. Options :hash_password - Hashes the password so it can be stored securely in the database and ensures the password field is cleared to prevent leaks in the logs. If password hashing is not needed and clearing the password field is not desired (like when using this changeset for validations on a LiveView form), this option can be set to false . Defaults to true .","ref":"Lightning.Accounts.User.html#superuser_registration_changeset/2"},{"type":"function","title":"Lightning.Accounts.User.user_registration_changeset/2","doc":"A user changeset for registration. It is important to validate the length of both email and password. Otherwise databases may truncate the email without warnings, which could lead to unpredictable or insecure behaviour. Long passwords may also be very expensive to hash for certain algorithms. Options :hash_password - Hashes the password so it can be stored securely in the database and ensures the password field is cleared to prevent leaks in the logs. If password hashing is not needed and clearing the password field is not desired (like when using this changeset for validations on a LiveView form), this option can be set to false . Defaults to true .","ref":"Lightning.Accounts.User.html#user_registration_changeset/2"},{"type":"function","title":"Lightning.Accounts.User.valid_password?/2","doc":"Verifies the password. If there is no user or the user doesn't have a password, we call Bcrypt.no_user_verify/0 to avoid timing attacks.","ref":"Lightning.Accounts.User.html#valid_password?/2"},{"type":"function","title":"Lightning.Accounts.User.validate_current_password/2","doc":"Validates the current password otherwise adds an error to the changeset.","ref":"Lightning.Accounts.User.html#validate_current_password/2"},{"type":"type","title":"Lightning.Accounts.User.t/0","doc":"","ref":"Lightning.Accounts.User.html#t:t/0"},{"type":"module","title":"Lightning.Accounts.User.RolesEnum","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.cast/1","doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Lightning.Accounts.User.RolesEnum.html#cast/1"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.create_type/0","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#create_type/0"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.drop_type/0","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#drop_type/0"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.dump/1","doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Lightning.Accounts.User.RolesEnum.html#dump/1"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.embed_as/1","doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Lightning.Accounts.User.RolesEnum.html#embed_as/1"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.equal?/2","doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Lightning.Accounts.User.RolesEnum.html#equal?/2"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.load/1","doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Lightning.Accounts.User.RolesEnum.html#load/1"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.schema/0","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#schema/0"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.schemaless_type/0","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#schemaless_type/0"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.type/0","doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Lightning.Accounts.User.RolesEnum.html#type/0"},{"type":"function","title":"Lightning.Accounts.User.RolesEnum.valid_value?/1","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#valid_value?/1"},{"type":"type","title":"Lightning.Accounts.User.RolesEnum.t/0","doc":"","ref":"Lightning.Accounts.User.RolesEnum.html#t:t/0"},{"type":"module","title":"Lightning.Accounts.UserBackupCode","doc":"User backup codes schema","ref":"Lightning.Accounts.UserBackupCode.html"},{"type":"function","title":"Lightning.Accounts.UserBackupCode.changeset/2","doc":"","ref":"Lightning.Accounts.UserBackupCode.html#changeset/2"},{"type":"function","title":"Lightning.Accounts.UserBackupCode.generate_backup_code/0","doc":"","ref":"Lightning.Accounts.UserBackupCode.html#generate_backup_code/0"},{"type":"type","title":"Lightning.Accounts.UserBackupCode.t/0","doc":"","ref":"Lightning.Accounts.UserBackupCode.html#t:t/0"},{"type":"module","title":"Lightning.Accounts.UserNotifier","doc":"The UserNotifier module.","ref":"Lightning.Accounts.UserNotifier.html"},{"type":"function","title":"Lightning.Accounts.UserNotifier.build_digest_url/3","doc":"","ref":"Lightning.Accounts.UserNotifier.html#build_digest_url/3"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_confirmation_instructions/2","doc":"Deliver instructions to confirm account.","ref":"Lightning.Accounts.UserNotifier.html#deliver_confirmation_instructions/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_confirmation_instructions/3","doc":"Deliver instructions to confirm account.","ref":"Lightning.Accounts.UserNotifier.html#deliver_confirmation_instructions/3"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_project_addition_notification/2","doc":"Deliver email to notify user of his addition of a project.","ref":"Lightning.Accounts.UserNotifier.html#deliver_project_addition_notification/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_project_digest/2","doc":"Deliver a project digest of daily/weekly or monthly activity to a user.","ref":"Lightning.Accounts.UserNotifier.html#deliver_project_digest/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_reset_password_instructions/2","doc":"Deliver instructions to reset a user password.","ref":"Lightning.Accounts.UserNotifier.html#deliver_reset_password_instructions/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_update_email_instructions/2","doc":"Deliver instructions to update a user email.","ref":"Lightning.Accounts.UserNotifier.html#deliver_update_email_instructions/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.deliver_update_email_warning/2","doc":"Deliver warning to update a user email.","ref":"Lightning.Accounts.UserNotifier.html#deliver_update_email_warning/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.notify_project_deletion/2","doc":"","ref":"Lightning.Accounts.UserNotifier.html#notify_project_deletion/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.send_credential_deletion_notification_email/2","doc":"","ref":"Lightning.Accounts.UserNotifier.html#send_credential_deletion_notification_email/2"},{"type":"function","title":"Lightning.Accounts.UserNotifier.send_deletion_notification_email/1","doc":"Deliver an email to notify the user about their account being deleted","ref":"Lightning.Accounts.UserNotifier.html#send_deletion_notification_email/1"},{"type":"module","title":"Lightning.Accounts.UserTOTP","doc":"User Time based OTPs schema","ref":"Lightning.Accounts.UserTOTP.html"},{"type":"function","title":"Lightning.Accounts.UserTOTP.changeset/2","doc":"","ref":"Lightning.Accounts.UserTOTP.html#changeset/2"},{"type":"function","title":"Lightning.Accounts.UserTOTP.valid_totp?/2","doc":"","ref":"Lightning.Accounts.UserTOTP.html#valid_totp?/2"},{"type":"type","title":"Lightning.Accounts.UserTOTP.t/0","doc":"","ref":"Lightning.Accounts.UserTOTP.html#t:t/0"},{"type":"module","title":"Lightning.Accounts.UserToken","doc":"The UserToken model. The reason why we store session tokens in the database, even though Phoenix already provides a session cookie, is because Phoenix' default session cookies are not persisted, they are simply signed and potentially encrypted. This means they are valid indefinitely, unless you change the signing/encryption salt. Therefore, storing them allows individual user sessions to be expired. The token system can also be extended to store additional data, such as the device used for logging in. You could then use this information to display all valid sessions and devices in the UI and allow users to explicitly expire any session they deem invalid.","ref":"Lightning.Accounts.UserToken.html"},{"type":"function","title":"Lightning.Accounts.UserToken.build_email_token/3","doc":"Builds a token and its hash to be delivered to the user's email. The non-hashed token is sent to the user email while the hashed part is stored in the database. The original token cannot be reconstructed, which means anyone with read-only access to the database cannot directly use the token in the application to gain access. Furthermore, if the user changes their email in the system, the tokens sent to the previous email are no longer valid. Users can easily adapt the existing code to provide other types of delivery methods, for example, by phone numbers.","ref":"Lightning.Accounts.UserToken.html#build_email_token/3"},{"type":"function","title":"Lightning.Accounts.UserToken.build_token/2","doc":"Generates a token that will be stored in a signed place, such as session or cookie. As they are signed, those tokens do not need to be hashed.","ref":"Lightning.Accounts.UserToken.html#build_token/2"},{"type":"function","title":"Lightning.Accounts.UserToken.changeset/2","doc":"","ref":"Lightning.Accounts.UserToken.html#changeset/2"},{"type":"function","title":"Lightning.Accounts.UserToken.generate_and_sign/2","doc":"Combines generate_claims/1 and encode_and_sign/2","ref":"Lightning.Accounts.UserToken.html#generate_and_sign/2"},{"type":"function","title":"Lightning.Accounts.UserToken.generate_and_sign!/2","doc":"Same as generate_and_sign/2 but raises if error","ref":"Lightning.Accounts.UserToken.html#generate_and_sign!/2"},{"type":"function","title":"Lightning.Accounts.UserToken.last_used_changeset/1","doc":"Update when the api token was last used by setting last_used_at .","ref":"Lightning.Accounts.UserToken.html#last_used_changeset/1"},{"type":"function","title":"Lightning.Accounts.UserToken.token_and_context_query/2","doc":"Returns the token struct for the given token value and context.","ref":"Lightning.Accounts.UserToken.html#token_and_context_query/2"},{"type":"function","title":"Lightning.Accounts.UserToken.user_and_contexts_query/2","doc":"Gets all tokens for the given user for the given contexts.","ref":"Lightning.Accounts.UserToken.html#user_and_contexts_query/2"},{"type":"function","title":"Lightning.Accounts.UserToken.verify_and_validate/3","doc":"Combines verify/2 and validate/2","ref":"Lightning.Accounts.UserToken.html#verify_and_validate/3"},{"type":"function","title":"Lightning.Accounts.UserToken.verify_and_validate!/3","doc":"Same as verify_and_validate/2 but raises if error","ref":"Lightning.Accounts.UserToken.html#verify_and_validate!/3"},{"type":"function","title":"Lightning.Accounts.UserToken.verify_change_email_token_query/2","doc":"Checks if the token is valid and returns its underlying lookup query. The query returns the user found by the token, if any. This is used to validate requests to change the user email. It is different from verify_email_token_query/2 precisely because verify_email_token_query/2 validates the email has not changed, which is the starting point by this function. The given token is valid if it matches its hashed counterpart in the database and if it has not expired (after @change_email_validity_in_days). The context must always start with &quot;change:&quot;.","ref":"Lightning.Accounts.UserToken.html#verify_change_email_token_query/2"},{"type":"function","title":"Lightning.Accounts.UserToken.verify_email_token_query/2","doc":"Checks if the token is valid and returns its underlying lookup query. The query returns the user found by the token, if any. The given token is valid if it matches its hashed counterpart in the database and the user email has not changed. This function also checks if the token is being used within a certain period, depending on the context. The default contexts supported by this function are either &quot;confirm&quot;, for account confirmation emails, and &quot;reset_password&quot;, for resetting the password. For verifying requests to change the email, see verify_change_email_token_query/2 .","ref":"Lightning.Accounts.UserToken.html#verify_email_token_query/2"},{"type":"function","title":"Lightning.Accounts.UserToken.verify_token_query/2","doc":"Checks if the token is valid and returns its underlying lookup query. The query returns the user found by the token, if any. The token is valid if it matches the value in the database and it has not expired (after @auth_validity_in_seconds or @session_validity_in_days).","ref":"Lightning.Accounts.UserToken.html#verify_token_query/2"},{"type":"module","title":"Lightning.Credentials","doc":"The Credentials context.","ref":"Lightning.Credentials.html"},{"type":"function","title":"Lightning.Credentials.cancel_scheduled_deletion/1","doc":"","ref":"Lightning.Credentials.html#cancel_scheduled_deletion/1"},{"type":"function","title":"Lightning.Credentials.change_credential/2","doc":"Returns an %Ecto.Changeset{} for tracking credential changes. Examples iex&gt; change_credential ( credential ) % Ecto.Changeset { data : % Credential { } }","ref":"Lightning.Credentials.html#change_credential/2"},{"type":"function","title":"Lightning.Credentials.create_credential/1","doc":"Creates a credential. Examples iex&gt; create_credential ( %{ field : value } ) { :ok , % Credential { } } iex&gt; create_credential ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Credentials.html#create_credential/1"},{"type":"function","title":"Lightning.Credentials.delete_credential/1","doc":"Deletes a credential. Examples iex&gt; delete_credential ( credential ) { :ok , % Credential { } } iex&gt; delete_credential ( credential ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Credentials.html#delete_credential/1"},{"type":"function","title":"Lightning.Credentials.get_credential!/1","doc":"Gets a single credential. Raises Ecto.NoResultsError if the Credential does not exist. Examples iex&gt; get_credential! ( 123 ) % Credential { } iex&gt; get_credential! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Credentials.html#get_credential!/1"},{"type":"function","title":"Lightning.Credentials.has_activity_in_projects?/1","doc":"Checks if a given Credential has any associated Run activity. Parameters _credential : A Credential struct. Only the id field is used by the function. Returns true if there's at least one Run associated with the given Credential . false otherwise. Examples iex&gt; has_activity_in_projects? ( % Credential { id : some_id } ) true iex&gt; has_activity_in_projects? ( % Credential { id : another_id } ) false Notes This function leverages the association between Run and Credential to determine if any runs exist for a given credential. It's a fast check that does not load any records into memory, but simply checks for their existence.","ref":"Lightning.Credentials.html#has_activity_in_projects?/1"},{"type":"function","title":"Lightning.Credentials.invalid_projects_for_user/2","doc":"Given a credential and a user, returns a list of invalid projects—i.e., those that the credential is shared with but that the user does not have access to. This is used to generate a validation error when a credential cannot be transferred. Examples iex&gt; can_credential_be_shared_to_user ( credential_id , user_id ) [ ] iex&gt; can_credential_be_shared_to_user ( credential_id , user_id ) [ &quot;52ea8758-6ce5-43d7-912f-6a1e1f11dc55&quot; ]","ref":"Lightning.Credentials.html#invalid_projects_for_user/2"},{"type":"function","title":"Lightning.Credentials.list_credentials/0","doc":"Returns the list of credentials. Examples iex&gt; list_credentials ( ) [ % Credential { } , ... ]","ref":"Lightning.Credentials.html#list_credentials/0"},{"type":"function","title":"Lightning.Credentials.list_credentials/1","doc":"","ref":"Lightning.Credentials.html#list_credentials/1"},{"type":"function","title":"Lightning.Credentials.list_credentials_for_user/1","doc":"Returns the list of credentials for a given user. Examples iex&gt; list_credentials_for_user ( 123 ) [ % Credential { user_id : 123 } , % Credential { user_id : 123 } , ... ]","ref":"Lightning.Credentials.html#list_credentials_for_user/1"},{"type":"function","title":"Lightning.Credentials.maybe_refresh_token/1","doc":"","ref":"Lightning.Credentials.html#maybe_refresh_token/1"},{"type":"function","title":"Lightning.Credentials.perform/1","doc":"Perform, when called with %{&quot;type&quot; =&gt; &quot;purge_deleted&quot;} will find credentials that are ready for permanent deletion, set their bodies to null, and attempt to purge them.","ref":"Lightning.Credentials.html#perform/1"},{"type":"function","title":"Lightning.Credentials.schedule_credential_deletion/1","doc":"Schedules a given credential for deletion. The deletion date is determined based on the :purge_deleted_after_days configuration in the application environment. If this configuration is absent, the credential is scheduled for immediate deletion. The function will also perform necessary side effects such as: Removing associations of the credential. Notifying the owner of the credential about the scheduled deletion. Parameters credential : A Credential struct that is to be scheduled for deletion. Returns {:ok, credential} : Returns an :ok tuple with the updated credential struct if the update was successful. {:error, changeset} : Returns an :error tuple with the changeset if the update failed. Examples iex&gt; schedule_credential_deletion ( % Credential { id : some_id } ) { :ok , % Credential { } } iex&gt; schedule_credential_deletion ( % Credential { } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Credentials.html#schedule_credential_deletion/1"},{"type":"function","title":"Lightning.Credentials.sensitive_values_for/1","doc":"","ref":"Lightning.Credentials.html#sensitive_values_for/1"},{"type":"function","title":"Lightning.Credentials.update_credential/2","doc":"Updates a credential. Examples iex&gt; update_credential ( credential , %{ field : new_value } ) { :ok , % Credential { } } iex&gt; update_credential ( credential , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Credentials.html#update_credential/2"},{"type":"module","title":"Lightning.Credentials.Audit","doc":"Model for storing changes to Credentials","ref":"Lightning.Credentials.Audit.html"},{"type":"function","title":"Lightning.Credentials.Audit.event/4","doc":"","ref":"Lightning.Credentials.Audit.html#event/4"},{"type":"function","title":"Lightning.Credentials.Audit.save/1","doc":"","ref":"Lightning.Credentials.Audit.html#save/1"},{"type":"module","title":"Lightning.Credentials.Credential","doc":"The Credential model.","ref":"Lightning.Credentials.Credential.html"},{"type":"type","title":"Lightning.Credentials.Credential.t/0","doc":"","ref":"Lightning.Credentials.Credential.html#t:t/0"},{"type":"module","title":"Lightning.Credentials.Schema","doc":"Structure that can parse JsonSchemas (using ExJsonSchema ) and validate changesets for a given schema.","ref":"Lightning.Credentials.Schema.html"},{"type":"function","title":"Lightning.Credentials.Schema.new/2","doc":"","ref":"Lightning.Credentials.Schema.html#new/2"},{"type":"function","title":"Lightning.Credentials.Schema.properties/2","doc":"","ref":"Lightning.Credentials.Schema.html#properties/2"},{"type":"function","title":"Lightning.Credentials.Schema.required?/2","doc":"","ref":"Lightning.Credentials.Schema.html#required?/2"},{"type":"function","title":"Lightning.Credentials.Schema.validate/2","doc":"","ref":"Lightning.Credentials.Schema.html#validate/2"},{"type":"type","title":"Lightning.Credentials.Schema.t/0","doc":"","ref":"Lightning.Credentials.Schema.html#t:t/0"},{"type":"module","title":"Lightning.Credentials.SchemaDocument","doc":"Provides facilities to dynamically create and validate a changeset for a given Schema","ref":"Lightning.Credentials.SchemaDocument.html"},{"type":"function","title":"Lightning.Credentials.SchemaDocument.changeset/3","doc":"","ref":"Lightning.Credentials.SchemaDocument.html#changeset/3"},{"type":"module","title":"Lightning.Credentials.SensitiveValues","doc":"Functions to pull out sensitive values inside a credential. These values are used to scrub logs for leaked secrets.","ref":"Lightning.Credentials.SensitiveValues.html"},{"type":"function","title":"Lightning.Credentials.SensitiveValues.flatten_map/1","doc":"Keys that are not considered sensitive","ref":"Lightning.Credentials.SensitiveValues.html#flatten_map/1"},{"type":"function","title":"Lightning.Credentials.SensitiveValues.secret_values/1","doc":"Given a map, find all values allowed (via @safe_keys ) and return them as a list.","ref":"Lightning.Credentials.SensitiveValues.html#secret_values/1"},{"type":"type","title":"Lightning.Credentials.SensitiveValues.pairs/0","doc":"","ref":"Lightning.Credentials.SensitiveValues.html#t:pairs/0"},{"type":"type","title":"Lightning.Credentials.SensitiveValues.raw_pairs/0","doc":"","ref":"Lightning.Credentials.SensitiveValues.html#t:raw_pairs/0"},{"type":"module","title":"Lightning.Invocation","doc":"The Invocation context.","ref":"Lightning.Invocation.html"},{"type":"function","title":"Lightning.Invocation.change_dataclip/2","doc":"Returns an %Ecto.Changeset{} for tracking dataclip changes. Examples iex&gt; change_dataclip ( dataclip ) % Ecto.Changeset { data : % Dataclip { } }","ref":"Lightning.Invocation.html#change_dataclip/2"},{"type":"function","title":"Lightning.Invocation.change_run/2","doc":"Returns an %Ecto.Changeset{} for tracking run changes. Examples iex&gt; change_run ( run ) % Ecto.Changeset { data : % Run { } }","ref":"Lightning.Invocation.html#change_run/2"},{"type":"function","title":"Lightning.Invocation.create_dataclip/1","doc":"Creates a dataclip. Examples iex&gt; create_dataclip ( %{ field : value } ) { :ok , % Dataclip { } } iex&gt; create_dataclip ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#create_dataclip/1"},{"type":"function","title":"Lightning.Invocation.create_log_line/2","doc":"","ref":"Lightning.Invocation.html#create_log_line/2"},{"type":"function","title":"Lightning.Invocation.create_run/1","doc":"Creates a run. Examples iex&gt; create_run ( %{ field : value } ) { :ok , % Run { } } iex&gt; create_run ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#create_run/1"},{"type":"function","title":"Lightning.Invocation.delete_dataclip/1","doc":"Deletes a dataclip. Examples iex&gt; delete_dataclip ( dataclip ) { :ok , % Dataclip { } } iex&gt; delete_dataclip ( dataclip ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#delete_dataclip/1"},{"type":"function","title":"Lightning.Invocation.delete_run/1","doc":"Deletes a run. Examples iex&gt; delete_run ( run ) { :ok , % Run { } } iex&gt; delete_run ( run ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#delete_run/1"},{"type":"function","title":"Lightning.Invocation.filter_run_body_and_logs_where/2","doc":"","ref":"Lightning.Invocation.html#filter_run_body_and_logs_where/2"},{"type":"function","title":"Lightning.Invocation.filter_run_finished_after_where/1","doc":"","ref":"Lightning.Invocation.html#filter_run_finished_after_where/1"},{"type":"function","title":"Lightning.Invocation.filter_run_finished_before_where/1","doc":"","ref":"Lightning.Invocation.html#filter_run_finished_before_where/1"},{"type":"function","title":"Lightning.Invocation.filter_run_status_where/1","doc":"","ref":"Lightning.Invocation.html#filter_run_status_where/1"},{"type":"function","title":"Lightning.Invocation.filter_workflow_where/1","doc":"","ref":"Lightning.Invocation.html#filter_workflow_where/1"},{"type":"function","title":"Lightning.Invocation.filter_workorder_insert_after_where/1","doc":"","ref":"Lightning.Invocation.html#filter_workorder_insert_after_where/1"},{"type":"function","title":"Lightning.Invocation.filter_workorder_insert_before_where/1","doc":"","ref":"Lightning.Invocation.html#filter_workorder_insert_before_where/1"},{"type":"function","title":"Lightning.Invocation.get_dataclip/1","doc":"Gets a single dataclip given one of: a Dataclip uuid a Run model Returns nil if the Dataclip does not exist. Examples iex&gt; get_dataclip ( &quot;27b73932-16c7-4a72-86a3-85d805ccff98&quot; ) % Dataclip { } iex&gt; get_dataclip ( &quot;27b73932-16c7-4a72-86a3-85d805ccff98&quot; ) nil iex&gt; get_dataclip ( % Run { id : &quot;a uuid&quot; } ) % Dataclip { }","ref":"Lightning.Invocation.html#get_dataclip/1"},{"type":"function","title":"Lightning.Invocation.get_dataclip!/1","doc":"Gets a single dataclip. Raises Ecto.NoResultsError if the Dataclip does not exist. Examples iex&gt; get_dataclip! ( 123 ) % Dataclip { } iex&gt; get_dataclip! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Invocation.html#get_dataclip!/1"},{"type":"function","title":"Lightning.Invocation.get_dataclip_query/1","doc":"Query for retrieving the dataclip that a runs starting dataclip.","ref":"Lightning.Invocation.html#get_dataclip_query/1"},{"type":"function","title":"Lightning.Invocation.get_result_dataclip_query/1","doc":"Query for retrieving the dataclip that was the result of a successful run.","ref":"Lightning.Invocation.html#get_result_dataclip_query/1"},{"type":"function","title":"Lightning.Invocation.get_run!/1","doc":"Gets a single run. Raises Ecto.NoResultsError if the Run does not exist. Examples iex&gt; get_run! ( 123 ) % Run { } iex&gt; get_run! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Invocation.html#get_run!/1"},{"type":"function","title":"Lightning.Invocation.get_run_with_job!/1","doc":"Fetches a run and preloads the job via the run's event.","ref":"Lightning.Invocation.html#get_run_with_job!/1"},{"type":"function","title":"Lightning.Invocation.get_workorders_by_ids/1","doc":"","ref":"Lightning.Invocation.html#get_workorders_by_ids/1"},{"type":"function","title":"Lightning.Invocation.list_dataclips/0","doc":"Returns the list of dataclips. Examples iex&gt; list_dataclips ( ) [ % Dataclip { } , ... ]","ref":"Lightning.Invocation.html#list_dataclips/0"},{"type":"function","title":"Lightning.Invocation.list_dataclips/1","doc":"","ref":"Lightning.Invocation.html#list_dataclips/1"},{"type":"function","title":"Lightning.Invocation.list_dataclips_for_job/1","doc":"","ref":"Lightning.Invocation.html#list_dataclips_for_job/1"},{"type":"function","title":"Lightning.Invocation.list_dataclips_query/1","doc":"","ref":"Lightning.Invocation.html#list_dataclips_query/1"},{"type":"function","title":"Lightning.Invocation.list_runs/0","doc":"Returns the list of runs. Examples iex&gt; list_runs ( ) [ % Run { } , ... ]","ref":"Lightning.Invocation.html#list_runs/0"},{"type":"function","title":"Lightning.Invocation.list_runs_for_project/2","doc":"","ref":"Lightning.Invocation.html#list_runs_for_project/2"},{"type":"function","title":"Lightning.Invocation.list_runs_for_project_query/1","doc":"","ref":"Lightning.Invocation.html#list_runs_for_project_query/1"},{"type":"function","title":"Lightning.Invocation.list_work_orders_for_project_query/2","doc":"","ref":"Lightning.Invocation.html#list_work_orders_for_project_query/2"},{"type":"function","title":"Lightning.Invocation.search_workorders/1","doc":"","ref":"Lightning.Invocation.html#search_workorders/1"},{"type":"function","title":"Lightning.Invocation.search_workorders/3","doc":"","ref":"Lightning.Invocation.html#search_workorders/3"},{"type":"function","title":"Lightning.Invocation.update_dataclip/2","doc":"Updates a dataclip. Examples iex&gt; update_dataclip ( dataclip , %{ field : new_value } ) { :ok , % Dataclip { } } iex&gt; update_dataclip ( dataclip , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#update_dataclip/2"},{"type":"function","title":"Lightning.Invocation.update_run/2","doc":"Updates a run. Examples iex&gt; update_run ( run , %{ field : new_value } ) { :ok , % Run { } } iex&gt; update_run ( run , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Invocation.html#update_run/2"},{"type":"function","title":"Lightning.Invocation.with_attempts/1","doc":"","ref":"Lightning.Invocation.html#with_attempts/1"},{"type":"module","title":"Lightning.Invocation.Dataclip","doc":"Ecto model for Dataclips. Dataclips represent some data that arrived in the system, and records both the data and the source of the data. Types :http_request The data arrived via a webhook. :global Was created manually, and is intended to be used multiple times. When repetitive static data is needed to be maintained, instead of hard-coding into a Job - a more convenient solution is to create a :global Dataclip and access it inside the Job. :run_result The final state of a successful run. :saved_input An arbitrary input, created by a user. (Only configuration will be overwritten.)","ref":"Lightning.Invocation.Dataclip.html"},{"type":"function","title":"Lightning.Invocation.Dataclip.get_types/0","doc":"","ref":"Lightning.Invocation.Dataclip.html#get_types/0"},{"type":"function","title":"Lightning.Invocation.Dataclip.new/1","doc":"","ref":"Lightning.Invocation.Dataclip.html#new/1"},{"type":"function","title":"Lightning.Invocation.Dataclip.validate_by_type/1","doc":"Append validations based on the type of the Dataclip. :run_result must have an associated Run model.","ref":"Lightning.Invocation.Dataclip.html#validate_by_type/1"},{"type":"type","title":"Lightning.Invocation.Dataclip.source_type/0","doc":"","ref":"Lightning.Invocation.Dataclip.html#t:source_type/0"},{"type":"type","title":"Lightning.Invocation.Dataclip.t/0","doc":"","ref":"Lightning.Invocation.Dataclip.html#t:t/0"},{"type":"module","title":"Lightning.Invocation.LogLine","doc":"Ecto model for run logs.","ref":"Lightning.Invocation.LogLine.html"},{"type":"function","title":"Lightning.Invocation.LogLine.validate/1","doc":"","ref":"Lightning.Invocation.LogLine.html#validate/1"},{"type":"type","title":"Lightning.Invocation.LogLine.t/0","doc":"","ref":"Lightning.Invocation.LogLine.html#t:t/0"},{"type":"module","title":"Lightning.Invocation.Query","doc":"Query functions for working with Runs and Dataclips","ref":"Lightning.Invocation.Query.html"},{"type":"function","title":"Lightning.Invocation.Query.last_run_for_job/1","doc":"The last run for a job","ref":"Lightning.Invocation.Query.html#last_run_for_job/1"},{"type":"function","title":"Lightning.Invocation.Query.last_successful_run_for_job/1","doc":"The last run for a job for a particular exit code, used in scheduler","ref":"Lightning.Invocation.Query.html#last_successful_run_for_job/1"},{"type":"function","title":"Lightning.Invocation.Query.runs_for/1","doc":"Runs for a specific user","ref":"Lightning.Invocation.Query.html#runs_for/1"},{"type":"function","title":"Lightning.Invocation.Query.runs_with_code/2","doc":"The last run for a job for a particular exit code, used in scheduler","ref":"Lightning.Invocation.Query.html#runs_with_code/2"},{"type":"module","title":"Lightning.Invocation.Run","doc":"Ecto model for Runs. A run represents the work initiated for a Job with an input dataclip. Once completed (successfully) it will have an output_dataclip associated with it as well.","ref":"Lightning.Invocation.Run.html"},{"type":"function","title":"Lightning.Invocation.Run.new/1","doc":"","ref":"Lightning.Invocation.Run.html#new/1"},{"type":"function","title":"Lightning.Invocation.Run.new_from/1","doc":"Creates a new Run changeset, but copies over certain fields. This is used to create new runs for retrys.","ref":"Lightning.Invocation.Run.html#new_from/1"},{"type":"type","title":"Lightning.Invocation.Run.t/0","doc":"","ref":"Lightning.Invocation.Run.html#t:t/0"},{"type":"module","title":"Lightning.InvocationReason","doc":"Ecto model for InvocationReasons.","ref":"Lightning.InvocationReason.html"},{"type":"function","title":"Lightning.InvocationReason.new/1","doc":"","ref":"Lightning.InvocationReason.html#new/1"},{"type":"function","title":"Lightning.InvocationReason.validate_by_trigger_type/1","doc":"","ref":"Lightning.InvocationReason.html#validate_by_trigger_type/1"},{"type":"type","title":"Lightning.InvocationReason.source_type/0","doc":"","ref":"Lightning.InvocationReason.html#t:source_type/0"},{"type":"type","title":"Lightning.InvocationReason.t/0","doc":"","ref":"Lightning.InvocationReason.html#t:t/0"},{"type":"module","title":"Lightning.InvocationReasons","doc":"The InvocationReasons context.","ref":"Lightning.InvocationReasons.html"},{"type":"function","title":"Lightning.InvocationReasons.build/2","doc":"","ref":"Lightning.InvocationReasons.html#build/2"},{"type":"function","title":"Lightning.InvocationReasons.create_reason/1","doc":"Creates a reason. Examples iex&gt; create_reason ( %{ field : value } ) { :ok , % InvocationReason { } } iex&gt; create_reason ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.InvocationReasons.html#create_reason/1"},{"type":"type","title":"Lightning.InvocationReasons.reason_type/0","doc":"","ref":"Lightning.InvocationReasons.html#t:reason_type/0"},{"type":"module","title":"Lightning.Pipeline","doc":"Service class to coordinate the running of jobs, and their downstream jobs.","ref":"Lightning.Pipeline.html"},{"type":"function","title":"Lightning.Pipeline.assemble_logs_for_run/1","doc":"Return all logs for a run as a string of text, separated by new line breaks","ref":"Lightning.Pipeline.html#assemble_logs_for_run/1"},{"type":"function","title":"Lightning.Pipeline.logs_for_run/1","doc":"Return all logs for a run as a list","ref":"Lightning.Pipeline.html#logs_for_run/1"},{"type":"function","title":"Lightning.Pipeline.process/1","doc":"","ref":"Lightning.Pipeline.html#process/1"},{"type":"module","title":"Lightning.Pipeline.Runner","doc":"Job running entrypoint","ref":"Lightning.Pipeline.Runner.html"},{"type":"function","title":"Lightning.Pipeline.Runner.create_dataclip_from_result/2","doc":"Creates a dataclip linked to the run that just finished. IMPORTANT : The function was refactored to address the issue described in GitHub Issue #1084 . The following scenarios are handled: Reads the file content of the result's final state. Attempts to decode the file content as JSON. Processes the decoded content, linking it to the provided run. If the file doesn't exist or there's a JSON decoding error: The error is logged. A nil value is set for the output dataclip linked to the run. An error tuple is returned. Success scenario: The dataclip is updated with the decoded content and linked to the run. Returns: The updated run with the linked dataclip in the case of success. An error tuple in the case of failure.","ref":"Lightning.Pipeline.Runner.html#create_dataclip_from_result/2"},{"type":"function","title":"Lightning.Pipeline.Runner.find_or_install_adaptor/1","doc":"Make sure an adaptor matching the name is available. If it is available, return it's Engine.Adaptor struct - if not then install it.","ref":"Lightning.Pipeline.Runner.html#find_or_install_adaptor/1"},{"type":"function","title":"Lightning.Pipeline.Runner.scrub_result/1","doc":"Scrubs values from all keys in configuration, will be replaced by extensions to scrubber.ex, which is currently only used for logs.","ref":"Lightning.Pipeline.Runner.html#scrub_result/1"},{"type":"function","title":"Lightning.Pipeline.Runner.start/2","doc":"Execute a Run. Given a valid run: Persist the Dataclip and the Job's body to disk Create a blank output file on disk Build up a %Lightning.Runtime.Runspec{} with the paths, and adaptor module name And start it via Handler.start/2 . The callbacks implemented on Handler ( c:Handler.on_start/1 and c:Handler.on_finish/2 ) update the run when a Run is started and when it's finished, attaching the exit_code and log when they are available.","ref":"Lightning.Pipeline.Runner.html#start/2"},{"type":"module","title":"Lightning.Pipeline.Runner.Handler","doc":"Custom handler callbacks for Lightnings use of Engine to execute runs.","ref":"Lightning.Pipeline.Runner.Handler.html"},{"type":"function","title":"Lightning.Pipeline.Runner.Handler.on_start/1","doc":"The on_start handler updates the run, setting the started_at time and stamping the run with the ID of the credential that was used, if any, to facilitate easier auditing.","ref":"Lightning.Pipeline.Runner.Handler.html#on_start/1"},{"type":"function","title":"Lightning.Pipeline.Runner.Handler.stop/1","doc":"","ref":"Lightning.Pipeline.Runner.Handler.html#stop/1"},{"type":"type","title":"Lightning.Pipeline.Runner.Handler.handler_opts/0","doc":"","ref":"Lightning.Pipeline.Runner.Handler.html#t:handler_opts/0"},{"type":"module","title":"Lightning.Pipeline.StateAssembler","doc":"Facilities for building the state for a Run How state is assembled For the most common jobs, an inbound webhook will store an :http_request type dataclip. The reason that is created is associated with the dataclip. At runtime, the initial state for a Run will be in the shape of: { &quot;data&quot; : &lt; the dataclip &gt; , &quot;configuration&quot; : &lt; the job &#39; s credential &gt; } Saved inputs Saved custom inputs will only have state.configuration changed, everything else will remain as displayed. Flow Jobs When a Job is triggered by a previous Jobs success or failure these are the rules for constructing that Jobs state: For jobs that trigger on it's upstream jobs failure, the event will have the previous runs input dataclip as its input dataclip. The state will also have the log of the previous run attached on the error key. For Jobs triggered by a previous success, the run will have the previous runs output dataclip as its input dataclip. :run_result dataclips are expected to already have a data key, and are merged into the root.","ref":"Lightning.Pipeline.StateAssembler.html"},{"type":"function","title":"Lightning.Pipeline.StateAssembler.assemble/1","doc":"Assemble state for use in a Run.","ref":"Lightning.Pipeline.StateAssembler.html#assemble/1"},{"type":"module","title":"Lightning.Jobs","doc":"The Jobs context.","ref":"Lightning.Jobs.html"},{"type":"function","title":"Lightning.Jobs.change_job/2","doc":"Returns an %Ecto.Changeset{} for tracking job changes. Examples iex&gt; change_job ( job ) % Ecto.Changeset { data : % Job { } }","ref":"Lightning.Jobs.html#change_job/2"},{"type":"function","title":"Lightning.Jobs.create_job/1","doc":"Creates a job. Examples iex&gt; create_job ( %{ field : value } ) { :ok , % Job { } } iex&gt; create_job ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Jobs.html#create_job/1"},{"type":"function","title":"Lightning.Jobs.delete_job/1","doc":"Deletes a job. Examples iex&gt; delete_job ( job ) { :ok , % Job { } } iex&gt; delete_job ( job ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Jobs.html#delete_job/1"},{"type":"function","title":"Lightning.Jobs.get_downstream_jobs_for/2","doc":"Returns the list of downstream jobs for a given job, optionally matching a specific trigger type. When downstream_jobs_for is called without a trigger that means its between jobs when it called with a trigger that means we are starting from outside the pipeline","ref":"Lightning.Jobs.html#get_downstream_jobs_for/2"},{"type":"function","title":"Lightning.Jobs.get_job/1","doc":"","ref":"Lightning.Jobs.html#get_job/1"},{"type":"function","title":"Lightning.Jobs.get_job!/1","doc":"Gets a single job. Raises Ecto.NoResultsError if the Job does not exist. Examples iex&gt; get_job! ( 123 ) % Job { } iex&gt; get_job! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Jobs.html#get_job!/1"},{"type":"function","title":"Lightning.Jobs.get_upstream_jobs_for/1","doc":"Returns the list of jobs excluding the one given.","ref":"Lightning.Jobs.html#get_upstream_jobs_for/1"},{"type":"function","title":"Lightning.Jobs.jobs_for_project/1","doc":"","ref":"Lightning.Jobs.html#jobs_for_project/1"},{"type":"function","title":"Lightning.Jobs.jobs_for_project_query/1","doc":"","ref":"Lightning.Jobs.html#jobs_for_project_query/1"},{"type":"function","title":"Lightning.Jobs.list_active_cron_jobs/0","doc":"","ref":"Lightning.Jobs.html#list_active_cron_jobs/0"},{"type":"function","title":"Lightning.Jobs.list_jobs/0","doc":"Returns the list of jobs.","ref":"Lightning.Jobs.html#list_jobs/0"},{"type":"function","title":"Lightning.Jobs.list_jobs_for_workflow/1","doc":"","ref":"Lightning.Jobs.html#list_jobs_for_workflow/1"},{"type":"function","title":"Lightning.Jobs.update_job/2","doc":"Updates a job. Examples iex&gt; update_job ( job , %{ field : new_value } ) { :ok , % Job { } } iex&gt; update_job ( job , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Jobs.html#update_job/2"},{"type":"module","title":"Lightning.Jobs.Job","doc":"Ecto model for Jobs. A Job contains the fields for defining a job. body The expression/javascript code name A plain text identifier adaptor An NPM style string that contains both the module name and it's version. E.g. @openfn/language-http@v1.2.3 or @openfn/language-foo@latest . While the version suffix isn't enforced here as it's not strictly necessary in this context, the front end will ensure a version is stated ( @latest being the default).","ref":"Lightning.Jobs.Job.html"},{"type":"function","title":"Lightning.Jobs.Job.new/1","doc":"","ref":"Lightning.Jobs.Job.html#new/1"},{"type":"function","title":"Lightning.Jobs.Job.put_project_credential/2","doc":"","ref":"Lightning.Jobs.Job.html#put_project_credential/2"},{"type":"function","title":"Lightning.Jobs.Job.put_workflow/2","doc":"Attaches a workflow to a job, this is useful when you have an unpersisted Workflow changeset - and want it to be created at the same time as a Job. Example: workflow = Ecto.Changeset . cast ( % Lightning.Workflows.Workflow { } , %{ &quot;project_id&quot; =&gt; attrs [ :project_id ] , &quot;id&quot; =&gt; Ecto.UUID . generate ( ) } , [ :project_id , :id ] ) job = % Job { } |&gt; Ecto.Changeset . change ( ) |&gt; Job . put_workflow ( workflow ) |&gt; Job . changeset ( attrs )","ref":"Lightning.Jobs.Job.html#put_workflow/2"},{"type":"function","title":"Lightning.Jobs.Job.validate/1","doc":"","ref":"Lightning.Jobs.Job.html#validate/1"},{"type":"type","title":"Lightning.Jobs.Job.t/0","doc":"","ref":"Lightning.Jobs.Job.html#t:t/0"},{"type":"module","title":"Lightning.Jobs.Query","doc":"Query module for finding Jobs.","ref":"Lightning.Jobs.Query.html"},{"type":"function","title":"Lightning.Jobs.Query.enabled_cron_jobs_by_edge/0","doc":"Returns active jobs with their cron triggers for use in the cron scheduling service.","ref":"Lightning.Jobs.Query.html#enabled_cron_jobs_by_edge/0"},{"type":"function","title":"Lightning.Jobs.Query.jobs_for/1","doc":"Returns all jobs accessible to a user, via their projects or all jobs in a given project.","ref":"Lightning.Jobs.Query.html#jobs_for/1"},{"type":"module","title":"Lightning.Jobs.Scheduler","doc":"The Scheduler is responsible for finding jobs that are ready to run based on their cron schedule, and then running them.","ref":"Lightning.Jobs.Scheduler.html"},{"type":"function","title":"Lightning.Jobs.Scheduler.enqueue_cronjobs/0","doc":"Find and start any cronjobs that are scheduled to run for a given time (defaults to the current time).","ref":"Lightning.Jobs.Scheduler.html#enqueue_cronjobs/0"},{"type":"function","title":"Lightning.Jobs.Scheduler.enqueue_cronjobs/1","doc":"","ref":"Lightning.Jobs.Scheduler.html#enqueue_cronjobs/1"},{"type":"module","title":"Lightning.Jobs.Trigger","doc":"Ecto model for Triggers. Triggers represent the criteria in which a Job might be invoked. Types Webhook (default) A webhook trigger allows a Job to invoked (via Lightning.Invocation ) when it's endpoint is called.","ref":"Lightning.Jobs.Trigger.html"},{"type":"function","title":"Lightning.Jobs.Trigger.new/1","doc":"","ref":"Lightning.Jobs.Trigger.html#new/1"},{"type":"function","title":"Lightning.Jobs.Trigger.validate/1","doc":"","ref":"Lightning.Jobs.Trigger.html#validate/1"},{"type":"type","title":"Lightning.Jobs.Trigger.t/0","doc":"","ref":"Lightning.Jobs.Trigger.html#t:t/0"},{"type":"type","title":"Lightning.Jobs.Trigger.trigger_type/0","doc":"","ref":"Lightning.Jobs.Trigger.html#t:trigger_type/0"},{"type":"module","title":"Lightning.Projects","doc":"The Projects context.","ref":"Lightning.Projects.html"},{"type":"function","title":"Lightning.Projects.cancel_scheduled_deletion/1","doc":"","ref":"Lightning.Projects.html#cancel_scheduled_deletion/1"},{"type":"function","title":"Lightning.Projects.change_project/2","doc":"Returns an %Ecto.Changeset{} for tracking project changes. Examples iex&gt; change_project ( project ) % Ecto.Changeset { data : % Project { } }","ref":"Lightning.Projects.html#change_project/2"},{"type":"function","title":"Lightning.Projects.create_project/1","doc":"Creates a project. Examples iex&gt; create_project ( %{ field : value } ) { :ok , % Project { } } iex&gt; create_project ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Projects.html#create_project/1"},{"type":"function","title":"Lightning.Projects.delete_project/1","doc":"Deletes a project and its related data, including workflows, work orders, runs, jobs, attempts, triggers, project users, project credentials, and dataclips Examples iex&gt; delete_project ( project ) { :ok , % Project { } } iex&gt; delete_project ( project ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Projects.html#delete_project/1"},{"type":"function","title":"Lightning.Projects.export_project/2","doc":"Exports a project as yaml. Examples iex&gt; export_project ( :yaml , project_id ) { :ok , string }","ref":"Lightning.Projects.html#export_project/2"},{"type":"function","title":"Lightning.Projects.get_project/1","doc":"","ref":"Lightning.Projects.html#get_project/1"},{"type":"function","title":"Lightning.Projects.get_project!/1","doc":"Gets a single project. Raises Ecto.NoResultsError if the Project does not exist. Examples iex&gt; get_project! ( 123 ) % Project { } iex&gt; get_project! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Projects.html#get_project!/1"},{"type":"function","title":"Lightning.Projects.get_project_credential/2","doc":"","ref":"Lightning.Projects.html#get_project_credential/2"},{"type":"function","title":"Lightning.Projects.get_project_user/1","doc":"","ref":"Lightning.Projects.html#get_project_user/1"},{"type":"function","title":"Lightning.Projects.get_project_user/2","doc":"","ref":"Lightning.Projects.html#get_project_user/2"},{"type":"function","title":"Lightning.Projects.get_project_user!/1","doc":"Gets a single project_user. Raises Ecto.NoResultsError if the ProjectUser does not exist. Examples iex&gt; get_project_user! ( 123 ) % ProjectUser { } iex&gt; get_project_user! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Projects.html#get_project_user!/1"},{"type":"function","title":"Lightning.Projects.get_project_user_role/2","doc":"Returns the role of a user in a project. Possible roles are :admin, :viewer, :editor, and :owner Examples iex&gt; get_project_user_role ( user , project ) :admin iex&gt; get_project_user_role ( user , project ) :viewer iex&gt; get_project_user_role ( user , project ) :editor iex&gt; get_project_user_role ( user , project ) :owner","ref":"Lightning.Projects.html#get_project_user_role/2"},{"type":"function","title":"Lightning.Projects.get_project_with_users!/1","doc":"Gets a single project with it's members via project_users . Raises Ecto.NoResultsError if the Project does not exist. Examples iex&gt; get_project! ( 123 ) % Project { } iex&gt; get_project! ( 456 ) ** (Ecto.NoResultsError)","ref":"Lightning.Projects.html#get_project_with_users!/1"},{"type":"function","title":"Lightning.Projects.get_projects_for_user/1","doc":"","ref":"Lightning.Projects.html#get_projects_for_user/1"},{"type":"function","title":"Lightning.Projects.is_member_of?/2","doc":"","ref":"Lightning.Projects.html#is_member_of?/2"},{"type":"function","title":"Lightning.Projects.list_project_credentials/1","doc":"","ref":"Lightning.Projects.html#list_project_credentials/1"},{"type":"function","title":"Lightning.Projects.list_projects/0","doc":"Returns the list of projects. Examples iex&gt; list_projects ( ) [ % Project { } , ... ]","ref":"Lightning.Projects.html#list_projects/0"},{"type":"function","title":"Lightning.Projects.perform/1","doc":"Perform, when called with %{&quot;type&quot; =&gt; &quot;purge_deleted&quot;} will find projects that are ready for permanent deletion and purge them.","ref":"Lightning.Projects.html#perform/1"},{"type":"function","title":"Lightning.Projects.project_attempt_run_query/1","doc":"","ref":"Lightning.Projects.html#project_attempt_run_query/1"},{"type":"function","title":"Lightning.Projects.project_attempts_query/1","doc":"","ref":"Lightning.Projects.html#project_attempts_query/1"},{"type":"function","title":"Lightning.Projects.project_credentials_query/1","doc":"","ref":"Lightning.Projects.html#project_credentials_query/1"},{"type":"function","title":"Lightning.Projects.project_dataclip_invocation_reason/1","doc":"","ref":"Lightning.Projects.html#project_dataclip_invocation_reason/1"},{"type":"function","title":"Lightning.Projects.project_dataclips_query/1","doc":"","ref":"Lightning.Projects.html#project_dataclips_query/1"},{"type":"function","title":"Lightning.Projects.project_jobs_query/1","doc":"","ref":"Lightning.Projects.html#project_jobs_query/1"},{"type":"function","title":"Lightning.Projects.project_run_invocation_reasons/1","doc":"","ref":"Lightning.Projects.html#project_run_invocation_reasons/1"},{"type":"function","title":"Lightning.Projects.project_runs_query/1","doc":"","ref":"Lightning.Projects.html#project_runs_query/1"},{"type":"function","title":"Lightning.Projects.project_trigger_invocation_reason/1","doc":"","ref":"Lightning.Projects.html#project_trigger_invocation_reason/1"},{"type":"function","title":"Lightning.Projects.project_triggers_query/1","doc":"","ref":"Lightning.Projects.html#project_triggers_query/1"},{"type":"function","title":"Lightning.Projects.project_user_role_query/2","doc":"","ref":"Lightning.Projects.html#project_user_role_query/2"},{"type":"function","title":"Lightning.Projects.project_users_query/1","doc":"","ref":"Lightning.Projects.html#project_users_query/1"},{"type":"function","title":"Lightning.Projects.project_workflows_query/1","doc":"","ref":"Lightning.Projects.html#project_workflows_query/1"},{"type":"function","title":"Lightning.Projects.project_workorders_query/1","doc":"","ref":"Lightning.Projects.html#project_workorders_query/1"},{"type":"function","title":"Lightning.Projects.projects_for_user_query/1","doc":"","ref":"Lightning.Projects.html#projects_for_user_query/1"},{"type":"function","title":"Lightning.Projects.schedule_project_deletion/1","doc":"Given a project, this function sets a scheduled deletion date based on the PURGE_DELETED_AFTER_DAYS environment variable. If no ENV is set, this date defaults to NOW but the automatic project purge cronjob will never run. (Note that subsequent logins will be blocked for projects pending deletion.)","ref":"Lightning.Projects.html#schedule_project_deletion/1"},{"type":"function","title":"Lightning.Projects.select_first_project_for_user/1","doc":"","ref":"Lightning.Projects.html#select_first_project_for_user/1"},{"type":"function","title":"Lightning.Projects.update_project/2","doc":"Updates a project. Examples iex&gt; update_project ( project , %{ field : new_value } ) { :ok , % Project { } } iex&gt; update_project ( project , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Projects.html#update_project/2"},{"type":"function","title":"Lightning.Projects.update_project_user/2","doc":"Updates a project user. Examples iex&gt; update_project_user ( project_user , %{ field : new_value } ) { :ok , % ProjectUser { } } iex&gt; update_project_user ( projectUser , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Lightning.Projects.html#update_project_user/2"},{"type":"function","title":"Lightning.Projects.url_safe_project_name/1","doc":"","ref":"Lightning.Projects.html#url_safe_project_name/1"},{"type":"function","title":"Lightning.Projects.validate_for_deletion/2","doc":"Returns an %Ecto.Changeset{} for changing the project scheduled_deletion. Examples iex&gt; validate_for_deletion ( project ) % Ecto.Changeset { data : % Project { } }","ref":"Lightning.Projects.html#validate_for_deletion/2"},{"type":"module","title":"Lightning.Projects.Project","doc":"Project model","ref":"Lightning.Projects.Project.html"},{"type":"function","title":"Lightning.Projects.Project.deletion_changeset/2","doc":"Changeset to validate a project deletion request, the user must enter the projects name to confirm.","ref":"Lightning.Projects.Project.html#deletion_changeset/2"},{"type":"function","title":"Lightning.Projects.Project.validate/1","doc":"","ref":"Lightning.Projects.Project.html#validate/1"},{"type":"type","title":"Lightning.Projects.Project.t/0","doc":"","ref":"Lightning.Projects.Project.html#t:t/0"},{"type":"module","title":"Lightning.Projects.ProjectCredential","doc":"Join table to assign credentials to a project","ref":"Lightning.Projects.ProjectCredential.html"},{"type":"type","title":"Lightning.Projects.ProjectCredential.t/0","doc":"","ref":"Lightning.Projects.ProjectCredential.html#t:t/0"},{"type":"module","title":"Lightning.Projects.ProjectUser","doc":"Join table to assign users to a project","ref":"Lightning.Projects.ProjectUser.html"},{"type":"type","title":"Lightning.Projects.ProjectUser.t/0","doc":"","ref":"Lightning.Projects.ProjectUser.html#t:t/0"},{"type":"module","title":"Lightning.Projects.ProjectUser.DigestEnum","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.cast/1","doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#cast/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.create_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#create_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.drop_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#drop_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.dump/1","doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#dump/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.embed_as/1","doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#embed_as/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.equal?/2","doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#equal?/2"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.load/1","doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#load/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.schema/0","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#schema/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.schemaless_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#schemaless_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.type/0","doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.DigestEnum.valid_value?/1","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#valid_value?/1"},{"type":"type","title":"Lightning.Projects.ProjectUser.DigestEnum.t/0","doc":"","ref":"Lightning.Projects.ProjectUser.DigestEnum.html#t:t/0"},{"type":"module","title":"Lightning.Projects.ProjectUser.RolesEnum","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.cast/1","doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#cast/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.create_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#create_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.drop_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#drop_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.dump/1","doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#dump/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.embed_as/1","doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#embed_as/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.equal?/2","doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#equal?/2"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.load/1","doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#load/1"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.schema/0","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#schema/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.schemaless_type/0","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#schemaless_type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.type/0","doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#type/0"},{"type":"function","title":"Lightning.Projects.ProjectUser.RolesEnum.valid_value?/1","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#valid_value?/1"},{"type":"type","title":"Lightning.Projects.ProjectUser.RolesEnum.t/0","doc":"","ref":"Lightning.Projects.ProjectUser.RolesEnum.html#t:t/0"},{"type":"module","title":"Lightning.Projects.Provisioner","doc":"Provides functions for importing projects. This module is used by the provisioning HTTP API. When providing a project to import, all records must have an id field. It's up to the caller to ensure that the id is unique and generated ahead of time in the case of new records.","ref":"Lightning.Projects.Provisioner.html"},{"type":"function","title":"Lightning.Projects.Provisioner.import_document/3","doc":"Import a project.","ref":"Lightning.Projects.Provisioner.html#import_document/3"},{"type":"function","title":"Lightning.Projects.Provisioner.load_project/1","doc":"Load a project by ID, including all workflows and their associated jobs, triggers and edges. Returns nil if the project does not exist.","ref":"Lightning.Projects.Provisioner.html#load_project/1"},{"type":"function","title":"Lightning.Projects.Provisioner.parse_document/2","doc":"","ref":"Lightning.Projects.Provisioner.html#parse_document/2"},{"type":"function","title":"Lightning.Projects.Provisioner.validate_extraneous_params/1","doc":"Validate that there are no extraneous parameters in the changeset. For all params in the changeset, ensure that the param is in the list of known fields in the schema.","ref":"Lightning.Projects.Provisioner.html#validate_extraneous_params/1"},{"type":"module","title":"Lightning.Runtime.ChildProcess","doc":"Provides an interface between a RunSpec and the shell. Internally it calls node , and more specifically the OpenFn core CLI.","ref":"Lightning.Runtime.ChildProcess.html"},{"type":"function","title":"Lightning.Runtime.ChildProcess.build_command/1","doc":"Builds up a string for shell execution based on the RunSpec","ref":"Lightning.Runtime.ChildProcess.html#build_command/1"},{"type":"function","title":"Lightning.Runtime.ChildProcess.build_env/2","doc":"","ref":"Lightning.Runtime.ChildProcess.html#build_env/2"},{"type":"function","title":"Lightning.Runtime.ChildProcess.run/2","doc":"","ref":"Lightning.Runtime.ChildProcess.html#run/2"},{"type":"behaviour","title":"Lightning.Runtime.Handler","doc":"A strategy for executing things via ChildProcess. This module handles the dirty bits, setting up processes and coordinating results (and logs) as they arrive. Since it is a macro, see Lightning.Pipeline.Runner.Handler for a usage example.","ref":"Lightning.Runtime.Handler.html"},{"type":"function","title":"Lightning.Runtime.Handler.env/2","doc":"","ref":"Lightning.Runtime.Handler.html#env/2"},{"type":"callback","title":"Lightning.Runtime.Handler.env/2","doc":"","ref":"Lightning.Runtime.Handler.html#c:env/2"},{"type":"callback","title":"Lightning.Runtime.Handler.log_callback/3","doc":"","ref":"Lightning.Runtime.Handler.html#c:log_callback/3"},{"type":"function","title":"Lightning.Runtime.Handler.on_finish/2","doc":"","ref":"Lightning.Runtime.Handler.html#on_finish/2"},{"type":"callback","title":"Lightning.Runtime.Handler.on_finish/2","doc":"","ref":"Lightning.Runtime.Handler.html#c:on_finish/2"},{"type":"function","title":"Lightning.Runtime.Handler.on_log_emit/2","doc":"","ref":"Lightning.Runtime.Handler.html#on_log_emit/2"},{"type":"callback","title":"Lightning.Runtime.Handler.on_log_emit/2","doc":"","ref":"Lightning.Runtime.Handler.html#c:on_log_emit/2"},{"type":"function","title":"Lightning.Runtime.Handler.on_start/1","doc":"","ref":"Lightning.Runtime.Handler.html#on_start/1"},{"type":"callback","title":"Lightning.Runtime.Handler.on_start/1","doc":"Called with context, if any - when the Run has been started.","ref":"Lightning.Runtime.Handler.html#c:on_start/1"},{"type":"callback","title":"Lightning.Runtime.Handler.start/2","doc":"The entrypoint for executing a run.","ref":"Lightning.Runtime.Handler.html#c:start/2"},{"type":"type","title":"Lightning.Runtime.Handler.t/0","doc":"","ref":"Lightning.Runtime.Handler.html#t:t/0"},{"type":"module","title":"Lightning.Runtime.LogAgent","doc":"Agent facility to consume STDOUT/STDERR byte by byte. Since it works on a byte by byte basis, you will need to perform line-splitting yourself. Usage: { :ok , log } = LogAgent . start_link ( ) &quot;foo&quot; = LogAgent . process_chunk ( log , { :stdout , &quot;foo&quot; } ) &quot;foobar&quot; = LogAgent . process_chunk ( log , { :stdout , &quot;bar&quot; } )","ref":"Lightning.Runtime.LogAgent.html"},{"type":"function","title":"Lightning.Runtime.LogAgent.buffer/1","doc":"","ref":"Lightning.Runtime.LogAgent.html#buffer/1"},{"type":"function","title":"Lightning.Runtime.LogAgent.child_spec/1","doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Lightning.Runtime.LogAgent.html#child_spec/1"},{"type":"function","title":"Lightning.Runtime.LogAgent.process_chunk/2","doc":"","ref":"Lightning.Runtime.LogAgent.html#process_chunk/2"},{"type":"function","title":"Lightning.Runtime.LogAgent.start_link/1","doc":"","ref":"Lightning.Runtime.LogAgent.html#start_link/1"},{"type":"type","title":"Lightning.Runtime.LogAgent.logline/0","doc":"","ref":"Lightning.Runtime.LogAgent.html#t:logline/0"},{"type":"module","title":"Lightning.Runtime.LogAgent.StringBuffer","doc":"Internal datastructure to hold and process new bytes for a list of characters. By checking the if the buffer is a complete grapheme, emitting the buffer once valid and returning nil otherwise. In the case of emojis and other language character sets, a character (in UTF-8) can be between 1-4 bytes - when streaming logs for example it's quite easy to receive less than the whole character which can result in crashes or corrupt text.","ref":"Lightning.Runtime.LogAgent.StringBuffer.html"},{"type":"function","title":"Lightning.Runtime.LogAgent.StringBuffer.buffer/1","doc":"","ref":"Lightning.Runtime.LogAgent.StringBuffer.html#buffer/1"},{"type":"function","title":"Lightning.Runtime.LogAgent.StringBuffer.new/0","doc":"","ref":"Lightning.Runtime.LogAgent.StringBuffer.html#new/0"},{"type":"function","title":"Lightning.Runtime.LogAgent.StringBuffer.process_chunk/2","doc":"","ref":"Lightning.Runtime.LogAgent.StringBuffer.html#process_chunk/2"},{"type":"function","title":"Lightning.Runtime.LogAgent.StringBuffer.reduce_chunk/2","doc":"","ref":"Lightning.Runtime.LogAgent.StringBuffer.html#reduce_chunk/2"},{"type":"type","title":"Lightning.Runtime.LogAgent.StringBuffer.t/0","doc":"","ref":"Lightning.Runtime.LogAgent.StringBuffer.html#t:t/0"},{"type":"module","title":"Lightning.Runtime.Result","doc":"Data structure used to represent the result of a Run executed by Lightning.Runtime.ChildProcess .","ref":"Lightning.Runtime.Result.html"},{"type":"function","title":"Lightning.Runtime.Result.new/1","doc":"","ref":"Lightning.Runtime.Result.html#new/1"},{"type":"type","title":"Lightning.Runtime.Result.t/0","doc":"","ref":"Lightning.Runtime.Result.html#t:t/0"},{"type":"module","title":"Lightning.Runtime.RunSpec","doc":"A struct containing all the parameters required to execute a Job.","ref":"Lightning.Runtime.RunSpec.html"},{"type":"function","title":"Lightning.Runtime.RunSpec.new/1","doc":"","ref":"Lightning.Runtime.RunSpec.html#new/1"},{"type":"type","title":"Lightning.Runtime.RunSpec.t/0","doc":"","ref":"Lightning.Runtime.RunSpec.html#t:t/0"},{"type":"exception","title":"Lightning.MetadataService.Error","doc":"","ref":"Lightning.MetadataService.Error.html"},{"type":"function","title":"Lightning.MetadataService.Error.message/1","doc":"Callback implementation for Exception.message/1 .","ref":"Lightning.MetadataService.Error.html#message/1"},{"type":"function","title":"Lightning.MetadataService.Error.new/1","doc":"","ref":"Lightning.MetadataService.Error.html#new/1"},{"type":"type","title":"Lightning.MetadataService.Error.t/0","doc":"","ref":"Lightning.MetadataService.Error.html#t:t/0"},{"type":"extras","title":"Lightning","doc":"OpenFn/Lightning is a fully open source, workflow automation platform that's used to automate critical business processes and integrate information systems. From last-mile services to national-level reporting, it boosts efficiency &amp; effectiveness while enabling secure, stable, scalable interoperability at all levels. Read more about Lightning on OpenFn/Docs . Lightning is the latest &quot;v2&quot; of OpenFn, the Digital Public Good for workflow automation . Use Lightning to visually build, execute and manage workflows. The latest version of the OpenFn technology - first launched in 2014, now tried and tested by NGOs in over 40 countries Fully open source (no premium features or community edition, you get the same product whether using SaaS or self-hosted) Recognised as a Digital Public Good by the DPGA and a Global Good for Health by Digital Square","ref":"readme.html"},{"type":"extras","title":"Lightning - Contents","doc":"Demo Sign up for the BETA Features Getting started Run Lightning via Docker Deploy Lightning on Docker or Kubernetes Run Lightning on your local machine (contributors) Troubleshooting Contribute Project Configuration Quickstart Generate the documentation Security and standards Server specs for self-hosting Questions or feedback?","ref":"readme.html#contents"},{"type":"extras","title":"Lightning - Demo","doc":"Watch a quick demo here: https://www.youtube.com/watch?v=BNaxlHAWb5I Explore our demo app* with username: demo@openfn.org , password: welcome123 , or read through the features section to view screenshots of the app. *Note that the demo app refreshes daily, so do not configure workflows you want to save.","ref":"readme.html#demo"},{"type":"extras","title":"Lightning - Register for a Beta account","doc":"Register for a Beta account at app.openfn.org and go through the quick-start guide to get familiar with the app.","ref":"readme.html#register-for-a-beta-account"},{"type":"extras","title":"Lightning - Features","doc":"Build Plan and build workflows using Lightning's visual interface to quickly define when, where and what you want your automation to do. Use our CLI to quickly build, edit and deploy projects from the comfort of your own code editor. Monitor Monitor all workflow activity in one place. Filter and search runs to identify issues that need addressing and follow how a specific request has been processed Configure alerts to be notified on run failures Receive a project digest for a daily/weekly/monthly summary of your project activity Manage Manage users and access by project Roles and permissions Authorization is a central part of Lightning. As such, users are given different roles which determine what level of access they have for resources in the application. For more details about roles and permissions in Lightning, please refer to our documentation . Roadmap View our public roadmap here .","ref":"readme.html#features"},{"type":"extras","title":"Lightning - Getting Started","doc":"If you only want to RUN Lightning on your own server, we recommend using Docker. If you want to DEPLOY Lightning, we recommend Docker builds and Kubernetes. If you want to CONTRIBUTE to the project, we recommend running Lightning on your local machine .","ref":"readme.html#getting-started"},{"type":"extras","title":"Lightning - Run via Docker","doc":"Install the latest version of Docker Clone this repo using git Copy the .env.example file to .env Run docker compose run --rm web mix ecto.migrate By default the application will be running at localhost:4000 . You can then rebuild and run with docker compose build and docker compose up . See &quot;Problems with Docker&quot; for additional troubleshooting help. Note that you can also create your own docker-compose.yml file, configuring a postgres database and using a pre-built image from Dockerhub.","ref":"readme.html#run-via-docker"},{"type":"extras","title":"Lightning - Deploy on external infrastructure","doc":"Head to the Deploy section of our docs site to get started. For technical guidelines, see deployment considerations for more detailed information.","ref":"readme.html#deploy-on-external-infrastructure"},{"type":"extras","title":"Lightning - Run Lightning locally","doc":"Clone the repo and optionally set ENVs git clone git@github.com:OpenFn/Lightning.git # or from YOUR fork! cd Lightning cp .env.example .env # and adjust as necessary! Take note of database names and ports in particular—they've got to match across your Postgres setup and your ENVs. You can run lightning without any ENVs assuming a vanilla postgres setup (see below), but you may want to make adjustments. Database Setup If you're already using Postgres locally, create a new database called lightning_dev , for example. If you'd rather use Docker to set up a Postgres DB, create a new volume and image: docker volume create lightning-postgres-data docker create \\ --name lightning-postgres \\ --mount source=lightning-postgres-data,target=/var/lib/postgresql/data \\ --publish 5432:5432 \\ -e POSTGRES_PASSWORD=postgres \\ postgres:15.3-alpine docker start lightning-postgres Elixir &amp; Ecto Setup We use asdf to configure our local environments. Included in the repo is a .tool-versions file that is read by asdf in order to dynamically make the specified versions of Elixir and Erlang available. You'll need asdf plugins for Erlang , NodeJs Elixir and k6 . asdf install # Install language versions mix local.hex mix deps.get mix local.rebar --force mix ecto.create # Create a development database in Postgres mix ecto.migrate [[ $(uname -m) == &#39;arm64&#39; ]] &amp;&amp; mix compile.rambo # Force compile rambo if on M1 mix lightning.install_runtime mix lightning.install_schemas npm install --prefix assets Run the app Lightning is a web app. To run it in interactive Elixir mode, start the development server by running with your environment variables by running: iex -S mix phx.server or if you have set up custom environment variables, run: env $(cat .env | grep -v &quot;#&quot; | xargs ) iex -S mix phx.server Once the server has started, head to localhost:4000 in your browser. Run the tests Before the first time running the tests, you need a test database setup. MIX_ENV=test mix ecto.create And then after that run the tests using: MIX_ENV=test mix test We also have test.watch installed which can be used to rerun the tests on file changes.","ref":"readme.html#run-lightning-locally"},{"type":"extras","title":"Lightning - Benchmarking","doc":"We are using k6 to benchmark Lightning. Under benchmarking folder you can find a script for benchmarking Webhook Workflows. See Benchmarking for more detailed information.","ref":"readme.html#benchmarking"},{"type":"extras","title":"Lightning - Troubleshooting","doc":"Trouble with environment variables For troubleshooting custom environment variable configuration it's important to know how an Elixir app loads and modifies configuration. The order is as follows: Stuff in config.exs is loaded. That is then modified (think: overwritten ) by stuff your ENV-specific config: dev.exs , prod.exs or test.exs . That is then modified by runtime.exs which is where you are allowed to use System.env() Finally init/2 (if present in a child application) gets called (which takes the config which has been set in steps 1-3) when that child application is started during the parent app startup defined in application.ex . Problems with Postgres If you're having connecting issues with Postgres, check the database section of your .env to ensure the DB url is correctly set for your environment — note that composing a DB url out of other, earlier declared variables, does not work while using xargs . Problems with Debian If you're getting this error on debian == &gt; earmark_parser Compiling 1 file ( . yrl ) / usr / lib / erlang / lib / parsetools - 2.3 . 1 / include / yeccpre . hrl : no such file or directory could not compile dependency :earmark_parser , &quot;mix compile&quot; failed . You can recompile this dependency with &quot;mix deps.compile earmark_parser&quot; , update it with &quot;mix deps.update earmark_parser&quot; or clean it with &quot;mix deps.clean earmark_parser&quot; You need to install erlang development environment sudo apt install erlang-dev refer to this issue Problems with Docker Versions The build may not work on old versions of Docker and Docker compose. It has been tested against: Docker version 20.10 . 17 , build 100 c701 Docker Compose version v2 . 6.0 Problems with rambo When running mix compile.rambo on Apple Silicon (an Apple M1/M2, macarm , aarch64-apple-darwin ) and encountering the following error: ** (RuntimeError) Rambo does not ship with binaries for your environment. aarch64 - apple - darwin22 . 3.0 detected Install the Rust compiler so a binary can be prepared for you . lib / mix / tasks / compile . rambo . ex : 89 : Mix.Tasks.Compile.Rambo . compile! / 0 lib / mix / tasks / compile . rambo . ex : 51 : Mix.Tasks.Compile.Rambo . run / 1 ( mix 1.14 . 2 ) lib / mix / task . ex : 421 : anonymous fn / 3 in Mix.Task . run_task / 4 ( mix 1.14 . 2 ) lib / mix / cli . ex : 84 : Mix.CLI . run_task / 2 You can resolve this error by installing the Rust compiler using Homebrew. Run the following command in your terminal: brew install rust If you have already compiled Rambo explicitly via mix compile.rambo , and you are still seeing the following error: sh : / path_to_directory / Lightning / _build / dev / lib / rambo / priv / rambo : No such file or directory sh : line 0 : exec : / path_to_directory / Lightning / _build / dev / lib / rambo / priv / rambo : cannot execute : No such file or directory You can try renaming deps/rambo/priv/rambo-mac to deps/rambo/priv/rambo . If neither of the approaches above work, please raise an issue. Starting from scratch If you're actively working with docker, you start experiencing issues, and you would like to start from scratch you can clean up everything and start over like this: # To remove any ignored files and reset your .env to it&#39;s example git clean -fdx &amp;&amp; cp .env.example .env # You can skip the line below if you want to keep your database docker compose down --rmi all --volumes docker compose build --no-cache web &amp;&amp; \\ docker compose create --force-recreate docker compose run --rm web mix ecto.migrate docker compose up","ref":"readme.html#troubleshooting"},{"type":"extras","title":"Lightning - Project Configuration Quickstart","doc":"For help getting started with your OpenFn/Lightning Project and Workflows configuration, check out the Lightning Quickstart Guidance on OpenFn/Docs.","ref":"readme.html#project-configuration-quickstart"},{"type":"extras","title":"Lightning - Contribute to this project","doc":"First, thanks for being here! You're contributing to a digital public good that will always be free and open source and aimed at serving innovative NGOs, governments, and social impact organizations the world over! You rock. ❤️ FYI, Lightning is built in Elixir , harnessing the Phoenix Framework . Currently, the only unbundled dependency is a PostgreSQL database. If you'd like to contribute to this projects, follow the steps below: Assign yourself to an issue Read through the existing issues , assign yourself to the issue you have chosen. Leave a comment on the issue to let us know you'll be working on it, and if you have any questions of clarifications that would help you get started ask them there - we will get back to you as soon as possible. If there isn't already an issue for the feature you would like to contribute, please start a discussion in our community forum . Open a pull request Clone the Lightning repository, then fork it . Run through setting up your environment and make your changes. Make sure you have written your tests and updated /CHANGELOG.md (in the 'Unreleased' section, add a short description of the changes you are making, along with a link to your issue). Open a draft pull request by clicking &quot;Contribute &gt; Open Pull Request&quot; from your forked repository. Fill out the pull request template (this will be added automatically for you), then make sure to self-review your code and go through the 'Review checklist'. Don't worry about the QA checkbox, our product manager Amber will tick that once she has reviewed your PR. You can leave any notes for the reviewer in a comment. Once you're ready to submit a pull request, you can mark your draft PR as 'Ready for review' and assign @stuartc or @taylordowns2000.","ref":"readme.html#contribute-to-this-project"},{"type":"extras","title":"Lightning - Generating Documentation","doc":"You can generate the HTML and EPUB documentation locally using: mix docs and opening doc/index.html in your browser.","ref":"readme.html#generating-documentation"},{"type":"extras","title":"Lightning - Security and Standards","doc":"We use a host of common Elixir static analysis tools to help us avoid common pitfalls and make sure we keep everything clean and consistent. In addition to our test suite, you can run the following commands: mix format --check-formatted Code formatting checker, run again without the --check-formatted flag to have your code automatically changed. mix dialyzer Static analysis for type mismatches and other common warnings. See dialyxir . mix credo Static analysis for consistency, and coding standards. See Credo . mix sobelow Check for commonly known security exploits. See Sobelow . MIX_ENV=test mix coveralls Test coverage reporter. This command also runs the test suite, and can be used in place of mix test when checking everything before pushing your code. See excoveralls . For convenience there is a verify mix task that runs all of the above and defaults the MIX_ENV to test . For more guidance on security best practices for workflow automation implementations, check out OpenFn Docs: docs.openfn.org/documentation/getting-started/security","ref":"readme.html#security-and-standards"},{"type":"extras","title":"Lightning - Server Specs for Self-Hosting","doc":"For recommend server specifications for self-hosting of Lightning, check out this Community topic: community.openfn.org/t/specs-for-self-hosting-lightning/292","ref":"readme.html#server-specs-for-self-hosting"},{"type":"extras","title":"Lightning - Support","doc":"If you have any questions, feedback, or issues, please: Post on the OpenFn Community at community.openfn.org Open an issue directly on this Github Repo: github.com/OpenFn/Lightning/issues","ref":"readme.html#support"},{"type":"extras","title":"Deployment","doc":"Head to the Deploy section of our docs site to get started. See below for technical considerations and instructions.","ref":"deployment.html"},{"type":"extras","title":"Deployment - Encryption","doc":"Lightning enforces encryption at rest for Credentials, for which an encryption key must be provided when running in production. The key is expected to be a randomized set of bytes, 32 long; and Base64 encoded when setting the environment variable. There is a mix task that can generate keys in the correct shape for use as an environment variable: mix lightning.gen_encryption_key 0bJ9w+hn4ebQrsCaWXuA9JY49fP9kbHmywGd5K7k+/s= Copy your key (NOT THIS ONE) and set it as PRIMARY_ENCRYPTION_KEY in your environment.","ref":"deployment.html#encryption"},{"type":"extras","title":"Deployment - Environment Variables","doc":"Note that for secure deployments, it's recommended to use a combination of secrets and configMaps to generate secure environment variables. ADAPTORS_PATH - where you store your locally installed adaptors DISABLE_DB_SSL - in production the use of an SSL conntection to Postgres is required by default, setting this to &quot;true&quot; allows unencrypted connections to the database. This is strongly discouraged in real production environment. K8S_HEADLESS_SERVICE - this environment variable is automatically set if you're running on GKE and it is used to establish an Erlang node cluster. Note that if you're not using Kubernetes, the &quot;gossip&quot; strategy is used for establish clusters. LISTEN_ADDRESS &quot; - the address the web server should bind to, defaults to 127.0.0.1 to block access from other machines. LOG_LEVEL - how noisy you want the logs to be (e.g. debug , info ) MAX_RUN_DURATION - the maximum time (in milliseconds) that jobs are allowed to run (keep this below your termination_grace_period if using kubernetes) MIX_ENV - your mix env, likely prod for deployment NODE_ENV - node env, likely production for deployment ORIGINS - the allowed origins for web traffic to the backend PORT - the port your Phoenix app runs on PRIMARY_ENCRYPTION_KEY - a base64 encoded 32 character long string. See Encryption . SCHEMAS_PATH - path to the credential schemas that provide forms for different adaptors SECRET_KEY_BASE - a secret key used as a base to generate secrets for encrypting and signing data. SENTRY_DSN - if using Sentry for error monitoring, your DSN URL_HOST - the host, used for writing urls (e.g., demo.openfn.org ) URL_PORT - the port, usually 443 for production URL_SCHEME - the scheme for writing urls, (e.g., https ) Google Using your Google Cloud account, provision a new OAuth 2.0 Client with the 'Web application' type. Set the callback url to: https://&lt;ENDPOINT DOMAIN&gt;/authenticate/callback . Replacing ENDPOINT DOMAIN with the host name of your instance. Once the client has been created, get/download the OAuth client JSON and set the following environment variables: GOOGLE_CLIENT_ID - Which is client_id from the client details. GOOGLE_CLIENT_SECRET - client_secret from the client details.","ref":"deployment.html#environment-variables"},{"type":"extras","title":"Benchmarking","doc":"Execute the following steps to run a benchmark on Lightning: Make sure you have k6 installed locally. If you're using asdf you can run asdf install in the project root. Spin up your Lightning local instance Run the demo setup script: mix run --no-start priv/repo/demo.exs The webhookURL is already set to default to the webhook created in the demo data In another terminal (do not stop the Lightning server) run the benchmarking/script.js file using the following command k6 run benchmarking/script.js If the script exits succesfully, this means the app met the defined performance thresholds. To collect the benchmarking data in a CSV file, run the previous command with the --out filename option. k6 run --out csv=test_results.csv benchmarking/script.js See results output for other available output formats.","ref":"benchmarking.html"},{"type":"extras","title":"Provisioning","doc":"Lightning offers the ability to configure projects via the HTTP API. By providing a JSON document with the desired configuration, the project can be configured to your liking.","ref":"provisioning.html"},{"type":"extras","title":"Provisioning - Using the API","doc":"The API is available at /api/provision , and expects an application/json Content-Type. Authentication The API requires a valid auth token to be provided in the Authorization header. Example Request curl -X POST \\ -d @project.json \\ -H &quot;Authorization: Bearer $TOKEN&quot; \\ -H &quot;Content-Type: application/json&quot; \\ $ENDPOINT/api/provision","ref":"provisioning.html#using-the-api"},{"type":"extras","title":"Provisioning - Document Structure","doc":"The provisioning document is a JSON document with the project at the root. All entities must have an id field, which is a UUIDv4 string. In the case of new entities, this must be generated by the client. The API is idempotent, and the distinction between creating and updating is determined by the presence of the id field. { &quot;id&quot;: &quot;&lt;&lt;project-id&gt;&gt;&quot;, &quot;name&quot;: &quot;&lt;&lt;project-name&gt;&gt;&quot;, &quot;workflows&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;workflow-id&gt;&gt;&quot;, &quot;name&quot;: &quot;&lt;&lt;workflow-name&gt;&gt;&quot;, &quot;jobs&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;job-id&gt;&gt;&quot;, &quot;name&quot;: &quot;&lt;&lt;job-name&gt;&gt;&quot;, &quot;body&quot;: &quot;&lt;&lt;job-body&gt;&gt;&quot;, &quot;adaptor&quot;: &quot;&lt;&lt;adaptor-name&gt;&gt;&quot;, &quot;enabled&quot;: true } // ... more jobs ], &quot;triggers&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;trigger-id&gt;&gt;&quot;, &quot;name&quot;: &quot;&lt;&lt;trigger-name&gt;&gt;&quot;, &quot;type&quot;: &quot;webhook&quot; } // ... more triggers ], &quot;edges&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;edge-id&gt;&gt;&quot;, &quot;source_trigger_id&quot;: &quot;&lt;&lt;trigger-id&gt;&gt;&quot;, &quot;target_job_id&quot;: &quot;&lt;&lt;job-id&gt;&gt;&quot; } // ... more edges ] } // ... more workflows ] }","ref":"provisioning.html#document-structure"},{"type":"extras","title":"Provisioning - API Behaviour","doc":"The API expects all existing entities to be provided in the provisioning document. If the document provided is out of date (e.g. a new job was added on the server), a new reference document should be fetched and the changes applied to it. Deleting Entities Entities can be deleted by setting the disabled key to true . Example: { &quot;id&quot;: &quot;&lt;&lt;project-id&gt;&gt;&quot;, &quot;workflows&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;workflow-id&gt;&gt;&quot;, &quot;jobs&quot;: [ { &quot;id&quot;: &quot;&lt;&lt;job-id&gt;&gt;&quot;, &quot;delete&quot;: true // &lt;== delete this job } ] } ] }","ref":"provisioning.html#api-behaviour"},{"type":"extras","title":"Provisioning - Relationship with Projects as Code","doc":"The Projects as Code spec is a superset of the provisioning API. Projects as Code allows for the user to specify a key for each entity, which makes it easier to manage the project in the future. For example: name: my-project workflows: workflow-one: jobs: job-one: body: | console.log(&quot;Hello World&quot;); adaptor: '@openfn/language-common' enabled: true triggers: trigger-one: type: webhook edges: - source_trigger: trigger-one target_job: job-one The above YAML document illustrates the use of keys being used to identify entities. Allowing the user to provision the same project to multiple environments. The API is unaware of 'keys', and expects IDs to be provided by the client. In order to convert the above YAML document to a provisioning document, the CLI uses a local state file (if available) to map the keys to UUIDs. Using the example above a state file might look like this: { &quot;id&quot;: &quot;f6ba9a8c-b687-473a-908e-e250686f1eed&quot;, &quot;workflows&quot;: { &quot;workflow-one&quot;: { &quot;id&quot;: &quot;f206aa85-4fce-492e-94eb-ffd32c75d178&quot;, &quot;jobs&quot;: {}, &quot;triggers&quot;: {} } } } The state file shows that the project and workflow already exist, but the job, trigger and edge do not. In order to create these new entities, IDs will be applied them. On a successful application of the provisioning document, the state file will be updated to reflect the new IDs and entities. { &quot;id&quot;: &quot;f6ba9a8c-b687-473a-908e-e250686f1eed&quot;, &quot;workflows&quot;: { &quot;workflow-one&quot;: { &quot;id&quot;: &quot;f206aa85-4fce-492e-94eb-ffd32c75d178&quot;, &quot;jobs&quot;: { &quot;job-one&quot;: { &quot;id&quot;: &quot;18ed71de-caf8-4822-aefc-5b19351f4016&quot; } }, &quot;triggers&quot;: { &quot;trigger-one&quot;: { &quot;id&quot;: &quot;e0b9f357-9cf9-4206-9924-4d5674aad830&quot; } }, &quot;edges&quot;: [ { &quot;id&quot;: &quot;c239d994-6662-4637-90f8-0293c924b461&quot;, &quot;source_trigger_id&quot;: &quot;e0b9f357-9cf9-4206-9924-4d5674aad830&quot;, &quot;target_job_id&quot;: &quot;18ed71de-caf8-4822-aefc-5b19351f4016&quot; } ] } } }","ref":"provisioning.html#relationship-with-projects-as-code"},{"type":"extras","title":"Changelog","doc":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","ref":"changelog.html"},{"type":"extras","title":"Changelog - [Unreleased]","doc":"Added Changed Fixed","ref":"changelog.html#unreleased"},{"type":"extras","title":"Changelog - [v0.9.0] - 2023-09-15","doc":"Added Add favicons #1079 Validate job name in placeholder job node #1021 Bring credential delete in line with new GDPR interpretation #802 Make job names unique per workflow #1053 Changed Enhanced the job editor/inspector interface #1025 Fixed Finished run never appears in inspector when it fails #1084 Cannot delete some credentials via web UI #1072 Stopped the History table from jumping when re-running a job #1100 Fixed the &quot;+&quot; button when adding a job to a workflow #1093","ref":"changelog.html#v0-9-0-2023-09-15"},{"type":"extras","title":"Changelog - [v0.8.3] - 2023-09-05","doc":"Added Render error when workflow diagram node is invalid #956 Changed Restyle history table #1029 Moved Filter and Search controls to the top of the history page #1027 Fixed Output incorrectly shows &quot;this run failed&quot; when the run hasn't yet finished #1048 Wrong label for workflow card timestamp #1022","ref":"changelog.html#v0-8-3-2023-09-05"},{"type":"extras","title":"Changelog - [v0.8.2] - 2023-08-31","doc":"Added Changed Fixed Lack of differentiation between top of job editor modal and top menu was disorienting. Added shadow.","ref":"changelog.html#v0-8-2-2023-08-31"},{"type":"extras","title":"Changelog - [v0.8.1] - 2023-08-31","doc":"Added Changed Moved Save and Run button to bottom of the Job edit modal #1026 Allow a manual workorder to save the workflow before creating the workorder #959 Fixed","ref":"changelog.html#v0-8-1-2023-08-31"},{"type":"extras","title":"Changelog - [v0.8.0] - 2023-08-31","doc":"Added Introduces Github sync feature, users can now setup our github app on their instance and sync projects using our latest portability spec #970 Support Backup Codes for Multi-Factor Authentication 937 Log a warning in the console when the Editor/docs component is given latest #958 Improve feedback when a Workflow name is invalid #961 Show that the jobs' body is invalid #957 Reimplement skipped CredentialLive tests #962 Reimplement skipped WorkflowLive.IndexTest test #964 Show GitHub installation ID and repo link to help setup/debugging for version control 1059 Changed Fixed Fixed issue where job names were being incorrectly hyphenated during project.yaml export #1050 Allows the demo script to set a project id during creation to help with cli deploy/pull/Github integration testing. Fixed demo project_repo_connection failing after nightly demo resets 1058 Fixed an issue where the monaco suggestion tooltip was offset from the main editor 1030","ref":"changelog.html#v0-8-0-2023-08-31"},{"type":"extras","title":"Changelog - [v0.7.3] - 2023-08-15","doc":"Added Changed Version control in project settings is now named Export your project #1015 Fixed Tooltip for credential select in Job Edit form is cut off #972 Dataclip type and state assembly notice for creating new dataclip dropped during refactor #975","ref":"changelog.html#v0-7-3-2023-08-15"},{"type":"extras","title":"Changelog - [v0.7.2] - 2023-08-10","doc":"Added Changed NodeJs security patch 1009 Fixed","ref":"changelog.html#v0-7-2-2023-08-10"},{"type":"extras","title":"Changelog - [v0.7.1] - 2023-08-04","doc":"Added Changed Fixed Fixed flickery icons on new workflow job creation.","ref":"changelog.html#v0-7-1-2023-08-04"},{"type":"extras","title":"Changelog - [v0.7.0] - 2023-08-04","doc":"Added Project owners can require MFA for their users 892 Changed Moved to Elixir 1.15 and Erlang 26.0.2 to sort our an annoying ElixirLS issue that was slowing down our engineers. Update Debian base to use bookworm (Debian 12) for our Docker images Change new credential modal to take up less space on the screen #931 Placeholder nodes are now purely handled client-side Fixed Fix issue creating a new credential from the Job editor where the new credential was not being set on the job. #951 Fix issue where checking a credential type radio button shows as unchecked on first click. #976 Return the pre-filled workflow names #971 Fix version reporting and external reset_demo() call via Application.spec() #1010 Fixed issue where entering a placeholder name through the form would result an in unsaveable workflow #1001 Ensure the DownloadController checks for authentication and authorisation.","ref":"changelog.html#v0-7-0-2023-08-04"},{"type":"extras","title":"Changelog - [v0.7.0-pre5] - 2023-07-28","doc":"Added Changed Unless otherwise specified, only show workorders with activity in last 14 days #968 Fixed","ref":"changelog.html#v0-7-0-pre5-2023-07-28"},{"type":"extras","title":"Changelog - [v0.7.0-pre4] - 2023-07-27","doc":"Added Changed Don't add cast fragments if the search_term is nil #968 Fixed","ref":"changelog.html#v0-7-0-pre4-2023-07-27"},{"type":"extras","title":"Changelog - [v0.7.0-pre3] - 2023-07-26","doc":"Added Changed Fixed Fixed an issue with newly created edges that prevented downstream jobs 977","ref":"changelog.html#v0-7-0-pre3-2023-07-26"},{"type":"extras","title":"Changelog - [v0.7.0-pre2] - 2023-07-26","doc":"Note that this is a pre-release with a couple of known bugs that are tracked in the Nodes and Edges epic . Added Added ability for a user to enable MFA on their account; using 2FA apps like Authy, Google Authenticator etc #890 Write/run sql script to convert triggers #875 Export projects as .yaml via UI #249 Changed In v0.7.0 we change the underlying workflow building and execution infrastructure to align with a standard &quot;nodes and edges&quot; design for directed acyclic graphs (DAGs). Make sure to run the migrations! 793 Fixed Propagate url pushState/changes to Workflow Diagram selection #944 Fix issue when deleting nodes from the workflow editor #830 Fix issue when clicking a trigger on a new/unsaved workflow #954","ref":"changelog.html#v0-7-0-pre2-2023-07-26"},{"type":"extras","title":"Changelog - [0.6.7] - 2023-07-13","doc":"Added Add feature to bulk rerun work orders from a specific step in their workflow; e.g., &quot;rerun these 50 work orders, starting each at step 4.&quot; #906 Changed Fixed Oban exception: &quot;value too long&quot; when log lines are longer than 255 chars #929","ref":"changelog.html#0-6-7-2023-07-13"},{"type":"extras","title":"Changelog - [0.6.6] - 2023-06-30","doc":"Added Add public API token to the demo site setup script Check and renew OAuth credentials when running a job #646 Fixed Remove google sheets from adaptors list until supporting oauth flow #792 Remove duplicate google sheets adaptor display on credential type picklist #663 Fix demo setup script for calling from outside the app on Kubernetes deployments #917","ref":"changelog.html#0-6-6-2023-06-30"},{"type":"extras","title":"Changelog - [0.6.5] - 2023-06-22","doc":"Added Ability to rerun workorders from start by selecting one of more of them from the History page and clicking the &quot;Rerun&quot; button. #659 Fixed Example runs for demo incorrect #856","ref":"changelog.html#0-6-5-2023-06-22"},{"type":"extras","title":"Changelog - [0.6.3] - 2023-06-15","doc":"Fixed Prevent saving null log lines to the database, fix issue with run display #866","ref":"changelog.html#0-6-3-2023-06-15"},{"type":"extras","title":"Changelog - [0.6.2] - 2023-06-09","doc":"Fixed Fixed viewer permissions for delete workflow Fixed bug with workflow cards #859","ref":"changelog.html#0-6-2-2023-06-09"},{"type":"extras","title":"Changelog - [0.6.1] - 2023-06-08","doc":"Fixed Fixed bug with run logs #864 Correctly stagger demo runs to maintain order #856 Remove Timex use from SetupUtils in favor of DateTime to fix issue when calling it in escript.","ref":"changelog.html#0-6-1-2023-06-08"},{"type":"extras","title":"Changelog - [0.6.0]- 2023-04-12","doc":"Added Create sample runs when generating sample workflow #821 Added a provisioning api for creating and updating projects and their workflows See: PROVISIONING.md #641 Add ability for a superuser to schedule deletion, cancel deletion, and delete projects #757 Add ability for a project owner to schedule deletion, cancel deletion, and delete projects #746 Changed Ability to store run log lines as rows in a separate table #514 Fixed Incorrect project digest queries #768 ] Fix issue when purging deleted users #747 Generate a random name for Workflows when creating one via the UI. #828 Handle error when deleting a job with runs. #814","ref":"changelog.html#0-6-0-2023-04-12"},{"type":"extras","title":"Changelog - [0.5.2]","doc":"Added Add workflow_edges table in preparation for new workflow editor implementation #794 Stamped credential_id on run directly for easier auditing of the history interface. Admins can now see which credential was used to run a run. #800 Better errors when using magic functions: &quot;no magic yet&quot; and &quot;check credential&quot; #812 Changed The delete-project function now delete all associated activities #759 Fixed","ref":"changelog.html#0-5-2"},{"type":"extras","title":"Changelog - [0.5.1] - 2023-04-12","doc":"Added Added ability to create and revoke personal API tokens #147 Add last-used at to API tokens #722 Improved &quot;save&quot; for job builder; users can now press Ctrl + S or ⌘ + S to save new or updated jobs job panel will not close. (Click elsewhere in the canvas or click the &quot;Close&quot; button to close.) #568 Add filtered search params to the history page URL #660 Changed The secret scrubber now ignores booleans 690 Fixed The secret scrubber now properly handles integer secrets from credentials 690 Updated describe-package dependency, fixing sparkles in adaptor-docs 657 Clicks on the workflow canvas were not lining up with the nodes users clicked on; they are now 733 Job panel behaves better when collapsed 774","ref":"changelog.html#0-5-1-2023-04-12"},{"type":"extras","title":"Changelog - [0.5.0] - 2023-04-03","doc":"Added Magic functions that fetch real metadata from connected systems via credentials and suggest completions in the job builder (e.g., pressing control-space when setting the orgUnit attribute for a DHIS2 create operation will pull the actual list of orgUnits with human readable labels and fill in their orgUnit codes upon enter.) 670 A &quot;metadata explorer&quot; to browse actual system metadata for connected instances. 658 Resizable job builder panel for the main canvas/workflow view. 681 Changed Display timezone for cron schedule—it is always UTC. #716 Instance administrators can now configure the interval between when a project owner or user requests deletion and when these records are purged from the database. It defaults to 7, but by providing a PURGE_DELETED_AFTER_DAYS environment variable the grace period can be altered. Note that setting this variable to 0 will make automatic purging never occur but will still make &quot;deleted&quot; projects and users unavailable. This has been requested by certain organizations that must retain audit logs in a Lightning instance. 758 Fixed Locked CLI version to @openfn/cli@0.0.35 . #761","ref":"changelog.html#0-5-0-2023-04-03"},{"type":"extras","title":"Changelog - [0.4.8] - 2023-03-29","doc":"Added Added a test harness for monitoring critical parts of the app using Telemetry #654 Changed Set log level to info for runs. Most of the debug logging is useful for the CLI, but not for Lightning. In the future the log level will be configurable at instance &gt; project &gt; job level by the superuser and any project admin . Renamed license file so that automagic github icon is less confusing Fixed Broken links in failure alert email #732 Registration Submission on app.openfn.org shows internal server error in browser #686 Run the correct runtime install mix task in Dockerfile-dev #541 Users not disabled when scheduled for deletion #719","ref":"changelog.html#0-4-8-2023-03-29"},{"type":"extras","title":"Changelog - [0.4.6] - 2023-03-23","doc":"Added Implement roles and permissions across entire app #645 Fix webhook URL ( https://&lt;&lt;HOST_URL&gt;&gt;/i/cae544ab-03dc-4ccc-a09c-fb4edb255d7a ) for the OpenHIE demo workflow 448 Phoenix Storybook for improved component development Load test for webhook endpoint performance #645 Notify user via email when they're added to a project #306 Added notify user via email when their account is created #307 Changed Improved errors when decoding encryption keys for use with Cloak. #684 Allow users to run ANY job with a custom input. #629 Fixed Ensure JSON schema form inputs are in the same order as they are written in the schema #685","ref":"changelog.html#0-4-6-2023-03-23"},{"type":"extras","title":"Changelog - [0.4.4] - 2023-03-10","doc":"Added Users can receive a digest email reporting on a specified project. #638 #585 Changed Fixed","ref":"changelog.html#0-4-4-2023-03-10"},{"type":"extras","title":"Changelog - [0.4.3] - 2023-03-06","doc":"Added Tooltips on Job Builder panel #650 Changed Upgraded to Phoenix 1.7 (3945856) Fixed Issue with FailureAlerter configuration missing in prod mode.","ref":"changelog.html#0-4-3-2023-03-06"},{"type":"extras","title":"Changelog - [0.4.2] - 2023-02-24","doc":"Added A user can change their own email #247 Added a SCHEMAS_PATH environment variable to override the default folder location for credential schemas #604 Added the ability to configure Google Sheets credentials #536 Function to import a project #574 Changed Users cannot register if they have not selected the terms and conditions #531 Fixed Jobs panel slow for first open after restart #567","ref":"changelog.html#0-4-2-2023-02-24"},{"type":"extras","title":"Changelog - [0.4.0] - 2023-02-08","doc":"Added Added a Delete job button in Inspector Filter workflow runs by text/value in run logs or input body Drop &quot;configuration&quot; key from Run output dataclips after completion Ability to 'rerun' a run from the Run list Attempts and Runs update themselves in the Runs list Configure a project and workflow for a new registering user Run a job with a custom input Added plausible analytics Allow user to click on Webhook Trigger Node to copy webhook URL on workflow diagram Allow any user to delete a credential that they own Create any credential through a form except for OAuth Refit all diagram nodes on browser and container resize Enable distributed Erlang, allowing any number of redundant Lightning nodes to communicate with each other. Users can set up realtime alerts for a project Changed Better code-assist and intelliense in the Job Editor Updated @openfn/workflow-diagram to 0.4.0 Make plus button part of job nodes in Workflow Diagram Updated @openfn/adaptor-docs to 0.0.5 Updated @openfn/describe-package to 0.0.10 Create an follow a manual Run from the Job Inspector View all workflows in a project on the workflows index page Move @openfn/workflow-diagram into the application, the NPM module is now deprecated. Remove workflow name from first node Move the used parts of @openfn/engine into the application. [BREAKING CHANGE] Ported mix openfn.install.runtime into application, use mix lightning.install_runtime . [BREAKING CHANGE] Introduced @openfn/cli as the new runtime for Jobs Rename a workflow through the page heading Hide the dataclips tab for beta Make adaptor default to common@latest Remove jobs list page Better error handling in the docs panel Disable credential ownership transfer in dev and prod environments Add project settings page Change Workorder filters to apply to the aggregate state of the workorder and not the run directly Enable jobs by default Set log level to info Add Beta checkbox to register page User roles and permissions Fixed Don't consider disabled jobs when calculating subsequent runs Fixed overflow on Job Editor Tooltips Fixed auto-scroll when adding a new snippet in the Job Editor Fixed common operation typings in Job Editor","ref":"changelog.html#0-4-0-2023-02-08"},{"type":"extras","title":"Changelog - [0.3.1] - 2022-11-22","doc":"Fixed Fixed bug that attempted to execute HTML scripts in dataclips Fixed bug that prevented workorders from displaying in the order of their last run, descending. Remove alerts after set timeout or close","ref":"changelog.html#0-3-1-2022-11-22"},{"type":"extras","title":"Changelog - [0.3.0] - 2022-11-21","doc":"Added Add seed data for demo site Create adaptor credentials through a form Configure cron expressions through a form View runs grouped by workorders and attempts Run an existing Job with any dataclip uuid from the Job form Changed Redirect users to projects list page when they click on Admin Settings menu Move job, project, input and output Dataclips to Run table Reverse the relationship between Jobs and Triggers. Triggers now can exist on their own; setting the stage for branching and merging workflows Updated Elixir and frontend dependencies [BREAKING CHANGE] Pipeline now uses WorkOrders, previous data is not compatible. Runs, Dataclips and Attempts now all correctly use usec resolution timestamps. Upgraded LiveView to 0.18.0 Upgraded Elixir to 1.14.1 and OTP 25 Workflow Job editor now behaves like a panel Split JobLive.InspectorFormComponent into different plug-able subcomponents Ensure new jobs with cron triggers receive a default frequency Webhooks are now referenced by the trigger id instead of job id. Filter runs by status Filter runs by workflow Filter runs by date View a job run from the runs history View latest matching inputs to run a job with","ref":"changelog.html#0-3-0-2022-11-21"},{"type":"extras","title":"Changelog - [0.2.0] - 2022-09-12","doc":"Changed [BREAKING CHANGE] Add Workflow model, Jobs now belong to a Workflow This is a breaking change to the schema. Use Node.js 18, soon to be in LTS. Visualize success/fail triggers in workflow diagram. Move WorkflowDiagram related actions from DashboardLive into WorkflowLive Move WorkflowDiagram component into liveview, so that we can subscribe to channels (i.e. updating of the diagram when someone changes something). Integrate @openfn/workflow-diagram@0.0.8 and use the new Store interface for updating it. Remove component_mounted event from WorkflowDiagram hook, using a MutationObserver and a Base64 encoded JSON payload. Fixed an issue where the compiler component would try and load a 'nothing adaptor', added a condition to check an adaptor is actually selected. Removed previous Workflow CTE queries, replaced by the introduction of the Workflow model, see ( https://github.com/OpenFn/Lightning/blob/53da6883483e7d8d078783f348da327d1dd72d20/lib/lightning/workflows.ex#L111-L119 ).","ref":"changelog.html#0-2-0-2022-09-12"},{"type":"extras","title":"Changelog - [0.1.13] - 2022-08-29","doc":"Added Allow administrators to configure OIDC providers for authentication (note that this is just for authenticating, not yet for creating new accounts via OIDC) Add Monaco editor to the step/job panel Allow users to delete their own accounts. Schedule their user and credentials data for deletion when they do. Allow superusers to delete a user account. Schedule the user's credentials and user data for deletion when they do. If a user is scheduled for deletion, disable their account and prevent them from logging in. The 'User profile' and 'Credentials' page now have a sidebar menu Changed Project users now have one of the following roles: viewer, editor, admin, owner Users only have the following roles: user, superuser","ref":"changelog.html#0-1-13-2022-08-29"},{"type":"extras","title":"Changelog - [0.1.12] - 2022-08-15","doc":"Added Transfer credential ownership to another user. Create credentials via a form interface* Show &quot;projects with access&quot; in credentials list view. Show job in runs list and run view. Added roles and permissions to workflows and history page #645 *The form is defined by a JSON schema provided by an adaptor, in most cases: e.g., language-dhis2 provides a single schema which defines the required attributes for state.configuration , while language-common provides multiple credential schemas like &quot;oauth&quot; or &quot;basic auth&quot; which define attributes for state.configuration and which might be used by lots of different jobs.) Fixed User menu (top right) appears on top of all other components. User profile screen integrated with the rest of the liveview app.","ref":"changelog.html#0-1-12-2022-08-15"},{"type":"extras","title":"Changelog - [0.1.11] - 2022-08-05","doc":"Fixed Fixed logging in Runner when :debug log level used; note that this caused crashes in Oban","ref":"changelog.html#0-1-11-2022-08-05"},{"type":"extras","title":"Changelog - [0.1.10] - 2022-08-05","doc":"Added Credential auditing Build/version information display for easier debugging Fixed Fixed a bug that enqueued cron-triggered jobs even when they were disabled","ref":"changelog.html#0-1-10-2022-08-05"},{"type":"extras","title":"Changelog - [0.1.9] - 2022-07-27","doc":"Added Navigate to user profile or credentials page and log out through the user icon dropdown Create and edit dataclips Add a production tag to credentials View a dropdown of operations and their description for the language-common v2.0.0-rc2 adaptor (this pattern to be rolled out across adaptors) Changed Navigate between projects through a project picker on the navbar Fixed Run Lightning with docker Security Sensitive credential values are scrubbed from run logs All credentials are encrypted at REST","ref":"changelog.html#0-1-9-2022-07-27"},{"type":"extras","title":"Changelog - [0.1.7] - 2022-06-24","doc":"Added Run a job with a cron trigger Queue jobs via Oban/Postgres Edit jobs via the workflow canvas","ref":"changelog.html#0-1-7-2022-06-24"},{"type":"extras","title":"Changelog - [0.1.6] - 2022-06-07","doc":"Added Register, log in and log out of an account Allow superusers and admin users to create projects Allow admin users to create or disable a user’s account Allow superusers for local deployments to create users and give them access to project spaces Create and edit a job with a webhook, flow/fail or cron trigger Create and edit credentials for a job Copy a job's webhook URL View all workflows in a project visually Deploy lightning locally with Docker Enable a job to automatically process incoming requests Run a job with a webhook or flow/fail trigger View job runs along with their logs, exit code, start and end time View data clips that have initiated job runs (http requests for webhooks, run results) Changed - Removed -","ref":"changelog.html#0-1-6-2022-06-07"}]